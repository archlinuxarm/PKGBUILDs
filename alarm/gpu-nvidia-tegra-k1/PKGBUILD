# Maintainer: RaumZeit <raumzeit@gmx.net>

buildarch=4
pkgbase=gpu-nvidia-tegra-k1
_nv_release=r21_Release_v4.0
_nv_version=21.4
_nv_release=0
pkgver="${_nv_version}.${_nv_release}"
pkgrel=3
pkgdesc="NVIDIA proprietary Tegra K1 GPU drivers for Tegra K1 powered SoC"

# filesystem prefix for the include files and license
_install_prefix=/usr

url="https://developer.nvidia.com/embedded/linux-tegra"

arch=('armv7h')
license=('proprietary')

source=("http://developer.download.nvidia.com/embedded/L4T/${_nv_release}/Tegra124_Linux_R${pkgver}_armhf.tbz2"
        51-nvrm.rules
        egl.pc
        glesv2.pc)
sha256sums=('f3539746e307751d0f6a0a9f827ae16a7514c5aeb95f43cc618a317aacb06f69'
            'bdff89e517cd8cbba5f9e9d960bc79d7c2740bf563ff6aaab789a13a547f08fe'
            '81ea8cf2c759edc19fbecdbaee3ddf22ab74d82e119da31ea9ddc8d1eb038ab4'
            'ac63bec624005f948386f427ea7e2d679662146383b5fed27fddd6d8a327afa1')

prepare() {
  cd "${srcdir}"/Linux_for_Tegra/nv_tegra/
  tar xjf nvidia_drivers.tbz2
}

package_gpu-nvidia-tegra-k1-nvrm() {
  pkgdesc="NVIDIA binary nvrm daemon and libraries for Tegra K1"
  depends=('linux-tegra-k1')
  provides=('gpu-nvidia-tegra-k1="${pkgver}"')
  conflicts=('gpu-nvidia-tegra-k1')

  cd "${srcdir}/Linux_for_Tegra/nv_tegra"

  mkdir -p "${pkgdir}${_install_prefix}/lib"

  # copy other tegra specific libs
  for lib in  libnvapputil.so \
              libnvavp.so \
              libnvdc.so \
              libnvddk_2d_v2.so \
              libnvddk_vic.so \
              libnvmm.so \
              libnvmm_camera_v3.so \
              libnvmm_contentpipe.so \
              libnvmm_parser.so \
              libnvmm_utils.so \
              libnvmmlite.so \
              libnvmmlite_audio.so \
              libnvmmlite_image.so \
              libnvmmlite_utils.so \
              libnvmmlite_video.so \
              libnvodm_imager.so \
              libnvodm_query.so \
              libnvos.so \
              libnvparser.so \
              libnvrm.so \
              libnvrm_graphics.so \
              libnvsm.so \
              libnvtestio.so \
              libnvtestresults.so \
              libnvtnr.so \
              libnvtvmr.so \
              libnvwinsys.so \
              libtegrav4l2.so
  do
    cp usr/lib/arm-linux-gnueabihf/tegra/${lib} "${pkgdir}${_install_prefix}/lib"
  done

  for lib in  libnvidia-eglcore.so \
              libnvidia-glcore.so \
              libnvidia-glsi.so \
              libnvidia-rmapi-tegra.so \
              libnvidia-tls.so
  do
    cp usr/lib/arm-linux-gnueabihf/tegra/"${lib}.${_nv_version}" "${pkgdir}${_install_prefix}/lib/"
    ln -s "${_install_prefix}/lib/${lib}.${_nv_version}" "${pkgdir}${_install_prefix}/lib/${lib}"
  done

  # copy license
  mkdir -p "${pkgdir}${_install_prefix}/share/licenses/nvidia-tegra-k1"
  cp LICENSE "$pkgdir${_install_prefix}/share/licenses/nvidia-tegra-k1/"

  mkdir -p "${pkgdir}/etc/ld.so.conf.d"
  echo "${_install_prefix}/lib" > "${pkgdir}/etc/ld.so.conf.d/$pkgbase.conf"

  # copy udev rules
  mkdir -p "${pkgdir}/usr/lib/udev/rules.d/"
  install -D -m0644 "${srcdir}"/51-nvrm.rules "${pkgdir}/usr/lib/udev/rules.d/51-nvrm.rules"

}

package_gpu-nvidia-tegra-k1-x11() {
  pkgdesc="NVIDIA binary OpenGL|ES libraries and X11 drivers for Tegra K1"
  depends=('gpu-nvidia-tegra-k1="${pkgver}"' 'X-ABI-VIDEODRV_VERSION=19')
  provides=('libgl' 'GLX=1.4' 'EGL=1.4' 'OpenGL=4.4' 'OpenGLES=3.1')
  conflicts=('libgl' 'GLX' 'EGL' 'OpenGL' 'OpenGLES')
  cd "${srcdir}/Linux_for_Tegra/nv_tegra"

  # prepare tegra libgl stuff
  mkdir -p "${pkgdir}${_install_prefix}/lib/nvidia"
  mkdir -p "${pkgdir}${_install_prefix}/lib/pkgconfig"

  # first libGL
  cp -r usr/lib/arm-linux-gnueabihf/tegra/libGL.so.1 "${pkgdir}${_install_prefix}/lib/nvidia/libGL.so.1"
  ln -s "${_install_prefix}/lib/nvidia/libGL.so.1" "${pkgdir}${_install_prefix}/lib/libGL.so.1.2.0"
  ln -s "${_install_prefix}/lib/libGL.so.1.2.0" "${pkgdir}${_install_prefix}/lib/libGL.so.1"
  ln -s "${_install_prefix}/lib/libGL.so.1.2.0" "${pkgdir}${_install_prefix}/lib/libGL.so"

  # second libEGL, and libGLES
  cp -r usr/lib/arm-linux-gnueabihf/tegra-egl/lib* "${pkgdir}${_install_prefix}/lib/nvidia/"
  ln -s "${_install_prefix}/lib/nvidia/libEGL.so.1" "${pkgdir}${_install_prefix}/lib/libEGL.so.1.0.0"
  ln -s "${_install_prefix}/lib/libEGL.so.1.0.0" "${pkgdir}${_install_prefix}/lib/libEGL.so.1"
  ln -s "${_install_prefix}/lib/libEGL.so.1.0.0" "${pkgdir}${_install_prefix}/lib/libEGL.so"
  ln -s "${_install_prefix}/lib/nvidia/libGLESv1_CM.so.1" "${pkgdir}${_install_prefix}/lib/libGLESv1_CM.so.1.1.0"
  ln -s "${_install_prefix}/lib/libGLESv1_CM.so.1.1.0" "${pkgdir}${_install_prefix}/lib/libGLESv1_CM.so.1"
  ln -s "${_install_prefix}/lib/libGLESv1_CM.so.1.1.0" "${pkgdir}${_install_prefix}/lib/libGLESv1_CM.so"
  ln -s "${_install_prefix}/lib/nvidia/libGLESv2.so.2" "${pkgdir}${_install_prefix}/lib/libGLESv2.so.2.0.0"
  ln -s "${_install_prefix}/lib/libGLESv2.so.2.0.0" "${pkgdir}${_install_prefix}/lib/libGLESv2.so.2"
  ln -s "${_install_prefix}/lib/libGLESv2.so.2.0.0" "${pkgdir}${_install_prefix}/lib/libGLESv2.so"

  # install pkg-config files
  install -m0644 "${srcdir}"/{egl,glesv2}.pc "${pkgdir}${_install_prefix}/lib/pkgconfig/"

  # copy X11 drivers
  mkdir -p "${pkgdir}/usr/lib/xorg/modules/drivers"
  mkdir -p "${pkgdir}/usr/lib/xorg/modules/extensions"
  cp usr/lib/arm-linux-gnueabihf/tegra/libglx.so "${pkgdir}/${_install_prefix}/lib/"
  cp -r usr/lib/xorg/modules/drivers/nvidia_drv.so "${pkgdir}/usr/lib/xorg/modules/drivers/"
  ln -s ${_install_prefix}/lib/libglx.so "${pkgdir}/usr/lib/xorg/modules/extensions/libglx.so"

}

package_gpu-nvidia-tegra-k1-libcuda() {
  depends=('gpu-nvidia-tegra-k1="${pkgver}"')
  provides=('libcuda')
  conflicts=('libcuda')

  cd "${srcdir}/Linux_for_Tegra/nv_tegra"

  mkdir -p "${pkgdir}${_install_prefix}/lib/cuda"

  cp usr/lib/arm-linux-gnueabihf/tegra/libcuda.so.1.1 "${pkgdir}/${_install_prefix}/lib/cuda/"

  ln -s "${_install_prefix}/lib/cuda/libcuda.so.1.1" "${pkgdir}${_install_prefix}/lib/libcuda.so.1.1.0"
  ln -s "${_install_prefix}/lib/libcuda.so.1.1.0" "${pkgdir}${_install_prefix}/lib/libcuda.so.1.1"
  ln -s "${_install_prefix}/lib/libcuda.so.1.1.0" "${pkgdir}${_install_prefix}/lib/libcuda.so.1"
  ln -s "${_install_prefix}/lib/libcuda.so.1.1.0" "${pkgdir}${_install_prefix}/lib/libcuda.so"

}

package_gpu-nvidia-tegra-k1-openmax() {
  pkgdesc="OpenMAX binary libraries for NVIDIA Tegra K1"
  depends=('gpu-nvidia-tegra-k1="${pkgver}"')

  cd "${srcdir}/Linux_for_Tegra/nv_tegra"

  mkdir -p "${pkgdir}${_install_prefix}/lib"

  for lib in libnvomx.so libnvomxilclient.so
  do
    cp usr/lib/arm-linux-gnueabihf/tegra/${lib} "${pkgdir}/${_install_prefix}/lib/"
  done

  ln -s "${_install_prefix}/lib/libnvomx.so" "${pkgdir}${_install_prefix}/lib/libOmxCore.so"

}

package_gpu-nvidia-tegra-k1-openmax-codecs() {
  depends=('gpu-nvidia-tegra-k1="${pkgver}"')
  pkgdesc="OpenMAX binary libraries for NVIDIA Tegra K1"

  cd "${srcdir}/Linux_for_Tegra/nv_tegra"

  mkdir -p "${pkgdir}/usr/lib/firmware/tegra12x"

  for f in nvhost_msenc031.fw nvhost_tsec.fw vic03_ucode.bin
  do
    cp lib/firmware/tegra12x/${f} "${pkgdir}/usr/lib/firmware/tegra12x/"
  done

}

pkgname=("${pkgbase}-nvrm" "${pkgbase}-x11" "${pkgbase}-libcuda" "${pkgbase}-openmax-codecs" "${pkgbase}-openmax")



