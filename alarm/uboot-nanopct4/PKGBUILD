# U-Boot: NanoPC-T4

buildarch=8

pkgname=uboot-nanopct4
pkgver=2019.07
pkgrel=1
pkgdesc="U-Boot for NanoPC-T4"
arch=('aarch64')
url='http://www.denx.de/wiki/U-Boot/WebHome'
license=('GPL')
backup=('boot/boot.txt' 'boot/boot.scr')
makedepends=('bc' 'git' 'python-pyelftools' 'rockchip-tools' 'dtc')
install=${pkgname}.install
_commit_rkbin=8818a03a81efe8b88ca79842abfe0fa095116310
source=("https://ftp.denx.de/pub/u-boot/u-boot-${pkgver/rc/-rc}.tar.bz2"
        "git+https://github.com/rockchip-linux/rkbin.git#commit=$_commit_rkbin"
        "rk3399trust.ini"
        "boot.txt"
        "mkscr")
sha256sums=('bff4fa77e8da17521c030ca4c5b947a056c1b1be4d3e6ee8637020b8d50251d0'
            'SKIP'
            '01dadf3f40aea6d1ae6be320abe32e03181b96c7d8f13eb28ca13fb8b8749f8e'
            '69325117fae2faf5beb4908edeb6270bc7dad90732f5a70d1f9c23fa3badec8f'
            'a4fc8b6b92bc364d6542670d294aa618a8501fb8729f415cc0a3eed776ef0c8e')

build() {
  cd u-boot-${pkgver/rc/-rc}

  unset CFLAGS CXXFLAGS CPPFLAGS LDFLAGS

  make nanopc-t4-rk3399_defconfig
  echo 'CONFIG_IDENT_STRING=" Arch Linux ARM"' >> .config
  make EXTRAVERSION=-${pkgrel}
}

package() {
  cd u-boot-${pkgver/rc/-rc}

  mkdir -p "${pkgdir}/boot"

  tools/mkimage -n rk3399 -T rksd -d ../rkbin/bin/rk33/rk3399_ddr_933MHz_v1.23.bin "${pkgdir}/boot/idbloader.img"
  cat ../rkbin/bin/rk33/rk3399_miniloader_v1.19.bin >> "${pkgdir}/boot/idbloader.img"

  loaderimage --pack --uboot u-boot-dtb.bin "${pkgdir}/boot/uboot.img"

  trust_merger ../rk3399trust.ini

  cp u-boot-dtb.bin trust.img "${pkgdir}/boot"

  tools/mkimage -A arm -O linux -T script -C none -n "U-Boot boot script" -d ../boot.txt "${pkgdir}/boot/boot.scr"
  cp ../{boot.txt,mkscr} "${pkgdir}"/boot
}
