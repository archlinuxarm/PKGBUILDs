diff --git a/include/config_distro_defaults.h b/include/config_distro_defaults.h
index 5d18a4b..11e655c 100644
--- a/include/config_distro_defaults.h
+++ b/include/config_distro_defaults.h
@@ -45,7 +45,7 @@
 
 #define CONFIG_CMDLINE_EDITING
 #define CONFIG_AUTO_COMPLETE
-#define CONFIG_BOOTDELAY     2
+#define CONFIG_BOOTDELAY     1
 #define CONFIG_SYS_LONGHELP
 #define CONFIG_MENU
 #define CONFIG_DOS_PARTITION
diff --git a/include/configs/sunxi-common.h b/include/configs/sunxi-common.h
index 845b004..c6e29a7 100644
--- a/include/configs/sunxi-common.h
+++ b/include/configs/sunxi-common.h
@@ -106,13 +106,95 @@
 #define CONFIG_SYS_NO_FLASH
 
 #define CONFIG_SYS_MONITOR_LEN		(512 << 10)	/* 512 KiB */
-#define CONFIG_IDENT_STRING		" Allwinner Technology"
+#define CONFIG_IDENT_STRING		" Arch Linux ARM"
 
 #define CONFIG_ENV_OFFSET		(544 << 10) /* (8 + 24 + 512) KiB */
 #define CONFIG_ENV_SIZE			(128 << 10)	/* 128 KiB */
 
+#ifdef CONFIG_CMD_WATCHDOG
+#define	RESET_WATCHDOG "watchdog 0"
+#else
+#define RESET_WATCHDOG "true"
+#endif
+
+#if defined(CONFIG_CUBIEBOARD2)
+  #define CONFIG_DEFAULT_FDT_FILE	"sun7i-a20-cubieboard2.dtb"
+#elif defined(CONFIG_CUBIETRUCK)
+  #define CONFIG_DEFAULT_FDT_FILE	"sun7i-a20-cubietruck.dtb"
+#elif defined(CONFIG_A20_OLINUXINO_M)
+  #define CONFIG_DEFAULT_FDT_FILE	"sun7i-a20-olinuxino-micro.dtb"
+#elif defined(CONFIG_HACKBERRY)
+  #define CONFIG_DEFAULT_FDT_FILE	"sun4i-a10-hackberry.dtb"
+#else
+  #define CONFIG_DEFAULT_FDT_FILE	""
+#endif
+
 #define CONFIG_EXTRA_ENV_SETTINGS \
-	"bootm_size=0x10000000\0"
+	"bootm_size=0x10000000\0" \
+	"console=ttyS0\0" \
+	"loadaddr=0x48000000\0" \
+	"scriptaddr=0x43000000\0" \
+	"fdt_addr=0x44000000\0" \
+	"fdt_file=" CONFIG_DEFAULT_FDT_FILE "\0" \
+	"optargs=\0" \
+	"video=\0" \
+	"mmcdev=0\0" \
+	"mmcpart=1\0" \
+	"mmcroot=/dev/mmcblk0p1 rw rootwait\0" \
+	"mmcargs=setenv bootargs console=${console},${baudrate} " \
+		"${optargs} " \
+		"root=${mmcroot} " \
+		"video=${video}\0" \
+	"loadbootenv=load mmc ${mmcdev}:${mmcpart} ${loadaddr} /boot/uEnv.txt\0" \
+	"importbootenv=echo Importing environment from mmc (uEnv.txt)...; " \
+		"env import -t $loadaddr $filesize\0" \
+	"loadscript=load mmc ${mmcdev}:${mmcpart} ${scriptaddr} /boot/script.bin\0" \
+	"loaduimage=load mmc ${mmcdev}:${mmcpart} ${loadaddr} /boot/uImage\0" \
+	"loadzimage=load mmc ${mmcdev}:${mmcpart} ${loadaddr} /boot/zImage\0" \
+	"loadfdt=load mmc ${mmcdev}:${mmcpart} ${fdt_addr} /boot/dtbs/${fdt_file}\0" \
+	"mmcbootm=echo Booting from mmc ...; " \
+		"run mmcargs; " \
+		RESET_WATCHDOG ";" \
+		"bootm ${loadaddr};\0" \
+	"mmcbootz=echo Booting from mmc ...; " \
+		"run mmcargs; " \
+		RESET_WATCHDOG ";" \
+		"bootz ${loadaddr} - ${fdt_addr};\0" \
+	"boot_ram=" \
+	  "saved_stdout=$stdout;setenv stdout nc;"\
+	  "if iminfo 0x41000000; then" \
+	    " " RESET_WATCHDOG ";"\
+	    " setenv stdout $saved_stdout;" \
+	    " source 0x41000000;" \
+	  "else" \
+	    " setenv stdout $saved_stdout;" \
+	  "fi;\0"
+
+#define CONFIG_BOOTCOMMAND \
+	"run boot_ram;" \
+	"mmc dev ${mmcdev};" \
+	"if mmc rescan; then " \
+		"echo SD/MMC found on device ${mmcdev};" \
+		"if run loadbootenv; then " \
+			"run importbootenv;" \
+		"fi;" \
+		"echo Checking if uenvcmd is set ...;" \
+		"if test -n $uenvcmd; then " \
+			"echo Running uenvcmd ...;" \
+			"run uenvcmd;" \
+		"fi;" \
+		"echo Running default loaduimage ...;" \
+		"if run loaduimage; then " \
+			"run loadscript;" \
+			"run mmcbootm;" \
+		"fi;" \
+		"echo Running default loadzimage ...;" \
+		"if run loadzimage; then " \
+			"if run loadfdt; then " \
+				"run mmcbootz;" \
+			"fi;" \
+		"fi;" \
+	"fi;"
 
 #define CONFIG_SYS_BOOT_GET_CMDLINE
 
