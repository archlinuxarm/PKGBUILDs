diff -rupN xserver-xorg-video-imx-viv-3.0.35-4.0.0/DRI_1.10.4/src/dri.c xserver-xorg-video-imx-viv-3.0.35-4.0.0-dirty/DRI_1.10.4/src/dri.c
--- xserver-xorg-video-imx-viv-3.0.35-4.0.0/DRI_1.10.4/src/dri.c	2013-03-19 15:17:14.000000000 +0100
+++ xserver-xorg-video-imx-viv-3.0.35-4.0.0-dirty/DRI_1.10.4/src/dri.c	2013-08-02 12:40:23.000000000 +0200
@@ -1684,7 +1684,7 @@ DRIWakeupHandler(pointer wakeupData, int
 
 	if (pDRIPriv &&
 	    pDRIPriv->pDriverInfo->wrap.WakeupHandler)
-	    (*pDRIPriv->pDriverInfo->wrap.WakeupHandler)(i, wakeupData,
+	    (*pDRIPriv->pDriverInfo->wrap.WakeupHandler)(pScreen,
 							 result, pReadmask);
     }
 }
@@ -1700,16 +1700,15 @@ DRIBlockHandler(pointer blockData, OSTim
 
 	if (pDRIPriv &&
 	    pDRIPriv->pDriverInfo->wrap.BlockHandler)
-	    (*pDRIPriv->pDriverInfo->wrap.BlockHandler)(i, blockData,
+	    (*pDRIPriv->pDriverInfo->wrap.BlockHandler)(pScreen,
 							pTimeout, pReadmask);
     }
 }
 
 void
-DRIDoWakeupHandler(int screenNum, pointer wakeupData,
+DRIDoWakeupHandler(ScreenPtr pScreen,
                    unsigned long result, pointer pReadmask)
 {
-    ScreenPtr pScreen = screenInfo.screens[screenNum];
     DRIScreenPrivPtr pDRIPriv = DRI_SCREEN_PRIV(pScreen);
 
     DRILock(pScreen, 0);
@@ -2392,7 +2391,7 @@ DRIAdjustFrame(int scrnIndex, int x, int
 	/* unwrap */
 	pScrn->AdjustFrame = pDRIPriv->wrap.AdjustFrame;
 	/* call lower layers */
-	(*pScrn->AdjustFrame)(scrnIndex, x, y, flags);
+	(*pScrn->AdjustFrame)(pScrn, x, y);
 	/* rewrap */
 	pDRIPriv->wrap.AdjustFrame = pScrn->AdjustFrame;
 	pScrn->AdjustFrame         = DRIAdjustFrame;
diff -rupN xserver-xorg-video-imx-viv-3.0.35-4.0.0/DRI_1.10.4/src/dri.h xserver-xorg-video-imx-viv-3.0.35-4.0.0-dirty/DRI_1.10.4/src/dri.h
--- xserver-xorg-video-imx-viv-3.0.35-4.0.0/DRI_1.10.4/src/dri.h	2013-03-19 15:17:14.000000000 +0100
+++ xserver-xorg-video-imx-viv-3.0.35-4.0.0-dirty/DRI_1.10.4/src/dri.h	2013-08-01 02:01:30.000000000 +0200
@@ -359,16 +359,14 @@ extern _X_EXPORT void DRIDestroyInfoRec(
 
 extern _X_EXPORT Bool DRIFinishScreenInit(ScreenPtr pScreen);
 
-extern _X_EXPORT void DRIWakeupHandler(pointer wakeupData,
-                             int result,
+extern _X_EXPORT void DRIWakeupHandler(pointer wakeupData, int result,
                              pointer pReadmask);
 
 extern _X_EXPORT void DRIBlockHandler(pointer blockData,
                             OSTimePtr pTimeout,
                             pointer pReadmask);
 
-extern _X_EXPORT void DRIDoWakeupHandler(int screenNum,
-                               pointer wakeupData,
+extern _X_EXPORT void DRIDoWakeupHandler(ScreenPtr pScreen,
                                unsigned long result,
                                pointer pReadmask);
 
diff -rupN xserver-xorg-video-imx-viv-3.0.35-4.0.0/DRI_1.10.4/src/drm.h xserver-xorg-video-imx-viv-3.0.35-4.0.0-dirty/DRI_1.10.4/src/drm.h
--- xserver-xorg-video-imx-viv-3.0.35-4.0.0/DRI_1.10.4/src/drm.h	2013-03-19 15:17:14.000000000 +0100
+++ xserver-xorg-video-imx-viv-3.0.35-4.0.0-dirty/DRI_1.10.4/src/drm.h	2013-07-31 17:59:03.000000000 +0200
@@ -617,7 +617,7 @@ struct drm_get_cap {
 	__u64 value;
 };
 
-#include <drm/drm_mode.h>
+#include <libdrm/drm_mode.h>
 
 #define DRM_IOCTL_BASE			'd'
 #define DRM_IO(nr)			_IO(DRM_IOCTL_BASE,nr)
diff -rupN xserver-xorg-video-imx-viv-3.0.35-4.0.0/DRI_1.10.4/src/xf86dri.c xserver-xorg-video-imx-viv-3.0.35-4.0.0-dirty/DRI_1.10.4/src/xf86dri.c
--- xserver-xorg-video-imx-viv-3.0.35-4.0.0/DRI_1.10.4/src/xf86dri.c	2013-03-19 15:17:14.000000000 +0100
+++ xserver-xorg-video-imx-viv-3.0.35-4.0.0-dirty/DRI_1.10.4/src/xf86dri.c	2013-07-31 23:58:55.000000000 +0200
@@ -64,6 +64,10 @@ SOFTWARE OR THE USE OR OTHER DEALINGS IN
 #include "xf86drm.h"
 #include "protocol-versions.h"
 
+//COMPATIBILITY PATCH
+#define _swapl(x, n) swapl(x)
+#define _swaps(x, n) swaps(x)
+
 static int DRIErrorBase;
 
 
@@ -99,11 +103,11 @@ ProcXF86DRIQueryVersion(
     rep.minorVersion = SERVER_XF86DRI_MINOR_VERSION;
     rep.patchVersion = SERVER_XF86DRI_PATCH_VERSION;
     if (client->swapped) {
-    	swaps(&rep.sequenceNumber, n);
-    	swapl(&rep.length, n);
-	swaps(&rep.majorVersion, n);
-	swaps(&rep.minorVersion, n);
-	swapl(&rep.patchVersion, n);
+    	_swaps(&rep.sequenceNumber, n);
+    	_swapl(&rep.length, n);
+	_swaps(&rep.majorVersion, n);
+	_swaps(&rep.minorVersion, n);
+	_swapl(&rep.patchVersion, n);
     }
     WriteToClient(client, sizeof(xXF86DRIQueryVersionReply), (char *)&rep);
     return Success;
@@ -139,8 +143,8 @@ ProcXF86DRIQueryDirectRenderingCapable(
 	rep.isCapable = 0;
 
     if (client->swapped) {
-    	swaps(&rep.sequenceNumber, n);
-    	swapl(&rep.length, n);
+    	_swaps(&rep.sequenceNumber, n);
+    	_swapl(&rep.length, n);
     }
 
     WriteToClient(client,
@@ -600,7 +604,7 @@ SProcXF86DRIQueryVersion(
 {
     register int n;
     REQUEST(xXF86DRIQueryVersionReq);
-    swaps(&stuff->length, n);
+    _swaps(&stuff->length, n);
     return ProcXF86DRIQueryVersion(client);
 }
 
@@ -611,8 +615,8 @@ SProcXF86DRIQueryDirectRenderingCapable(
 {
     register int n;
     REQUEST(xXF86DRIQueryDirectRenderingCapableReq);
-    swaps(&stuff->length, n);
-    swapl(&stuff->screen, n);
+    _swaps(&stuff->length, n);
+    _swapl(&stuff->screen, n);
     return ProcXF86DRIQueryDirectRenderingCapable(client);
 }
 
