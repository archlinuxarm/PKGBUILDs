# Contributor graysky <therealgraysky AT proton DOT me>
# Contributor: BlackIkeEagle < ike DOT devolder AT gmail DOT com>
# Contributor Kevin Mihelich <kevin@archlinuxarm.org>
# Contributor BlackIkeEagle < ike DOT devolder AT gmail DOT com >
# Contributor Oleg Rakhmanov <oleg [at] archlinuxarm [dot] com>
# Contributor tomasgroth at yahoo.dk
# Contributor WarheadsSE <max@warheads.net>
# Contributor Adrian Fedoreanu <adrian [dot] fedoreanu [at] gmail [dot] com>

buildarch=4
highmem=1

pkgbase=kodi-rpi-legacy
pkgname=(
  'kodi-rpi-legacy'
  'kodi-rpi-legacy-eventclients' 'kodi-rpi-legacy-tools-texturepacker' 'kodi-rpi-legacy-dev'
)

_commitnumber=65726
_commit=141466d91563efe26387d7b93843b8b94402ff16

# set this to anything to build with clang
# recommend manually setting -DUSE_LTO=OFF to -DUSE_LTO=$(nproc) in build()
_clangbuild=

pkgver=21.1
pkgrel=2
arch=('armv7h')
url="https://github.com/graysky2/xbmc/tree/gs-gbm_omega"
license=('GPL2')
makedepends=(
  'bluez-libs' 'cmake' 'curl' 'dav1d' 'doxygen' 'git' 'glew'
  'gperf' 'hicolor-icon-theme' 'jdk17-openjdk' 'fmt' 'libass'
  'libbluray' 'libcdio' 'libcec' 'libgl' 'mariadb-libs' 'libmicrohttpd'
  'libmodplug' 'libmpeg2' 'libnfs' 'libplist' 'libpulse'
  'libxrandr' 'libxslt' 'lirc' 'lzo' 'mesa' 'nasm'
  'pipewire' 'python-pycryptodomex' 'python-pillow' 'python-pybluez'
  'python-simplejson' 'shairplay' 'smbclient' 'sndio' 'spdlog'
  'tinyxml' 'swig' 'upower' 'giflib' 'rapidjson' 'ghostscript' 'meson' 'gtest'
  'graphviz' 'libinput' 'libxkbcommon' 'pcre' 'libdisplay-info' 'tinyxml2' 'python-setuptools'
)

# there are incompatibilities with recent java releases
# see: sttps://bugs.archlinux.org/task/79844
# armv7h needs v17 but aarch64 be use a later one
makedepends_armv7h=('jdk17-openjdk')
makedepends_aarch64=('java-environment<21')

[[ -n "$_clangbuild" ]] && makedepends+=('clang' 'lld' 'llvm')

_codename=Omega
_init_version=1.137
_libdvdcss_version="1.4.3-Next-Nexus-Alpha2-2"
_libdvdnav_version="6.1.1-Next-Nexus-Alpha2-2"
_libdvdread_version="6.1.3-Next-Nexus-Alpha2-2"
_ffmpeg_version="6.0.1"
_crossguid_version="ca1bf4b810e2d188d04cb6286f957008ee1b7681"
_fstrcmp_version="0.7.D001"
_flatbuffers_version="23.3.3"
_libudfread_version="1.1.2"
source=(
  "xbmc-$pkgver.${_commit:0:10}.tar.gz::https://github.com/graysky2/xbmc/archive/$_commit.tar.gz"
  "libdvdcss-$_libdvdcss_version.tar.gz::https://github.com/xbmc/libdvdcss/archive/$_libdvdcss_version.tar.gz"
  "libdvdnav-$_libdvdnav_version.tar.gz::https://github.com/xbmc/libdvdnav/archive/$_libdvdnav_version.tar.gz"
  "libdvdread-$_libdvdread_version.tar.gz::https://github.com/xbmc/libdvdread/archive/$_libdvdread_version.tar.gz"
  "https://ffmpeg.org/releases/ffmpeg-$_ffmpeg_version.tar.gz"
  "https://mirrors.kodi.tv/build-deps/sources/crossguid-$_crossguid_version.tar.gz"
  "https://mirrors.kodi.tv/build-deps/sources/fstrcmp-$_fstrcmp_version.tar.gz"
  "https://mirrors.kodi.tv/build-deps/sources/flatbuffers-$_flatbuffers_version.tar.gz"
  "https://mirrors.kodi.tv/build-deps/sources/libudfread-$_libudfread_version.tar.gz"
  https://taglib.github.io/releases/taglib-1.13.1.tar.gz
  "ArchARM-kodi-init-v$_init_version.tar.gz::https://github.com/graysky2/kodi-standalone-service/archive/v$_init_version.tar.gz"
  kodi.config.txt
  0001-temp-revert-fences.patch
  0002-taglib-use-1.13.1-for-internal-build-like-LE.patch
)
backup=(boot/kodi.config.txt etc/conf.d/kodi-standalone)
noextract=(
  "libdvdcss-$_libdvdcss_version.tar.gz"
  "libdvdnav-$_libdvdnav_version.tar.gz"
  "libdvdread-$_libdvdread_version.tar.gz"
  "ffmpeg-$_ffmpeg_version.tar.gz"
  "crossguid-$_crossguid_version.tar.gz"
  "fstrcmp-$_fstrcmp_version.tar.gz"
  "flatbuffers-$_flatbuffers_version.tar.gz"
  "libudfread-$_libudfread_version.tar.gz"
  taglib-1.13.1.tar.gz
)
sha256sums=('82c80d65cdfc08fe216d5d51d171ae2fb7f1bad0f9d4f98a5e820a1114ca987d'
            'f38c4a4e7a4f4da6d8e83b8852489aa3bb6588a915dc41f5ee89d9aad305a06e'
            '584f62a3896794408d46368e2ecf2c6217ab9c676ce85921b2d68b8961f49dfc'
            '719130091e3adc9725ba72df808f24a14737a009dca5a4c38c601c0c76449b62'
            '375fd8abab657d18578554927d23abfc9cb3b6794bd9839330230cf5f9fcea26'
            '6be27e0b3a4907f0cd3cfadec255ee1b925569e1bd06e67a4d2f4267299b69c4'
            'e4018e850f80700acee8da296e56e15b1eef711ab15157e542e7d7e1237c3476'
            '8aff985da30aaab37edf8e5b02fda33ed4cbdd962699a8e2af98fdef306f4e4d'
            '2bf16726ac98d093156195bb049a663e07d3323e079c26912546f4e05c77bac5'
            'c8da2b10f1bfec2cd7dbfcd33f4a2338db0765d851a50583d410bacf055cfd0b'
            '8f8ab84a0cf3bd382edb118e475b336ca2fe1e1d4da3ad8e4637f8278ed9179c'
            '6418929a98e2c8ebb8eb85c3d2e48952b29b57f033afd1c05dd845536ab9a3f5'
            'e812fc2f74d71915c3179785a8f99647612bd21ce96f866769ee1bc58682ee3b'
            'c0efb77425f86e8a743d59529c4ab0b2d634d53413db1c6f71974c000bc31c14')

prepare() {
  [[ -d kodi-build ]] && rm -rf kodi-build
  mkdir "$srcdir/kodi-build"
  cd "xbmc-$_commit"

  rm -rf system/certs # remove not needed cacert

  # fix https://forum.kodi.tv/showthread.php?tid=376430
  patch -p1 -i ../0001-temp-revert-fences.patch

  # modify to use internal taglib v1.13.1 due to build fails for armv7h with v2.0+
  patch -p1 -i ../0002-taglib-use-1.13.1-for-internal-build-like-LE.patch
}

build() {
  cd kodi-build

  # -march= defined in /etc/makepkg.conf will override the value for -mcpu we
  # uses here so unset them and redefine below
  unset CFLAGS CXXFLAGS
  CFLAGS="-mcpu=cortex-a53 -mfpu=neon-fp-armv8 -mfloat-abi=hard"
  CFLAGS+=" -O2 -pipe -fstack-protector-strong -fno-plt -fexceptions -Wp,-D_FORTIFY_SOURCE=2 -Wformat -Werror=format-security -fstack-clash-protection"
  CXXFLAGS+="${CFLAGS} -Wp,-D_GLIBCXX_ASSERTIONS"

  if [[ -n "$_clangbuild" ]]; then
    export CC=clang CXX=clang++
    # depending on your build system, optionally redefine DISTCC_HOSTS
    # since current toolchain does not include clang support x86_64 volunteers
    #unset DISTCC_HOSTS
    #export DISTCC_HOSTS="localhost/5 10.0.1.103/5:3636"
  fi

  _args=(
    -DCMAKE_BUILD_TYPE=Release
    -DCMAKE_INSTALL_PREFIX=/usr
    -DCMAKE_INSTALL_LIBDIR=/usr/lib
    -DUSE_LTO=OFF
    -DVERBOSE=ON
    -DENABLE_LDGOLD=OFF
    -DENABLE_AIRTUNES=ON
    -DENABLE_AVAHI=ON
    -DENABLE_BLURAY=ON
    -DENABLE_CEC=ON
    -DENABLE_DBUS=ON
    -DENABLE_DVDCSS=ON
    -DENABLE_EGL=ON
    -DENABLE_EVENTCLIENTS=ON
    -DENABLE_MICROHTTPD=ON
    -DENABLE_MYSQLCLIENT=ON
    -DENABLE_NFS=ON
    -DENABLE_OPTICAL=ON
    -DENABLE_SMBCLIENT=ON
    -DENABLE_UDEV=ON
    -DENABLE_UPNP=ON
    -DENABLE_VAAPI=OFF
    -DENABLE_VDPAU=OFF
    -DENABLE_XSLT=ON
    -DENABLE_LIRCCLIENT=ON
    -DENABLE_INTERNAL_RapidJSON=OFF
    -DENABLE_INTERNAL_FFMPEG=ON
    -DENABLE_INTERNAL_CROSSGUID=ON
    -DENABLE_INTERNAL_FSTRCMP=ON
    -DENABLE_INTERNAL_FLATBUFFERS=ON
    -DENABLE_INTERNAL_UDFREAD=ON
    -DENABLE_INTERNAL_TAGLIB=ON
    -DTAGLIB_URL="$srcdir/taglib-1.13.1.tar.gz"
    -Dlibdvdcss_URL="$srcdir/libdvdcss-$_libdvdcss_version.tar.gz"
    -Dlibdvdnav_URL="$srcdir/libdvdnav-$_libdvdnav_version.tar.gz"
    -Dlibdvdread_URL="$srcdir/libdvdread-$_libdvdread_version.tar.gz"
    -DFFMPEG_URL="$srcdir/ffmpeg-$_ffmpeg_version.tar.gz"
    -DCROSSGUID_URL="$srcdir/crossguid-$_crossguid_version.tar.gz"
    -DFSTRCMP_URL="$srcdir/fstrcmp-$_fstrcmp_version.tar.gz"
    -DFLATBUFFERS_URL="$srcdir/flatbuffers-$_flatbuffers_version.tar.gz"
    -DUDFREAD_URL="$srcdir/libudfread-$_libudfread_version.tar.gz"
    -DAPP_RENDER_SYSTEM=gles
    -DCORE_PLATFORM_NAME="x11 gbm"
  )

  echo "building kodi"
  cmake "${_args[@]}" ../"xbmc-$_commit"
  make
}

package_kodi-rpi-legacy() {
  pkgdesc="Media player and entertainment hub with hw accel for RPi 2, gbm_omega fork"
  depends=(
    'bluez-libs' 'curl' 'dav1d' 'desktop-file-utils' 'hicolor-icon-theme' 'fmt'
    'lcms2' 'libass' 'libbluray' 'libcdio' 'libcec' 'libmicrohttpd' 'libnfs'
    'libplist' 'libpulse' 'libxslt' 'lirc' 'mariadb-libs'
    'mesa' 'libpipewire' 'python-pillow' 'python-pycryptodomex'
    'python-simplejson' 'shairplay' 'smbclient' 'sndio' 'spdlog' 'sqlite'
    'taglib' 'tinyxml' 'libxkbcommon' 'polkit' 'linux>=5.4.35' 'lzo' 'libinput'
    'pcre' 'libdisplay-info' 'tinyxml2'
  )
  [[ -n "$_clangbuild" ]] && depends+=('glu')

  optdepends=(
    'bluez: Blutooth support'
    'linux-rpi-legacy: limited HW accelerated decoding'
    'python-pybluez: Bluetooth support'
    'pulseaudio: PulseAudio support'
    'pipewire: PipeWire support'
  )
  install='kodi.install'
  provides=("kodi=${pkgver}" "kodi-common=${pkgver}")
  conflicts=('kodi' 'kodi-rpi')

  _components=(
    'kodi'
    'kodi-bin'
  )

  cd kodi-build
  for _cmp in ${_components[@]}; do
  DESTDIR="$pkgdir" /usr/bin/cmake \
    -DCMAKE_INSTALL_COMPONENT="$_cmp" \
     -P cmake_install.cmake
  done

  # setup video drivers for kodi-gbm
  install -Dm0644 "$srcdir/kodi.config.txt" "$pkgdir/boot/kodi.config.txt"

  # rpi2 wants 384 MB of memory
  sed -i 's/@@@/384/' "$pkgdir/boot/kodi.config.txt"

  _initshit="$srcdir/kodi-standalone-service-$_init_version/arm"

  # fix permissions necessary for accelerated video playback
  install -Dm0644 "$_initshit/udev/99-kodi.rules" "$pkgdir/usr/lib/udev/rules.d/99-kodi.rules"

  # environment vars
  install -Dm644 "${_initshit/\/arm}"/common/kodi-standalone "$pkgdir/etc/conf.d/kodi-standalone"

  # systemd manages kodi user
  install -Dm644 "$_initshit"/init/sysusers.conf "$pkgdir/usr/lib/sysusers.d/kodi.conf"
  install -Dm644 "$_initshit"/init/tmpfiles.conf "$pkgdir/usr/lib/tmpfiles.d/kodi.conf"

  # systemd service and polkit rules
  install -Dm0644 "$_initshit/init/kodi.service" "$pkgdir/usr/lib/systemd/system/kodi.service"
  install -Dm0644 "$_initshit/polkit/polkit.rules" "$pkgdir/usr/share/polkit-1/rules.d/10-kodi.rules"
  chmod 0755 "$pkgdir/usr/share/polkit-1/rules.d/"

  # man page
  install -Dm0644 "$_initshit/doc/kodi.service.1" "$pkgdir/usr/share/man/man1/kodi.service.1"

  # avoid error <general>: GetDirectory - Error getting /usr/lib/kodi/addons
  # https://bugs.archlinux.org/task/77366
  mkdir -p "$pkgdir"/usr/lib/kodi/addons

  # https://archlinux.org/todo/use-system-ca-store/
  mkdir -p "$pkgdir"/usr/share/kodi/system/certs
  ln -s /etc/ssl/cert.pem "$pkgdir"/usr/share/kodi/system/certs/cacert.pem
}

package_kodi-rpi-legacy-eventclients() {
  pkgdesc="Kodi Event Clients"
  provides=("kodi-eventclients=${pkgver}")
  conflicts=('kodi-rpi-eventclients')
  optdepends=(
    'kodi: local machine eventclient use'
    'python: most eventclients are implemented in python'
  )

  _components=(
    'kodi-eventclients-common'
    'kodi-eventclients-ps3'
    'kodi-eventclients-kodi-send'
  )

  cd kodi-build
  for _cmp in ${_components[@]}; do
    DESTDIR="$pkgdir" /usr/bin/cmake \
      -DCMAKE_INSTALL_COMPONENT="$_cmp" \
      -P cmake_install.cmake
  done
}

package_kodi-rpi-legacy-tools-texturepacker() {
  pkgdesc="Kodi Texturepacker Tool"
  depends=('libpng' 'giflib' 'libjpeg-turbo' 'lzo')
  conflicts=('kodi-rpi-tools-texturepacker')

  _components=(
    'kodi-tools-texturepacker'
  )

  cd kodi-build
  for _cmp in ${_components[@]}; do
    DESTDIR="$pkgdir" /usr/bin/cmake \
      -DCMAKE_INSTALL_COMPONENT="$_cmp" \
      -P cmake_install.cmake
  done
}

package_kodi-rpi-legacy-dev() {
  pkgdesc="Kodi dev files"
  depends=('kodi')
  conflicts=('kodi-rpi-dev')
  provides=("kodi-dev=${pkgver}")

  _components=(
    'kodi-addon-dev'
    'kodi-eventclients-dev'
  )

  cd kodi-build
  for _cmp in ${_components[@]}; do
    DESTDIR="$pkgdir" /usr/bin/cmake \
      -DCMAKE_INSTALL_COMPONENT="$_cmp" \
      -P cmake_install.cmake
  done
}
