# U-Boot: sunXi
# Maintainer: Kevin Mihelich <kevin@archlinuxarm.org>

buildarch=4

pkgbase=uboot
pkgname=(uboot-{cubieboard2,cubietruck,iteaduino_plus_{a10,a20},hackberry,a20-olinuxino_micro,udoo-{dual,quad}})
pkgver=2014.07
pkgrel=1
arch=('armv7h')
url="http://git.denx.de/u-boot.git/"
license=('GPL')
makedepends=('bc' 'sunxi-tools')
source=("ftp://ftp.denx.de/pub/u-boot/u-boot-$pkgver.tar.bz2"
        '0004-pxe-additionaly-check-for-fdt_file-env-variable.patch'
        '0007-move-udoo-over-to-use-the-generic-distro-configuatio.patch'
        '0010-add-header-with-a-generic-set-of-boot-commands-defin.patch'
        '0026-port-over-to-generic-bootcommands.patch'
        '1000_add_sun7i.patch'
        '1001_add_sun4i.patch'
        '1002_sunxi_default-dtbs.patch'
        '1003_add_udoo_dl.patch'
        'extlinux.conf')

#         '0005-convert-snowball-to-distro-generic-config.patch'
#         '0006-move-wandboard-over-to-use-the-generic-distro-config.patch'
#         '0008-move-pandaboard-over-to-use-the-generic-distro-confi.patch'
#         '0009-move-beaglebone-over-to-use-the-generic-distro-confi.patch'
#         '0012-cleanup-duplicate-options-in-paz00-config.patch'
#         '0014-add-to-ti_armv7_common.h-generic-distro-environment-.patch'
#         '0015-omap4-buildfixes.patch'
#         '0017-make-bootdelay-match-the-generic-distro-default.patch'

#         '0027-ARM-HYP-non-sec-move-switch-to-non-sec-to-the-last-b.patch'
#         '0028-ARM-HYP-non-sec-add-a-barrier-after-setting-SCR.NS-1.patch'
#         '0029-ARM-non-sec-reset-CNTVOFF-to-zero.patch'
#         '0030-ARM-add-missing-HYP-mode-constant.patch'
#         '0031-ARM-HYP-non-sec-add-separate-section-for-secure-code.patch'
#         '0032-ARM-HYP-non-sec-allow-relocation-to-secure-RAM.patch'
#         '0033-ARM-HYP-non-sec-add-generic-ARMv7-PSCI-code.patch'
#         '0034-ARM-HYP-non-sec-add-the-option-for-a-second-stage-mo.patch'
#         '0035-ARM-convert-arch_fixup_memory_node-to-a-generic-FDT-.patch'
#         '0036-ARM-HYP-non-sec-PSCI-emit-DT-nodes.patch'
#         '0011-add-README.distro-file.patch'
#         '0013-add-hackish-utilite-build-based-on-wandboard.patch'
#         '0016-automatically-add-console-to-bootline-when-not-exist.patch'
#         '0037-PXE-syslinux-implenets-some-keywords-found-in-config.patch'
#         '0038-PXE-distros-implementing-syslinux-will-be-using-raw-.patch'
options=('!buildflags')
backup=('boot/extlinux/extlinux.conf')
md5sums=('36d4bad687edcafa396fee607e505d4e'
         'f3db1a190980ec119e9f16320bc8f665'
         '3a42ead3a42aaaa32aa97f8305dac91a'
         '41bacd7d5d83ecc39bc6f8147279568c'
         '9c1f5a4d1b34139ea4ec3fe891876b33'
         '7c2f6efce62a31580ce91f8e11b75a1d'
         'ef3e46b6b8a25c3c9d3a40356a9826c8'
         '6994b7fa7cb7fedb4fb34dbab07f821f'
         '1ae50fa61d064f4e74041cdc6d0a3de3'
         'ed737f4ac7cf76c77a9abad06a4388f1')

prepare() {
  cd "u-boot-$pkgver"
  for p in "$srcdir"/*.patch; do
    msg $(basename "$p")
    patch -p1 -i "$p"
  done
}

build() {
  cd "u-boot-$pkgver"

  for i in Cubieboard2 Cubietruck Iteaduino_Plus_{A10,A20} Hackberry A20-OLinuXino_MICRO udoo_{dl,quad}; do
    mkdir ../bin_${i}
    make distclean
    make ${i}_config
    make
    mv u-boot* ../bin_${i}
  done
}

package_uboot-cubieboard2() {
  pkgdesc="U-Boot for Cubieboard 2"
  install=uboot-sunxi.install
  provides=('uboot-sunxi')
  conflicts=('uboot-sunxi')

  mkdir -p "${pkgdir}"/boot
  cp bin_Cubieboard2/u-boot-sunxi-with-spl.bin "${pkgdir}"/boot

  install -Dm644 extlinux.conf "$pkgdir/boot/extlinux/extlinux.conf"

#   fex2bin cubieboard2.fex "${pkgdir}"/boot/script.bin
}

package_uboot-cubietruck() {
  pkgdesc="U-Boot for Cubietruck"
  install=uboot-sunxi.install
  provides=('uboot-sunxi')
  conflicts=('uboot-sunxi')

  mkdir -p "${pkgdir}"/boot
  cp bin_Cubietruck/u-boot-sunxi-with-spl.bin "${pkgdir}"/boot

  install -Dm644 extlinux.conf "$pkgdir/boot/extlinux/extlinux.conf"

#   fex2bin cubietruck.fex "${pkgdir}"/boot/script.bin
}

package_uboot-iteaduino_plus_a10() {
  pkgdesc="U-Boot for Iteaduino Plus A10"
  install=uboot-sunxi.install
  provides=('uboot-sunxi')
  conflicts=('uboot-sunxi')

  mkdir -p "${pkgdir}"/boot
  cp bin_Iteaduino_Plus_A10/u-boot-sunxi-with-spl.bin "${pkgdir}"/boot

  install -Dm644 extlinux.conf "$pkgdir/boot/extlinux/extlinux.conf"

#   fex2bin iteaduino_plus_a10.fex "${pkgdir}"/boot/script.bin
}

package_uboot-iteaduino_plus_a20() {
  pkgdesc="U-Boot for Iteaduino Plus A20"
  install=uboot-sunxi.install
  provides=('uboot-sunxi')
  conflicts=('uboot-sunxi')

  mkdir -p "${pkgdir}"/boot
  cp bin_Iteaduino_Plus_A20/u-boot-sunxi-with-spl.bin "${pkgdir}"/boot

  install -Dm644 extlinux.conf "$pkgdir/boot/extlinux/extlinux.conf"

#   fex2bin iteaduino_plus_a20.fex "${pkgdir}"/boot/script.bin
}

package_uboot-hackberry() {
  pkgdesc="U-Boot for Hackberry"
  install=uboot-sunxi.install
  provides=('uboot-sunxi')
  conflicts=('uboot-sunxi')

  mkdir -p "${pkgdir}"/boot
  cp bin_Hackberry/u-boot-sunxi-with-spl.bin "${pkgdir}"/boot

  install -Dm644 extlinux.conf "$pkgdir/boot/extlinux/extlinux.conf"

#   fex2bin hackberry.fex "${pkgdir}"/boot/script.bin
}

package_uboot-a20-olinuxino_micro() {
  pkgdesc="U-Boot for A20 OLinuXino Micro"
  install=uboot-sunxi.install
  provides=('uboot-sunxi')
  conflicts=('uboot-sunxi')

  mkdir -p "${pkgdir}"/boot
  cp bin_A20-OLinuXino_MICRO/u-boot-sunxi-with-spl.bin "${pkgdir}"/boot

  install -Dm644 extlinux.conf "$pkgdir/boot/extlinux/extlinux.conf"

#   fex2bin a20-olinuxino_micro.fex "${pkgdir}"/boot/script.bin
}

package_uboot-udoo-dual() {
  pkgdesc="U-Boot for UDOO Dual"
  conflicts=('uboot-udoo-quad')
  install=uboot-udoo.install

  mkdir -p "${pkgdir}"/boot
  cp bin_udoo_dl/u-boot.imx "${pkgdir}"/boot/u-boot.imx
}

package_uboot-udoo-quad() {
  pkgdesc="U-Boot for UDOO Quad"
  conflicts=('uboot-udoo-dual')
  install=uboot-udoo.install

  mkdir -p "${pkgdir}"/boot
  cp bin_udoo_quad/u-boot.imx "${pkgdir}"/boot/u-boot.imx
}
