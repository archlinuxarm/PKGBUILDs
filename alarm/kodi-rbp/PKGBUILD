# Contributor tomasgroth at yahoo.dk
# Contributor WarheadsSE <max@warheads.net>
# Contributor Romzetron <asromzek@gmail.com>
# Contributor Holzhaus <holthuis.jan@googlemail.com>

buildarch=20

pkgname=kodi-rbp
pkgver=14.1
_codename=Helix
pkgrel=5
pkgdesc="A software media player and entertainment hub for digital media for the Raspberry Pi"
arch=('armv6h' 'armv7h')
url="http://kodi.tv"
license=('GPL' 'custom')
depends=('hicolor-icon-theme' 'fribidi' 'lzo2' 'smbclient' 'libtiff' 'libva' 'libpng' 'libcdio' 'yajl' 'libmariadbclient' 'libjpeg-turbo' 'libsamplerate' 'libssh' 'libmicrohttpd' 'sdl_image' 'python2' 'libass' 'libmpeg2' 'libmad' 'libmodplug' 'jasper' 'rtmpdump' 'unzip' 'xorg-xdpyinfo' 'libbluray' 'libnfs' 'afpfs-ng' 'avahi' 'bluez-libs' 'tinyxml' 'raspberrypi-firmware' 'libcec-rpi' 'libplist' 'swig' 'taglib' 'libxslt' 'shairplay-git' 'xorg-xinit' 'xorg-server' 'xf86-video-fbdev')
makedepends=('boost' 'cmake' 'gperf' 'nasm' 'zip' 'udisks' 'upower' 'git' 'autoconf' 'java-environment')
optdepends=(
  'lirc: remote controller support'
  'udisks: automount external drives'
  'upower: used to trigger power management functionality'
  'unrar: access compressed files without unpacking them')

provides=('xbmc' 'kodi')
conflicts=('xbmc' 'kodi')
replaces=('xbmc-rbp')
install="kodi.install"
source=("https://github.com/xbmc/xbmc/archive/$pkgver-$_codename.tar.gz"
        'kodi.service'
        'polkit.rules')

sha256sums=('a38059e292cf8523918834e49fcc2d688525ceb7951ddf7f5ee535f4147255d6'
            '5235068d5800d69f0287087815990e7fe8d6572733d60c8800546d35f608e87f'
            '9ea592205023ba861603d74b63cdb73126c56372a366dc4cb7beb379073cbb96')
_prefix=/usr

prepare() {
  cd "$srcdir/xbmc-$pkgver-$_codename"

  # fix lsb_release dependency
  sed -i -e 's:/usr/bin/lsb_release -d:cat /etc/arch-release:' xbmc/utils/SystemInfo.cpp
}

build() {
  cd "$srcdir/xbmc-$pkgver-$_codename"

  # Bootstrapping Kodi
  ./bootstrap

  # Configuring Kodi
  export PYTHON_VERSION=2  # external python v2
  # we need to compile for armv6 instead of armv5 to avoid problems compiling assembler code
  FLAGS="-Ofast -fexcess-precision=fast -mfloat-abi=hard -mabi=aapcs-linux -pipe -fstack-protector --param=ssp-buffer-size=4 \
         -D_FORTIFY_SOURCE=1 -I/opt/vc/include/ -I/opt/vc/include/IL -I/opt/vc/include/interface/vcos/pthreads -I/opt/vc/include/interface/vmcs_host/linux"
  [[ $CARCH == "armv6h" ]] && export CFLAGS="$FLAGS -mcpu=arm1176jzf-s -mtune=arm1176jzf-s -mfpu=vfp" && export CXXFLAGS="$FLAGS -mcpu=arm1176jzf-s -mtune=arm1176jzf-s -mfpu=vfp"
  [[ $CARCH == "armv7h" ]] && export CFLAGS="$FLAGS -mcpu=cortex-a7 -mtune=cortex-a7 -mfpu=neon-vfpv4 -mvectorize-with-neon-quad" && export CXXFLAGS="$FLAGS -mcpu=cortex-a7 -mtune=cortex-a7 -mfpu=neon-vfpv4 -mvectorize-with-neon-quad"

  export LDFLAGS="$LDFLAGS -L/opt/vc/lib"


  #If build fails try uncommenting the line below first
  #export MAKEFLAGS="-j1"
 
  ./configure --prefix=$_prefix --exec-prefix=$_prefix  \
  --with-platform=raspberry-pi \
  --disable-gl \
  --enable-gles \
  --disable-x11 \
  --disable-sdl \
  --enable-optimizations \
  --disable-goom \
  --disable-pulse \
  --disable-vaapi \
  --disable-vdpau \
  --disable-xrandr \
  --enable-airplay \
  --enable-airtunes \
  --enable-avahi \
  --enable-libbluray \
  --enable-dvdcss \
  --disable-debug \
  --disable-joystick \
  --disable-mid \
  --enable-nfs \
  --disable-profiling \
  --disable-projectm \
  --enable-rsxs \
  --enable-rtmp \
  --disable-vaapi \
  --enable-optical-drive \
  --enable-player=omxplayer
  make
}

package() {
  cd "$srcdir/xbmc-$pkgver-$_codename"
  # Running make install
  make DESTDIR="${pkgdir}" install

  # run feh with python2
  sed -i -e 's/python/python2/g' ${pkgdir}${_prefix}/bin/kodi

  # lsb_release fix
  sed -i -e 's/which lsb_release > \/dev\/null/\[ -f \/etc\/arch-release ]/g' "${pkgdir}${_prefix}/bin/kodi"
  sed -i -e "s/lsb_release -a 2> \/dev\/null | sed -e 's\/\^\/    \/'/cat \/etc\/arch-release/g" "${pkgdir}${_prefix}/bin/kodi"

  # Tools
  install -D -m 0755 "${srcdir}/xbmc-${pkgver}-${_codename}/tools/TexturePacker/TexturePacker" "${pkgdir}${_prefix}/lib/kodi/"

  # Licenses
  install -d -m 0755 "${pkgdir}${_prefix}/share/licenses/${pkgname}"
  for licensef in LICENSE.GPL copying.txt; do
    mv "${pkgdir}${_prefix}/share/doc/kodi/${licensef}" "${pkgdir}${_prefix}/share/licenses/${pkgname}"
  done

  install -Dm0644 $srcdir/kodi.service $pkgdir/usr/lib/systemd/system/kodi.service
  install -Dm0644 $srcdir/polkit.rules $pkgdir/usr/share/polkit-1/rules.d/10-kodi.rules
  chmod 0700 $pkgdir/usr/share/polkit-1/rules.d/
}
