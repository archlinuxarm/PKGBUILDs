From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: "Jan Alexander Steffens (heftig)" <jan.steffens@gmail.com>
Date: Thu, 6 May 2021 20:14:58 +0200
Subject: [PATCH] bootstrap: Change libexec dir

---
 src/bootstrap/dist.rs                                      | 4 ++--
 src/tools/rust-analyzer/crates/rust-analyzer/src/reload.rs | 2 +-
 2 files changed, 3 insertions(+), 3 deletions(-)

diff --git a/src/bootstrap/dist.rs b/src/bootstrap/dist.rs
index 1a59b3958f10..6e650d286d8f 100644
--- a/src/bootstrap/dist.rs
+++ b/src/bootstrap/dist.rs
@@ -372,7 +372,7 @@ fn prepare_image(builder: &Builder<'_>, compiler: Compiler, image: &Path) {
                     target: compiler.host,
                 })
                 .expect("rust-analyzer-proc-macro-server always builds");
-            builder.install(&ra_proc_macro_srv, &image.join("libexec"), 0o755);
+            builder.install(&ra_proc_macro_srv, &image.join("lib"), 0o755);
 
             let libdir_relative = builder.libdir_relative(compiler);
 
@@ -980,7 +980,7 @@ fn run(self, builder: &Builder<'_>) -> Option<GeneratedTarball> {
         for dirent in fs::read_dir(cargo.parent().unwrap()).expect("read_dir") {
             let dirent = dirent.expect("read dir entry");
             if dirent.file_name().to_str().expect("utf8").starts_with("cargo-credential-") {
-                tarball.add_file(&dirent.path(), "libexec", 0o755);
+                tarball.add_file(&dirent.path(), "lib", 0o755);
             }
         }
 
diff --git a/src/tools/rust-analyzer/crates/rust-analyzer/src/reload.rs b/src/tools/rust-analyzer/crates/rust-analyzer/src/reload.rs
index e47f70fff39e..78c2a65aee8b 100644
--- a/src/tools/rust-analyzer/crates/rust-analyzer/src/reload.rs
+++ b/src/tools/rust-analyzer/crates/rust-analyzer/src/reload.rs
@@ -321,7 +321,7 @@ fn eq_ignore_build_data<'a>(
                             if let Some(sysroot) = sysroot.as_ref() {
                                 tracing::debug!("Found a cargo workspace with a sysroot...");
                                 let server_path =
-                                    sysroot.root().join("libexec").join(&standalone_server_name);
+                                    sysroot.root().join("lib").join(&standalone_server_name);
                                 if std::fs::metadata(&server_path).is_ok() {
                                     tracing::debug!(
                                         "And the server exists at {}",
