From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: "Jan Alexander Steffens (heftig)" <jan.steffens@gmail.com>
Date: Fri, 12 Mar 2021 17:31:56 +0100
Subject: [PATCH] compiler: Change LLVM targets

 - Change x86_64-unknown-linux-gnu to use x86_64-pc-linux-gnu
 - Change i686-unknown-linux-gnu to use i686-pc-linux-gnu

Reintroduce the aliasing that was removed in 1.52.0 and alias the -pc-
triples to the -unknown- triples. This avoids defining proper -pc-
targets, as things break when this is done:

 - The crate ecosystem expects the -unknown- targets. Making -pc-
   rustc's host triple (and thus default target) would break various
   crates.
 - Firefox's build breaks when the host triple (from
   `rustc --version --verbose`) is different from the target triple
   (from `rustc --print target-list`) that best matches autoconf.
---
 compiler/rustc_session/src/config.rs                     | 2 +-
 compiler/rustc_target/src/spec/i686_unknown_linux_gnu.rs | 2 +-
 compiler/rustc_target/src/spec/mod.rs                    | 9 +++++++++
 .../rustc_target/src/spec/x86_64_unknown_linux_gnu.rs    | 2 +-
 4 files changed, 12 insertions(+), 3 deletions(-)

diff --git a/compiler/rustc_session/src/config.rs b/compiler/rustc_session/src/config.rs
index 8bb3878fbbb4..969247f5d4fa 100644
--- a/compiler/rustc_session/src/config.rs
+++ b/compiler/rustc_session/src/config.rs
@@ -1830,7 +1830,7 @@ pub fn parse_target_triple(
                 early_error(error_format, &format!("target file {path:?} does not exist"))
             })
         }
-        Some(target) => TargetTriple::TargetTriple(target),
+        Some(target) => TargetTriple::from_alias(target),
         _ => TargetTriple::from_triple(host_triple()),
     }
 }
diff --git a/compiler/rustc_target/src/spec/i686_unknown_linux_gnu.rs b/compiler/rustc_target/src/spec/i686_unknown_linux_gnu.rs
index 765803d16928..75e6df9a8f3a 100644
--- a/compiler/rustc_target/src/spec/i686_unknown_linux_gnu.rs
+++ b/compiler/rustc_target/src/spec/i686_unknown_linux_gnu.rs
@@ -9,7 +9,7 @@ pub fn target() -> Target {
     base.stack_probes = StackProbeType::Call;
 
     Target {
-        llvm_target: "i686-unknown-linux-gnu".into(),
+        llvm_target: "i686-pc-linux-gnu".into(),
         pointer_width: 32,
         data_layout: "e-m:e-p:32:32-p270:32:32-p271:32:32-p272:64:64-\
             f64:32:64-f80:32-n8:16:32-S128"
diff --git a/compiler/rustc_target/src/spec/mod.rs b/compiler/rustc_target/src/spec/mod.rs
index dc16739bd560..3d8bbc0b1ff7 100644
--- a/compiler/rustc_target/src/spec/mod.rs
+++ b/compiler/rustc_target/src/spec/mod.rs
@@ -2726,6 +2726,15 @@ pub fn from_path(path: &Path) -> Result<Self, io::Error> {
         Ok(TargetTriple::TargetJson { path_for_rustdoc: canonicalized_path, triple, contents })
     }
 
+    /// Creates a target triple from its alias
+    pub fn from_alias(triple: String) -> Self {
+        match triple.as_str() {
+            "x86_64-pc-linux-gnu" => TargetTriple::from_triple("x86_64-unknown-linux-gnu"),
+            "i686-pc-linux-gnu" => TargetTriple::from_triple("i686-unknown-linux-gnu"),
+            _ => TargetTriple::TargetTriple(triple),
+        }
+    }
+
     /// Returns a string triple for this target.
     ///
     /// If this target is a path, the file name (without extension) is returned.
diff --git a/compiler/rustc_target/src/spec/x86_64_unknown_linux_gnu.rs b/compiler/rustc_target/src/spec/x86_64_unknown_linux_gnu.rs
index 956be0353fa3..3f133efef343 100644
--- a/compiler/rustc_target/src/spec/x86_64_unknown_linux_gnu.rs
+++ b/compiler/rustc_target/src/spec/x86_64_unknown_linux_gnu.rs
@@ -15,7 +15,7 @@ pub fn target() -> Target {
         | SanitizerSet::THREAD;
 
     Target {
-        llvm_target: "x86_64-unknown-linux-gnu".into(),
+        llvm_target: "x86_64-pc-linux-gnu".into(),
         pointer_width: 64,
         data_layout: "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
             .into(),
