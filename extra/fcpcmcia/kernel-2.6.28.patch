--- src/fcpcmcia_cs.c~	2008-12-26 23:07:01.000000000 +0000
+++ src/fcpcmcia_cs.c	2008-12-26 23:07:01.000000000 +0000
@@ -236,7 +236,7 @@
                       cisparse_t *parse)
 {
     int i = pcmcia_get_tuple_data(handle, tuple);
-    if (i != CS_SUCCESS) return i;
+    if (i != 0) return i;
     return pcmcia_parse_tuple(handle, tuple, parse);
 }
 
@@ -244,7 +244,7 @@
 		     cisparse_t *parse)
 {
     int i = pcmcia_get_first_tuple(handle, tuple);
-    if (i != CS_SUCCESS) return i;
+    if (i != 0) return i;
     return get_tuple(handle, tuple, parse);
 }
 
@@ -252,7 +252,7 @@
 		     cisparse_t *parse)
 {
     int i = pcmcia_get_next_tuple(handle, tuple);
-    if (i != CS_SUCCESS) return i;
+    if (i != 0) return i;
     return get_tuple(handle, tuple, parse);
 }
 
@@ -274,17 +274,17 @@
     do {
 	tuple.DesiredTuple = CISTPL_CONFIG;
 	i = pcmcia_get_first_tuple(link, &tuple);
-	if (i != CS_SUCCESS) break;
+	if (i != 0) break;
 	tuple.TupleData = buf;
 	tuple.TupleDataMax = 64;
 	tuple.TupleOffset = 0;
 	i = pcmcia_get_tuple_data(link, &tuple);
-	if (i != CS_SUCCESS) break;
+	if (i != 0) break;
 	i = pcmcia_parse_tuple(link, &tuple, &parse);
-	if (i != CS_SUCCESS) break;
+	if (i != 0) break;
 	link->conf.ConfigBase = parse.config.base;
     } while (0);
-    if (i != CS_SUCCESS) {
+    if (i != 0) {
 	cs_error(link, ParseTuple, i);
         return -ENODEV;
     }
@@ -310,7 +310,7 @@
 	tuple.Attributes = 0;
 	tuple.DesiredTuple = CISTPL_CFTABLE_ENTRY;
 	i = first_tuple(link, &tuple, &parse);
-	while (i == CS_SUCCESS) {
+	while (i == 0) {
 	    if (cf->io.nwin > 0) {
 		link->conf.ConfigIndex = cf->index;
 		link->io.BasePort1 = cf->io.win[0].base;
@@ -320,13 +320,13 @@
 			link->io.BasePort1,
 		        link->io.BasePort1+link->io.NumPorts1-1);
 		i = pcmcia_request_io(link, &link->io);
-		if (i == CS_SUCCESS) goto found_port;
+		if (i == 0) goto found_port;
 	    }
 	    i = next_tuple(link, &tuple, &parse);
 	}
 
 found_port:
-	if (i != CS_SUCCESS) {
+	if (i != 0) {
 	    cs_error(link, RequestIO, i);
 	    break;
 	}
@@ -335,7 +335,7 @@
 	 * allocate an interrupt line
 	 */
 	i = pcmcia_request_irq(link, &link->irq);
-	if (i != CS_SUCCESS) {
+	if (i != 0) {
 	    cs_error(link, RequestIRQ, i);
             /* undo */
             pcmcia_disable_device(link);
@@ -346,7 +346,7 @@
          * configure the PCMCIA socket
 	  */
 	i = pcmcia_request_configuration(link, &link->conf);
-	if (i != CS_SUCCESS) {
+	if (i != 0) {
 	    cs_error(link, RequestConfiguration, i);
             pcmcia_disable_device(link);
 	    break;
--- src/fcpcmcia_cs.c~	2008-12-26 23:15:23.000000000 +0000
+++ src/fcpcmcia_cs.c	2008-12-26 23:15:23.000000000 +0000
@@ -237,7 +237,7 @@
 {
     int i = pcmcia_get_tuple_data(handle, tuple);
     if (i != 0) return i;
-    return pcmcia_parse_tuple(handle, tuple, parse);
+    return pcmcia_parse_tuple(tuple, parse);
 }
 
 static int first_tuple(struct pcmcia_device *handle, tuple_t *tuple,
--- src/fcpcmcia_cs.c~	2008-12-26 23:18:12.000000000 +0000
+++ src/fcpcmcia_cs.c	2008-12-26 23:18:12.000000000 +0000
@@ -280,7 +280,7 @@
 	tuple.TupleOffset = 0;
 	i = pcmcia_get_tuple_data(link, &tuple);
 	if (i != 0) break;
-	i = pcmcia_parse_tuple(link, &tuple, &parse);
+	i = pcmcia_parse_tuple(&tuple, &parse);
 	if (i != 0) break;
 	link->conf.ConfigBase = parse.config.base;
     } while (0);
