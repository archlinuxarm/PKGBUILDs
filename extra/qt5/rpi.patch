--- a/src/gui/Qt5GuiConfigExtras.cmake.in
+++ b/src/gui/Qt5GuiConfigExtras.cmake.in
@@ -96,12 +96,10 @@
         string(REGEX REPLACE "[^_A-Za-z0-9]" "_" _cmake_lib_name ${_lib})
         if (NOT TARGET Qt5::Gui_${_cmake_lib_name})
             find_library(Qt5Gui_${_cmake_lib_name}_LIBRARY ${_lib}
-!!IF !isEmpty(CROSS_COMPILE)
                 PATHS \"${LibDir}\"
 !!IF !mac
                 NO_DEFAULT_PATH
 !!ENDIF
-!!ENDIF
             )
 !!IF mac
             set(Qt5Gui_${_cmake_lib_name}_LIBRARY "${Qt5Gui_${_cmake_lib_name}_LIBRARY}/${_lib}")
--- a/configure
+++ b/configure
@@ -3206,11 +3206,6 @@
 else
   XQMAKESPEC="$relpath/mkspecs/${XPLATFORM}"
 fi
-if [ "$PLATFORM" != "$XPLATFORM" ]; then
-    QT_CROSS_COMPILE=yes
-    QMAKE_CONFIG="$QMAKE_CONFIG cross_compile"
-    QTCONFIG_CONFIG="$QTCONFIG_CONFIG cross_compile"
-fi
 
 if [ "$BUILD_ON_MAC" = "yes" ]; then
    if [ `basename $QMAKESPEC` = "macx-xcode" ] || [ `basename $XQMAKESPEC` = "macx-xcode" ]; then
@@ -3538,11 +3533,6 @@
     if [ "$CFG_DEV" = "yes" ]; then
         CFG_BUILD_PARTS="$CFG_BUILD_PARTS tests"
     fi
-
-    # don't build tools by default when cross-compiling
-    if [ "$PLATFORM" != "$XPLATFORM" ]; then
-	CFG_BUILD_PARTS=`echo "$CFG_BUILD_PARTS" | sed "s, tools,,g"`
-    fi
 fi
 for nobuild in $CFG_NOBUILD_PARTS; do
     CFG_BUILD_PARTS=`echo "$CFG_BUILD_PARTS" | sed "s, $nobuild,,g"`
--- a/mkspecs/devices/common/linux_device_post.conf
+++ b/mkspecs/devices/common/linux_device_post.conf
@@ -6,4 +6,3 @@
 QMAKE_CFLAGS       += $$COMPILER_FLAGS
 QMAKE_CXXFLAGS     += $$COMPILER_FLAGS
 
-deviceSanityCheckCompiler()
diff --git a/mkspecs/devices/common/linux_device_pre.conf b/mkspecs/devices/common/linux_device_pre.conf
index 51f04d9..4794b1e 100644
--- a/mkspecs/devices/common/linux_device_pre.conf
+++ b/mkspecs/devices/common/linux_device_pre.conf
@@ -12,14 +12,3 @@
     error(Could not successfully load device configuration)
 }
 
-# modifications to g++-unix.conf
-QMAKE_CC                = $${CROSS_COMPILE}gcc
-QMAKE_CXX               = $${CROSS_COMPILE}g++
-QMAKE_LINK              = $${QMAKE_CXX}
-QMAKE_LINK_SHLIB        = $${QMAKE_CXX}
-
-# modifications to linux.conf
-QMAKE_AR                = $${CROSS_COMPILE}ar cqs
-QMAKE_OBJCOPY           = $${CROSS_COMPILE}objcopy
-QMAKE_NM                = $${CROSS_COMPILE}nm -P
-QMAKE_STRIP             = $${CROSS_COMPILE}strip
--- a/mkspecs/devices/linux-rasp-pi-g++/qmake.conf
+++ b/mkspecs/devices/linux-rasp-pi-g++/qmake.conf
@@ -18,6 +18,10 @@
 
 QMAKE_LIBS_EGL          = -lEGL -lGLESv2
 
+QMAKE_INCDIR_OPENVG     = $$[QT_SYSROOT]/opt/vc/include
+QMAKE_LIBDIR_OPENVG     = $$[QT_SYSROOT]/opt/vc/lib
+QMAKE_LIBS_OPENVG       = -lOpenVG -lGLESv2
+
 contains(DISTRO, squeeze) {
     #Debian Squeeze: Legacy everything
     QMAKE_LIBS_OPENGL_ES2   = -lGLESv2 -lEGL
