# Maintainer: Alexander Rødseth <rodseth@gmail.com>
# Maintainer: Felix Yan <felixonmars@archlinux.org>
# Maintainer: Orhun Parmaksız <orhun@archlinux.org>
# Contributor: Daniele Basso <d dot bass05 at proton dot me>
# Contributor: T. Jameson Little <t.jameson.little at gmail dot com>
# Contributor: Usagi Ito <usagi@WonderRabbitProject.net>
# Contributor: siasia <http://pastebin.com/qsBEmNCw>
# Contributor: Julien Nicoulaud <julien.nicoulaud@gmail.com>
# Contributor: Jacob Bang <julemand101gmail.com>

# ALARM: Kevin Mihelich <kevin@archlinuxarm.org>
#  - added source and sha512 for ARMv7h, AArch64 builds of Dart
# ALARM: The one with the braid <info@braid.business>
# - unify with upstream PKGBUILD
# - map $CARCH architectures to Dart internal architectures
# - declare all Dart upstream supported architectures

pkgname=dart
pkgver=3.3.2
_commit=bc4150a9a23da4b3497c1d76b196e97a3e10b6cc #https://github.com/dart-lang/sdk/commits/stable/
pkgrel=2
pkgdesc='The dart programming language SDK'
arch=('x86_64' 'i686' 'aarch64' 'armv7h' 'riscv64')
# compiling the SDk will take quite an amount of memory
highmem=1
url='https://dart.dev/'
depends=('glibc')
license=('BSD')
makedepends=(
  'dart'
  'git'
  'gn'
  'ninja'
  'python'
  'python-httplib2'
  'python-six'
  # TODO: once teapot-tools are packaged one day, use them instead of depot-tools clone
  # 'teapot-tools'
)
source=(
  "git+https://github.com/dart-lang/sdk.git#commit=$_commit"
  "git+https://chromium.googlesource.com/chromium/tools/depot_tools.git"
  "DEPS.patch"
)
sha256sums=('e77b487224ee78d981806c46353400cb0a7023f695284d1bbeb4566df1ffb280'
            'SKIP'
            'db6576a70c6719e26795b9824546058b79fefa64158c1002d36546d826084403')

prepare() {
  cat >.gclient <<EOF
solutions = [
  {
    "name": "sdk",
    "url": "file://${srcdir}/sdk",
    "deps_file": "DEPS",
    "managed": False,
    "custom_deps": {},
    "custom_vars": {},
  },
]
EOF

  # TODO: remove once teapot-tools are packages
  export PATH+=":$PWD/depot_tools" DEPOT_TOOLS_UPDATE=0

  patch -Np 1 --input=$srcdir/DEPS.patch -d sdk

  # TODO: refactor once teapot-tools are packages
  # gclient sync \
  python depot_tools/gclient.py sync \
      --nohooks \
      --no-history \
      --shallow \
      -r ${srcdir}/sdk@${_commit}

  dart tools/generate_package_config.dart
  python tools/generate_sdk_version_file.py

  sed -i 's|prefix = rebased_clang_dir|prefix= ""|g' build/toolchain/linux/BUILD.gn # use system clang
  sed -i 's|}/|}|g' build/toolchain/linux/BUILD.gn # use system clang
  sed -i 's|rebase|#|g' build/toolchain/linux/BUILD.gn
}

build() {
  cd sdk

  # gn args --list out
 
  case "$CARCH" in
    "x86_64")
      readonly DART_ARCH="x64"
      ;;
    "i686")
      readonly DART_ARCH="ia32"
      ;;
    "aarch64")
      readonly DART_ARCH="arm64"
      ;;
    "armv7h")
      readonly DART_ARCH="arm"
      ;;
    "riscv64")
      readonly DART_ARCH="riscv64"
      ;;

  esac

  /usr/bin/gn gen -qv out --args='
                        target_cpu = "'${DART_ARCH}'"
                        is_debug = false
                        is_release = true
                        is_clang = false
                        dart_platform_sdk = false
                        verify_sdk_hash = false'
  ninja create_sdk -v -C out
}

package() {
  # cd to directory
  cd sdk/out/

  # Create directories
  install -d "$pkgdir"{"/opt/$pkgname-sdk",/usr/{bin,"share/doc/$pkgname"}}

  # Package the files
  cp -a "$pkgname-sdk/"* "$pkgdir/opt/$pkgname-sdk/"

  # Set up symbolic links for the executables
  for f in dart dartaotruntime; do
    ln -s "/opt/$pkgname-sdk/bin/$f" "$pkgdir/usr/bin/$f"
  done

  # Package documentation
  install -Dm644 "$pkgdir/opt/$pkgname-sdk/README" -t "$pkgdir/usr/share/doc/$pkgname"

  # BSD License
  install -Dm644 ../LICENSE "$pkgdir/usr/share/licenses/$pkgname/LICENSE"
}

# vim:set ts=2 sw=2 et:
