# Maintainer: Guillaume ALAUX <guillaume@archlinux.org>
# Contributor: Emanuel Couto <emanuel dot amaral dot couto at gmail dot com>
# Contributor: Richard Jackson <rdjack21 at gmail dot com>
# Contributor: Tinx <arch at tinx dot eu>
# Contributor: Jens Kapitza <j dot kapitza at schwarze-allianz dot de>
# Contributor: Olli <olli at coderkun dot de>
# Contributor: Ronny Lorenz <ronny at tbi dot univie dot ac dot at>

# Demos available in `apps/samples`
# To build them: `ant -Dplatforms.JDK_1.8.home=/usr/lib/jvm/default jar`

buildarch=4

pkgbase=java-openjfx
pkgname=('java-openjfx' 'java-openjfx-doc' 'java-openjfx-src')
_java_ver=8
_jdk_update=131
_jdk_build=11
_hgtag=${_java_ver}u${_jdk_update}-b${_jdk_build}
pkgver=${_java_ver}.u${_jdk_update}
pkgrel=1
pkgdesc='Java OpenJFX 8 client application platform (open-source implementation of JavaFX)'
arch=('i686' 'x86_64' 'armv7h')
url='https://wiki.openjdk.java.net/display/OpenJFX/Main'
license=('GPL')
makedepends=('java-environment-openjdk=8' 'bison' 'gperf' 'gtk2'
             'libxtst' 'ffmpeg' 'python2' 'qt5-base' 'webkit2gtk' 'ruby' 'cmake' 'apache-ant')
source=(http://hg.openjdk.java.net/openjfx/8u-dev/rt/archive/${_hgtag}.tar.bz2
        gradle.properties
        https://services.gradle.org/distributions/gradle-1.8-bin.zip
        01-skip-verify-java.patch
        02-use-system-libraries.patch
        03-buildflags.patch
        05-set-antlr-timeout.patch
        06-disable-architecture-verification.patch
        07-disable-assembler-on-unsupported-archs.patch
        08-disable-sse2.patch
        09-fix-conflicting-uchar32-typedef.patch
        10-javadoc-locale.patch
        11-icu-dynamic-linking.patch
        15-fix-javadoc-refererences.diff
        16-reproducible-build-timestamp.patch
        17-gcc-compatibility.patch
        19-disable-webkit-sampling-profiler.patch
        fix-arm32-build.patch
        fix-arm64-build.patch
        openjfx-icu59.patch)

sha256sums=('035e35c90557ea0d82cebf87a7d54164b4b75c3064b98f990f18a14db303bddb'
            '1d09385ac23d755aec079954247365de3875507641f5ecd7bd3511ebf3fa9e3c'
            'a342bbfa15fd18e2482287da4959588f45a41b60910970a16e6d97959aea5703'
            'd2c8f9802b7395acb08dca1da107a15187d01a3e9e3a5ad04d57d824ae8829c0'
            '73f5e92341eade6c7a9b9122a298382f684db52c70bfe630ea727fdda28c3d9b'
            '6080df3e4a091d07d9ee60cffa3df6e0334ddbf3751b4defb3a88bad65295429'
            '1132cac7835074395b467e49f15e10ac8e9c5ac2512c18f58cf6089b33b766ea'
            '0fec42ecc34372a192b1f2bd7f3ab7d2c39da39367c11d1a242c3756e8c77aae'
            'cca93c5ef794aa0c23aa509b6e7403dab0f4e2b316ccfd40fb7aebd966b98616'
            '4c8ac9ec7d86e6dea90f661bbba86151dd195f83ab4b08592fd91a49c3f64828'
            'fba880e7b68092bc3f16c793966f4319d62622bcc036e64292b6885507663252'
            '6250b1893c971383eb5cf28174353c3df8bff551bad42be576a7a89ded576cef'
            '1341edceae68a020ba1c6f96c063164c6230e23386d846c0631d4eb56ede4cd0'
            '661aeec15b9fdcb9eeab6d1d901ee98572ee76db8df301b986cbbabd7dda6420'
            '0e839031eb9ad2e151808974a645d27c42867570f42f4d80f4afc775a0e12872'
            '864967467efeaffdabe1e60b7cfd0a27ce93be55ef45ef9993790219ad164554'
            'd03c618fe39d9cb1c878188392ec0298684cba9329641b794663bf0f672f5d22'
            '0a998215d340fbcf3f77ed888048760ea52d4160cfb716e4bb211decec249860'
            'e5eb80e9d1487519aaf3d53cc64f62be5d2e29fe8a5d108b6df97c5cb2828d0b'
            '145b2c985547b082faeb4f310b97b7e4bd48223e33203f0dda03081f9973c8d4')

_openjdk8dir="/usr/lib/jvm/java-8-openjdk"

case $CARCH in
  'i686') _CARCH='i386' ;;
  'x86_64')_CARCH='amd64' ;;
  arm*    )_CARCH='arm' ;;
esac

prepare() {
  cd "rt-${_hgtag}"
  for p in 01-skip-verify-java.patch \
      02-use-system-libraries.patch \
      03-buildflags.patch \
      05-set-antlr-timeout.patch \
      06-disable-architecture-verification.patch \
      07-disable-assembler-on-unsupported-archs.patch \
      08-disable-sse2.patch \
      09-fix-conflicting-uchar32-typedef.patch \
      10-javadoc-locale.patch \
      11-icu-dynamic-linking.patch \
      fix-arm64-build.patch \
      fix-arm32-build.patch \
      15-fix-javadoc-refererences.diff \
      17-gcc-compatibility.patch \
      19-disable-webkit-sampling-profiler.patch \
      openjfx-icu59.patch ; do
    patch -p1 < "${srcdir}/${p}"
  done
}

build() {
  cd "rt-${_hgtag}"

  ln -sf "${srcdir}/gradle.properties" .
  export GRADLE_USER_HOME="${srcdir}/gradle_home"
  mkdir -p ${GRADLE_USER_HOME}

  # work around a compilation issue with Gradle 2.x
  mkdir -p modules/web/build/linux/Release/WebCore/generated/java/com/sun/webkit/dom/
  mkdir -p modules/web/build/linux/Release/WebCore/generated/java/com/sun/webkit/perf/
  cp modules/web/src/main/java/com/sun/webkit/Disposer*            modules/web/build/linux/Release/WebCore/generated/java/com/sun/webkit/
  cp modules/web/src/main/java/com/sun/webkit/Invoker.java         modules/web/build/linux/Release/WebCore/generated/java/com/sun/webkit/
  cp modules/web/src/main/java/com/sun/webkit/dom/JSObject.java    modules/web/build/linux/Release/WebCore/generated/java/com/sun/webkit/dom/
  cp modules/web/src/main/java/com/sun/webkit/perf/PerfLogger.java modules/web/build/linux/Release/WebCore/generated/java/com/sun/webkit/perf/

  # Copy the ICU and sqlite libraries required by JavaScriptCore
  mkdir -p modules/web/build/linux/import/lib/
  cp /usr/lib/libicui18n.so modules/web/build/linux/import/lib/libicui18n.a
  cp /usr/lib/libicuuc.so   modules/web/build/linux/import/lib/libicuuc.a
  cp /usr/lib/libicudata.so modules/web/build/linux/import/lib/libicudata.a
  cp /usr/lib/libsqlite3.so modules/web/build/linux/import/lib/libsqlite3.a



  "${srcdir}"/gradle-1.8/bin/gradle
}

package_java-openjfx() {
  pkgdesc='Java OpenJFX 8 client application platform (open-source implementation of JavaFX)'
  depends=('java-runtime-openjdk=8' 'gstreamer' 'libxtst' 'webkit2gtk' 'ffmpeg' 'qt5-base'  'swt' 'icu' 'sqlite')
  conflicts=('openjfx')
  replaces=('openjfx')

  local _builddir="${srcdir}/rt-${_hgtag}/build"
  local _sdkdir="${_builddir}/sdk"

  install -d "${pkgdir}${_openjdk8dir}/jre/lib/${_CARCH}"
  install -m755 "${_sdkdir}/rt/lib/${_CARCH}"/*.* "${pkgdir}${_openjdk8dir}/jre/lib/${_CARCH}"

  install -d "${pkgdir}${_openjdk8dir}/jre/lib/ext"
  install -m644 "${_sdkdir}/rt/lib/ext"/*.* "${pkgdir}${_openjdk8dir}/jre/lib/ext"
  install -m644 "${_sdkdir}/rt/lib"/*.* "${pkgdir}${_openjdk8dir}/jre/lib"

  install -d "${pkgdir}${_openjdk8dir}/lib"
  install -m644 "${_sdkdir}/lib"/*.* "${pkgdir}${_openjdk8dir}/lib"

  install -d "${pkgdir}${_openjdk8dir}/bin"
  install -m755 "${_sdkdir}/bin"/* "${pkgdir}${_openjdk8dir}/bin"

  install -m644 -D "${_sdkdir}/man/man1/javapackager.1" "${pkgdir}/usr/share/man/man1/javapackager.1"
}

package_java-openjfx-doc() {
  pkgdesc='Java OpenJFX 8 client application platform (open-source implementation of JavaFX) - documentation'
  conflicts=('openjfx-doc')
  replaces=('openjfx-doc')

  local _builddir="${srcdir}/rt-${_hgtag}/build"
  local _sdkdir="${_builddir}/sdk"
  local docdir="/usr/share/doc"

  install -d "${pkgdir}${docdir}/openjfx"
  cp -dr --no-preserve=ownership "${_builddir}/javadoc"/* "${pkgdir}${docdir}/openjfx"
}

package_java-openjfx-src() {
  pkgdesc='Java OpenJFX 8 client application platform (open-source implementation of JavaFX) - sources'
  conflicts=('openjfx-src')
  replaces=('openjfx-src')

  local _builddir="${srcdir}/rt-${_hgtag}/build"
  local _sdkdir="${_builddir}/sdk"

  install -d "${pkgdir}${_openjdk8dir}"
  install -m644 "${_builddir}/javafx-src.zip" "${pkgdir}${_openjdk8dir}"
}
