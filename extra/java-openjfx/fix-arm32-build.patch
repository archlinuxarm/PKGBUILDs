Index: b/modules/media/src/main/native/gstreamer/projects/linux/avplugin/Makefile
===================================================================
--- a/modules/media/src/main/native/gstreamer/projects/linux/avplugin/Makefile
+++ b/modules/media/src/main/native/gstreamer/projects/linux/avplugin/Makefile
@@ -55,11 +55,6 @@ INCLUDES += $(shell pkg-config --cflags
 LDFLAGS  += $(shell pkg-config --libs libavcodec libavformat)
 endif
 
-ifeq ($(ARCH), x32)
-    CFLAGS += -m32
-    LDFLAGS += -m32
-endif
-
 SOURCES = av/fxavcodecplugin.c  \
           av/avelement.c        \
           av/decoder.c          \
Index: b/modules/media/src/main/native/gstreamer/projects/linux/fxplugins/Makefile
===================================================================
--- a/modules/media/src/main/native/gstreamer/projects/linux/fxplugins/Makefile
+++ b/modules/media/src/main/native/gstreamer/projects/linux/fxplugins/Makefile
@@ -45,11 +45,6 @@ PACKAGES_LIBS := $(shell pkg-config --li
 
 LDFLAGS = -L$(BUILD_DIR) -lgstreamer-lite $(PACKAGES_LIBS) 
 
-ifeq ($(ARCH), x32)
-    CFLAGS += -m32
-    LDFLAGS += -m32
-endif
-
 SOURCES = fxplugins.c                        \
           progressbuffer/progressbuffer.c    \
           progressbuffer/hlsprogressbuffer.c \
Index: b/modules/media/src/main/native/gstreamer/projects/linux/gstreamer-lite/Makefile
===================================================================
--- a/modules/media/src/main/native/gstreamer/projects/linux/gstreamer-lite/Makefile
+++ b/modules/media/src/main/native/gstreamer/projects/linux/gstreamer-lite/Makefile
@@ -70,11 +70,6 @@ PACKAGES_LIBS := $(shell pkg-config --li
 
 LDFLAGS = -L$(BUILD_DIR) -lm $(PACKAGES_LIBS) 
 
-ifeq ($(ARCH), x32)
-    CFLAGS += -m32
-    LDFLAGS += -m32
-endif
-
 SOURCES = \
      gstreamer/gst/gst.c                                             \
      gstreamer/gst/gstbin.c                                          \
Index: b/modules/media/src/main/native/jfxmedia/projects/linux/Makefile
===================================================================
--- a/modules/media/src/main/native/jfxmedia/projects/linux/Makefile
+++ b/modules/media/src/main/native/jfxmedia/projects/linux/Makefile
@@ -67,11 +67,6 @@ CFLAGS  += $(shell dpkg-buildflags --get
 CFLAGS  += $(shell dpkg-buildflags --get CFLAGS) -Wall
 LDFLAGS += $(shell dpkg-buildflags --get LDFLAGS)
 
-ifeq ($(ARCH), x32)
-    CFLAGS += -m32
-    LDFLAGS += -m32
-endif
-
 CPP_SOURCES = \
         jni/com_sun_media_jfxmedia_logging_Logger.cpp           \
         jni/JavaBandsHolder.cpp 				\
Index: b/buildSrc/linux.gradle
===================================================================
--- a/buildSrc/linux.gradle
+++ b/buildSrc/linux.gradle
@@ -48,10 +48,6 @@ def commonFlags = [
 commonFlags.addAll("dpkg-buildflags --get CPPFLAGS  ".execute().text.trim().split(" "))
 commonFlags.addAll("dpkg-buildflags --get CXXFLAGS".execute().text.trim().split(" "))
 
-if (!IS_64) {
-    commonFlags += "-m32"
-}
-
 // Specify the compilation parameters and link parameters
 def ccFlags = [
         commonFlags, "-I$JDK_HOME/include", "-I$JDK_HOME/include/linux", "-c",
@@ -179,20 +175,12 @@ LINUX.launcher.compiler = compiler
 LINUX.launcher.ccFlags = ["-DJAVAARCH=\"$OS_ARCH\"", "-I$JDK_HOME/include", "-I$JDK_HOME/include/linux", "-c"]
 LINUX.launcher.linker = linker
 LINUX.launcher.linkFlags = ["-ldl"]
-if (!IS_64) {
-    LINUX.launcher.ccFlags += "-m32"
-    LINUX.launcher.linkFlags += "-m32"
-}
 
 LINUX.launcherlibrary = [:]
 LINUX.launcherlibrary.compiler = compiler
 LINUX.launcherlibrary.ccFlags = ["-DJAVAARCH=\"$OS_ARCH\"", "-I$JDK_HOME/include", "-I$JDK_HOME/include/linux", "-c", "-fPIC", "-std=gnu++98"]
 LINUX.launcherlibrary.linker = linker
 LINUX.launcherlibrary.linkFlags = ["-ldl", "-lpthread", "-shared"]
-if (!IS_64) {
-    LINUX.launcherlibrary.ccFlags += "-m32"
-    LINUX.launcherlibrary.linkFlags += "-m32"
-}
 
 LINUX.iio = [:]
 LINUX.iio.javahInclude = ["com/sun/javafx/iio/**/*"]
--- a/build.gradle
+++ b/build.gradle
@@ -2568,9 +2568,6 @@
                 } else if (t.name == "mac") {
                     // Add any osx specific flags.
                 } else if (t.name == "linux") {
-                    if (!IS_64) {
-                        cmakeArgs = "-DCMAKE_C_FLAGS=-m32 -DCMAKE_CXX_FLAGS=-m32"
-                    }
                 } else if (t.name.startsWith("arm")) {
                     fail("ARM target is not supported as of now.")
                 }
