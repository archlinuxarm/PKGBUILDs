In several places mz80 converts two pointers to UINT32s and subtracts them.
Subtract the pointers directly and then convert the result instead.

Index: dgen-1.23/mz80/makez80.c
===================================================================
--- dgen-1.23.orig/mz80/makez80.c	2007-12-09 20:27:36.000000000 -0200
+++ dgen-1.23/mz80/makez80.c	2007-12-09 20:27:38.000000000 -0200
@@ -1657,7 +1657,7 @@
 		fprintf(fp, "				{\n");
 		fprintf(fp, "					if ((%s >= psMemWrite->lowAddr) && (%s <= psMemWrite->highAddr))\n", pszAddress, pszAddress);
 		fprintf(fp, "					{\n");
-		fprintf(fp, "						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;\n");
+		fprintf(fp, "						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);\n");
 		fprintf(fp, "						if (psMemWrite->memoryCall)\n");
 		fprintf(fp, "						{\n");
 		fprintf(fp, "							psMemWrite->memoryCall(%s, %s, psMemWrite);\n", pszAddress, pszValue);
@@ -1765,7 +1765,7 @@
 		fprintf(fp, "				{\n");
 		fprintf(fp, "					if ((%s >= psMemWrite->lowAddr) && (%s <= psMemWrite->highAddr))\n", pszAddress, pszAddress);
 		fprintf(fp, "					{\n");
-		fprintf(fp, "						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;\n");
+		fprintf(fp, "						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);\n");
 
 		fprintf(fp, "						if (psMemWrite->memoryCall)\n");
 		fprintf(fp, "						{\n");
@@ -1838,7 +1838,7 @@
 		fprintf(fp, "				{\n");
 		fprintf(fp, "					if ((%s >= psIoWrite->lowIoAddr) && (%s <= psIoWrite->highIoAddr))\n", pszIoAddress, pszIoAddress);
 		fprintf(fp, "					{\n");
-		fprintf(fp, "						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;\n");
+		fprintf(fp, "						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);\n");
 		fprintf(fp, "						psIoWrite->IOCall(%s, %s, psIoWrite);\n", pszIoAddress, pszValue);
 		fprintf(fp, "						psIoWrite = NULL;\n");
 		fprintf(fp, "						break;\n");
@@ -1919,7 +1919,7 @@
 		fprintf(fp, "				{\n");
 		fprintf(fp, "					if ((%s >= psMemRead->lowAddr) && (%s <= psMemRead->highAddr))\n", pszAddress, pszAddress);
 		fprintf(fp, "					{\n");
-		fprintf(fp, "						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;\n");
+		fprintf(fp, "						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);\n");
 		fprintf(fp, "						if (psMemRead->memoryCall)\n");
 		fprintf(fp, "						{\n");
 		fprintf(fp, "							%s = psMemRead->memoryCall(%s, psMemRead);\n", pszTarget, pszAddress);
@@ -2030,7 +2030,7 @@
 		fprintf(fp, "				{\n");
 		fprintf(fp, "					if ((%s >= psMemRead->lowAddr) && (%s <= psMemRead->highAddr))\n", pszAddress, pszAddress);
 		fprintf(fp, "					{\n");
-		fprintf(fp, "						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;\n");
+		fprintf(fp, "						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);\n");
 		fprintf(fp, "						if (psMemRead->memoryCall)\n");
 		fprintf(fp, "						{\n");
 		fprintf(fp, "							%s = psMemRead->memoryCall(%s, psMemRead);\n", pszTarget, pszAddress);
@@ -2127,7 +2127,7 @@
 		fprintf(fp, "				{\n");
 		fprintf(fp, "					if ((%s >= psIoRead->lowIoAddr) && (%s <= psIoRead->highIoAddr))\n", pszIoAddress, pszIoAddress);
 		fprintf(fp, "					{\n");
-		fprintf(fp, "						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;\n");
+		fprintf(fp, "						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);\n");
 		fprintf(fp, "						%s = psIoRead->IOCall(%s, psIoRead);\n", pszTarget, pszIoAddress);
 		fprintf(fp, "						psIoRead = NULL;\n");
 		fprintf(fp, "						break;\n");
@@ -2416,7 +2416,7 @@
 			fprintf(fp, "				if (--cpu.z80B)\n");
 			fprintf(fp, "				{\n");
 			fprintf(fp, "					dwElapsedTicks += 5;	/* 5 More for jump taken */\n");
-			fprintf(fp, "					cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;\n");
+			fprintf(fp, "					cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);\n");
 			fprintf(fp, "					sdwAddr = (sdwAddr + (INT32) cpu.z80pc) & 0xffff;\n");
 			fprintf(fp, "					pbPC = cpu.z80Base + sdwAddr;	/* Normalize the address */\n");
 			fprintf(fp, "				}\n");
@@ -3199,7 +3199,7 @@
 	if (MZ80_C == bWhat)
 	{
 		fprintf(fp, "				sdwAddr = (INT8) *pbPC++;	/* Get LSB first */\n");
-		fprintf(fp, "				cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;\n");
+		fprintf(fp, "				cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);\n");
 		fprintf(fp, "				sdwAddr = (sdwAddr + (INT32) cpu.z80pc) & 0xffff;\n");
 
 		if (0x18 != dwOpcode)
@@ -3280,7 +3280,7 @@
 		{
 			fprintf(fp, "				if %s\n", pbFlagsC[(dwOpcode >> 3) & 0x07]);
 			fprintf(fp, "				{\n");
-			fprintf(fp, "					cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;\n");
+			fprintf(fp, "					cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);\n");
 			fprintf(fp, "					pbSP = (cpu.z80Base + cpu.z80sp - 1);	/* Normalize the stack pointer */\n");
 			fprintf(fp, "					*pbSP-- = cpu.z80pc >> 8;	/* MSB */\n");
 			fprintf(fp, "					*pbSP = (UINT8) cpu.z80pc;	/* LSB */\n");
@@ -3290,7 +3290,7 @@
 		}
 		else		// Just a regular call
 		{
-			fprintf(fp, "				cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;\n");
+			fprintf(fp, "				cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);\n");
 			fprintf(fp, "				pbSP = (cpu.z80Base + cpu.z80sp - 1);	/* Normalize the stack pointer */\n");
 			fprintf(fp, "				*pbSP-- = cpu.z80pc >> 8;	/* LSB */\n");
 			fprintf(fp, "				*pbSP = (UINT8) cpu.z80pc;	/* MSB */\n");
@@ -3410,7 +3410,7 @@
 	else
 	if (MZ80_C == bWhat)
 	{
-		fprintf(fp, "				cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;\n");
+		fprintf(fp, "				cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);\n");
 		fprintf(fp, "				pbSP = (cpu.z80Base + cpu.z80sp - 1);	/* Normalize the stack pointer */\n");
 		fprintf(fp, "				*pbSP-- = cpu.z80pc >> 8;	/* LSB */\n");
 		fprintf(fp, "				*pbSP = (UINT8) cpu.z80pc;	/* MSB */\n");
@@ -7084,7 +7084,7 @@
 		fprintf(fp, "{\n");
 
 		fprintf(fp, "	pbPC -= dwCount; /* Invalid instruction - back up */\n");
-		fprintf(fp, "	dwReturnCode = (UINT32) pbPC - (UINT32) cpu.z80Base;\n");
+		fprintf(fp, "	dwReturnCode = (UINT32) (pbPC - cpu.z80Base);\n");
 		fprintf(fp, "	dwOriginalCycles -= sdwCyclesRemaining;\n");
 		fprintf(fp, "	sdwCyclesRemaining = 0;\n");
 
@@ -7203,7 +7203,7 @@
 
 		fprintf(fp, "	dwElapsedTicks += (dwOriginalCycles - sdwCyclesRemaining);\n\n");
 
-		fprintf(fp, "	cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;\n");
+		fprintf(fp, "	cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);\n");
 
 		fprintf(fp, "	return(dwReturnCode); /* Indicate success */\n");
 		fprintf(fp, "}\n\n");
Index: dgen-1.23/zz80.c
===================================================================
--- dgen-1.23.orig/zz80.c	2007-12-09 20:27:28.000000000 -0200
+++ dgen-1.23/zz80.c	2007-12-09 20:27:38.000000000 -0200
@@ -424,7 +424,7 @@
 static void InvalidInstruction(UINT32 dwCount)
 {
 	pbPC -= dwCount; /* Invalid instruction - back up */
-	dwReturnCode = (UINT32) pbPC - (UINT32) cpu.z80Base;
+	dwReturnCode = (UINT32) (pbPC - cpu.z80Base);
 	dwOriginalCycles -= sdwCyclesRemaining;
 	sdwCyclesRemaining = 0;
 }
@@ -495,7 +495,7 @@
 				{
 					if ((cpu.z80HL >= psMemRead->lowAddr) && (cpu.z80HL <= psMemRead->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemRead->memoryCall)
 						{
 							bTemp = psMemRead->memoryCall(cpu.z80HL, psMemRead);
@@ -524,7 +524,7 @@
 				{
 					if ((cpu.z80HL >= psMemWrite->lowAddr) && (cpu.z80HL <= psMemWrite->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemWrite->memoryCall)
 						{
 							psMemWrite->memoryCall(cpu.z80HL, bTemp, psMemWrite);
@@ -617,7 +617,7 @@
 				{
 					if ((cpu.z80HL >= psMemRead->lowAddr) && (cpu.z80HL <= psMemRead->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemRead->memoryCall)
 						{
 							bTemp = psMemRead->memoryCall(cpu.z80HL, psMemRead);
@@ -646,7 +646,7 @@
 				{
 					if ((cpu.z80HL >= psMemWrite->lowAddr) && (cpu.z80HL <= psMemWrite->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemWrite->memoryCall)
 						{
 							psMemWrite->memoryCall(cpu.z80HL, bTemp, psMemWrite);
@@ -745,7 +745,7 @@
 				{
 					if ((cpu.z80HL >= psMemRead->lowAddr) && (cpu.z80HL <= psMemRead->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemRead->memoryCall)
 						{
 							bTemp = psMemRead->memoryCall(cpu.z80HL, psMemRead);
@@ -775,7 +775,7 @@
 				{
 					if ((cpu.z80HL >= psMemWrite->lowAddr) && (cpu.z80HL <= psMemWrite->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemWrite->memoryCall)
 						{
 							psMemWrite->memoryCall(cpu.z80HL, bTemp, psMemWrite);
@@ -875,7 +875,7 @@
 				{
 					if ((cpu.z80HL >= psMemRead->lowAddr) && (cpu.z80HL <= psMemRead->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemRead->memoryCall)
 						{
 							bTemp = psMemRead->memoryCall(cpu.z80HL, psMemRead);
@@ -905,7 +905,7 @@
 				{
 					if ((cpu.z80HL >= psMemWrite->lowAddr) && (cpu.z80HL <= psMemWrite->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemWrite->memoryCall)
 						{
 							psMemWrite->memoryCall(cpu.z80HL, bTemp, psMemWrite);
@@ -999,7 +999,7 @@
 				{
 					if ((cpu.z80HL >= psMemRead->lowAddr) && (cpu.z80HL <= psMemRead->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemRead->memoryCall)
 						{
 							bTemp = psMemRead->memoryCall(cpu.z80HL, psMemRead);
@@ -1028,7 +1028,7 @@
 				{
 					if ((cpu.z80HL >= psMemWrite->lowAddr) && (cpu.z80HL <= psMemWrite->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemWrite->memoryCall)
 						{
 							psMemWrite->memoryCall(cpu.z80HL, bTemp, psMemWrite);
@@ -1121,7 +1121,7 @@
 				{
 					if ((cpu.z80HL >= psMemRead->lowAddr) && (cpu.z80HL <= psMemRead->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemRead->memoryCall)
 						{
 							bTemp = psMemRead->memoryCall(cpu.z80HL, psMemRead);
@@ -1150,7 +1150,7 @@
 				{
 					if ((cpu.z80HL >= psMemWrite->lowAddr) && (cpu.z80HL <= psMemWrite->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemWrite->memoryCall)
 						{
 							psMemWrite->memoryCall(cpu.z80HL, bTemp, psMemWrite);
@@ -1243,7 +1243,7 @@
 				{
 					if ((cpu.z80HL >= psMemRead->lowAddr) && (cpu.z80HL <= psMemRead->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemRead->memoryCall)
 						{
 							bTemp = psMemRead->memoryCall(cpu.z80HL, psMemRead);
@@ -1272,7 +1272,7 @@
 				{
 					if ((cpu.z80HL >= psMemWrite->lowAddr) && (cpu.z80HL <= psMemWrite->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemWrite->memoryCall)
 						{
 							psMemWrite->memoryCall(cpu.z80HL, bTemp, psMemWrite);
@@ -1365,7 +1365,7 @@
 				{
 					if ((cpu.z80HL >= psMemRead->lowAddr) && (cpu.z80HL <= psMemRead->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemRead->memoryCall)
 						{
 							bTemp = psMemRead->memoryCall(cpu.z80HL, psMemRead);
@@ -1394,7 +1394,7 @@
 				{
 					if ((cpu.z80HL >= psMemWrite->lowAddr) && (cpu.z80HL <= psMemWrite->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemWrite->memoryCall)
 						{
 							psMemWrite->memoryCall(cpu.z80HL, bTemp, psMemWrite);
@@ -1499,7 +1499,7 @@
 				{
 					if ((cpu.z80HL >= psMemRead->lowAddr) && (cpu.z80HL <= psMemRead->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemRead->memoryCall)
 						{
 							bTemp = psMemRead->memoryCall(cpu.z80HL, psMemRead);
@@ -1612,7 +1612,7 @@
 				{
 					if ((cpu.z80HL >= psMemRead->lowAddr) && (cpu.z80HL <= psMemRead->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemRead->memoryCall)
 						{
 							bTemp = psMemRead->memoryCall(cpu.z80HL, psMemRead);
@@ -1725,7 +1725,7 @@
 				{
 					if ((cpu.z80HL >= psMemRead->lowAddr) && (cpu.z80HL <= psMemRead->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemRead->memoryCall)
 						{
 							bTemp = psMemRead->memoryCall(cpu.z80HL, psMemRead);
@@ -1838,7 +1838,7 @@
 				{
 					if ((cpu.z80HL >= psMemRead->lowAddr) && (cpu.z80HL <= psMemRead->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemRead->memoryCall)
 						{
 							bTemp = psMemRead->memoryCall(cpu.z80HL, psMemRead);
@@ -1951,7 +1951,7 @@
 				{
 					if ((cpu.z80HL >= psMemRead->lowAddr) && (cpu.z80HL <= psMemRead->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemRead->memoryCall)
 						{
 							bTemp = psMemRead->memoryCall(cpu.z80HL, psMemRead);
@@ -2064,7 +2064,7 @@
 				{
 					if ((cpu.z80HL >= psMemRead->lowAddr) && (cpu.z80HL <= psMemRead->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemRead->memoryCall)
 						{
 							bTemp = psMemRead->memoryCall(cpu.z80HL, psMemRead);
@@ -2177,7 +2177,7 @@
 				{
 					if ((cpu.z80HL >= psMemRead->lowAddr) && (cpu.z80HL <= psMemRead->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemRead->memoryCall)
 						{
 							bTemp = psMemRead->memoryCall(cpu.z80HL, psMemRead);
@@ -2290,7 +2290,7 @@
 				{
 					if ((cpu.z80HL >= psMemRead->lowAddr) && (cpu.z80HL <= psMemRead->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemRead->memoryCall)
 						{
 							bTemp = psMemRead->memoryCall(cpu.z80HL, psMemRead);
@@ -2373,7 +2373,7 @@
 				{
 					if ((cpu.z80HL >= psMemRead->lowAddr) && (cpu.z80HL <= psMemRead->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemRead->memoryCall)
 						{
 							bTemp = psMemRead->memoryCall(cpu.z80HL, psMemRead);
@@ -2399,7 +2399,7 @@
 				{
 					if ((cpu.z80HL >= psMemWrite->lowAddr) && (cpu.z80HL <= psMemWrite->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemWrite->memoryCall)
 						{
 							psMemWrite->memoryCall(cpu.z80HL, bTemp, psMemWrite);
@@ -2471,7 +2471,7 @@
 				{
 					if ((cpu.z80HL >= psMemRead->lowAddr) && (cpu.z80HL <= psMemRead->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemRead->memoryCall)
 						{
 							bTemp = psMemRead->memoryCall(cpu.z80HL, psMemRead);
@@ -2497,7 +2497,7 @@
 				{
 					if ((cpu.z80HL >= psMemWrite->lowAddr) && (cpu.z80HL <= psMemWrite->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemWrite->memoryCall)
 						{
 							psMemWrite->memoryCall(cpu.z80HL, bTemp, psMemWrite);
@@ -2569,7 +2569,7 @@
 				{
 					if ((cpu.z80HL >= psMemRead->lowAddr) && (cpu.z80HL <= psMemRead->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemRead->memoryCall)
 						{
 							bTemp = psMemRead->memoryCall(cpu.z80HL, psMemRead);
@@ -2595,7 +2595,7 @@
 				{
 					if ((cpu.z80HL >= psMemWrite->lowAddr) && (cpu.z80HL <= psMemWrite->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemWrite->memoryCall)
 						{
 							psMemWrite->memoryCall(cpu.z80HL, bTemp, psMemWrite);
@@ -2667,7 +2667,7 @@
 				{
 					if ((cpu.z80HL >= psMemRead->lowAddr) && (cpu.z80HL <= psMemRead->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemRead->memoryCall)
 						{
 							bTemp = psMemRead->memoryCall(cpu.z80HL, psMemRead);
@@ -2693,7 +2693,7 @@
 				{
 					if ((cpu.z80HL >= psMemWrite->lowAddr) && (cpu.z80HL <= psMemWrite->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemWrite->memoryCall)
 						{
 							psMemWrite->memoryCall(cpu.z80HL, bTemp, psMemWrite);
@@ -2765,7 +2765,7 @@
 				{
 					if ((cpu.z80HL >= psMemRead->lowAddr) && (cpu.z80HL <= psMemRead->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemRead->memoryCall)
 						{
 							bTemp = psMemRead->memoryCall(cpu.z80HL, psMemRead);
@@ -2791,7 +2791,7 @@
 				{
 					if ((cpu.z80HL >= psMemWrite->lowAddr) && (cpu.z80HL <= psMemWrite->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemWrite->memoryCall)
 						{
 							psMemWrite->memoryCall(cpu.z80HL, bTemp, psMemWrite);
@@ -2863,7 +2863,7 @@
 				{
 					if ((cpu.z80HL >= psMemRead->lowAddr) && (cpu.z80HL <= psMemRead->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemRead->memoryCall)
 						{
 							bTemp = psMemRead->memoryCall(cpu.z80HL, psMemRead);
@@ -2889,7 +2889,7 @@
 				{
 					if ((cpu.z80HL >= psMemWrite->lowAddr) && (cpu.z80HL <= psMemWrite->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemWrite->memoryCall)
 						{
 							psMemWrite->memoryCall(cpu.z80HL, bTemp, psMemWrite);
@@ -2961,7 +2961,7 @@
 				{
 					if ((cpu.z80HL >= psMemRead->lowAddr) && (cpu.z80HL <= psMemRead->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemRead->memoryCall)
 						{
 							bTemp = psMemRead->memoryCall(cpu.z80HL, psMemRead);
@@ -2987,7 +2987,7 @@
 				{
 					if ((cpu.z80HL >= psMemWrite->lowAddr) && (cpu.z80HL <= psMemWrite->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemWrite->memoryCall)
 						{
 							psMemWrite->memoryCall(cpu.z80HL, bTemp, psMemWrite);
@@ -3059,7 +3059,7 @@
 				{
 					if ((cpu.z80HL >= psMemRead->lowAddr) && (cpu.z80HL <= psMemRead->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemRead->memoryCall)
 						{
 							bTemp = psMemRead->memoryCall(cpu.z80HL, psMemRead);
@@ -3085,7 +3085,7 @@
 				{
 					if ((cpu.z80HL >= psMemWrite->lowAddr) && (cpu.z80HL <= psMemWrite->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemWrite->memoryCall)
 						{
 							psMemWrite->memoryCall(cpu.z80HL, bTemp, psMemWrite);
@@ -3157,7 +3157,7 @@
 				{
 					if ((cpu.z80HL >= psMemRead->lowAddr) && (cpu.z80HL <= psMemRead->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemRead->memoryCall)
 						{
 							bTemp = psMemRead->memoryCall(cpu.z80HL, psMemRead);
@@ -3183,7 +3183,7 @@
 				{
 					if ((cpu.z80HL >= psMemWrite->lowAddr) && (cpu.z80HL <= psMemWrite->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemWrite->memoryCall)
 						{
 							psMemWrite->memoryCall(cpu.z80HL, bTemp, psMemWrite);
@@ -3255,7 +3255,7 @@
 				{
 					if ((cpu.z80HL >= psMemRead->lowAddr) && (cpu.z80HL <= psMemRead->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemRead->memoryCall)
 						{
 							bTemp = psMemRead->memoryCall(cpu.z80HL, psMemRead);
@@ -3281,7 +3281,7 @@
 				{
 					if ((cpu.z80HL >= psMemWrite->lowAddr) && (cpu.z80HL <= psMemWrite->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemWrite->memoryCall)
 						{
 							psMemWrite->memoryCall(cpu.z80HL, bTemp, psMemWrite);
@@ -3353,7 +3353,7 @@
 				{
 					if ((cpu.z80HL >= psMemRead->lowAddr) && (cpu.z80HL <= psMemRead->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemRead->memoryCall)
 						{
 							bTemp = psMemRead->memoryCall(cpu.z80HL, psMemRead);
@@ -3379,7 +3379,7 @@
 				{
 					if ((cpu.z80HL >= psMemWrite->lowAddr) && (cpu.z80HL <= psMemWrite->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemWrite->memoryCall)
 						{
 							psMemWrite->memoryCall(cpu.z80HL, bTemp, psMemWrite);
@@ -3451,7 +3451,7 @@
 				{
 					if ((cpu.z80HL >= psMemRead->lowAddr) && (cpu.z80HL <= psMemRead->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemRead->memoryCall)
 						{
 							bTemp = psMemRead->memoryCall(cpu.z80HL, psMemRead);
@@ -3477,7 +3477,7 @@
 				{
 					if ((cpu.z80HL >= psMemWrite->lowAddr) && (cpu.z80HL <= psMemWrite->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemWrite->memoryCall)
 						{
 							psMemWrite->memoryCall(cpu.z80HL, bTemp, psMemWrite);
@@ -3549,7 +3549,7 @@
 				{
 					if ((cpu.z80HL >= psMemRead->lowAddr) && (cpu.z80HL <= psMemRead->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemRead->memoryCall)
 						{
 							bTemp = psMemRead->memoryCall(cpu.z80HL, psMemRead);
@@ -3575,7 +3575,7 @@
 				{
 					if ((cpu.z80HL >= psMemWrite->lowAddr) && (cpu.z80HL <= psMemWrite->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemWrite->memoryCall)
 						{
 							psMemWrite->memoryCall(cpu.z80HL, bTemp, psMemWrite);
@@ -3647,7 +3647,7 @@
 				{
 					if ((cpu.z80HL >= psMemRead->lowAddr) && (cpu.z80HL <= psMemRead->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemRead->memoryCall)
 						{
 							bTemp = psMemRead->memoryCall(cpu.z80HL, psMemRead);
@@ -3673,7 +3673,7 @@
 				{
 					if ((cpu.z80HL >= psMemWrite->lowAddr) && (cpu.z80HL <= psMemWrite->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemWrite->memoryCall)
 						{
 							psMemWrite->memoryCall(cpu.z80HL, bTemp, psMemWrite);
@@ -3745,7 +3745,7 @@
 				{
 					if ((cpu.z80HL >= psMemRead->lowAddr) && (cpu.z80HL <= psMemRead->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemRead->memoryCall)
 						{
 							bTemp = psMemRead->memoryCall(cpu.z80HL, psMemRead);
@@ -3771,7 +3771,7 @@
 				{
 					if ((cpu.z80HL >= psMemWrite->lowAddr) && (cpu.z80HL <= psMemWrite->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemWrite->memoryCall)
 						{
 							psMemWrite->memoryCall(cpu.z80HL, bTemp, psMemWrite);
@@ -3843,7 +3843,7 @@
 				{
 					if ((cpu.z80HL >= psMemRead->lowAddr) && (cpu.z80HL <= psMemRead->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemRead->memoryCall)
 						{
 							bTemp = psMemRead->memoryCall(cpu.z80HL, psMemRead);
@@ -3869,7 +3869,7 @@
 				{
 					if ((cpu.z80HL >= psMemWrite->lowAddr) && (cpu.z80HL <= psMemWrite->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemWrite->memoryCall)
 						{
 							psMemWrite->memoryCall(cpu.z80HL, bTemp, psMemWrite);
@@ -4232,7 +4232,7 @@
 				{
 					if ((dwAddr >= psIoRead->lowIoAddr) && (dwAddr <= psIoRead->highIoAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						cpu.z80B = psIoRead->IOCall(dwAddr, psIoRead);
 						psIoRead = NULL;
 						break;
@@ -4258,7 +4258,7 @@
 				{
 					if ((dwAddr >= psIoWrite->lowIoAddr) && (dwAddr <= psIoWrite->highIoAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						psIoWrite->IOCall(dwAddr, cpu.z80B, psIoWrite);
 						psIoWrite = NULL;
 						break;
@@ -4294,7 +4294,7 @@
 				{
 					if ((dwTemp >= psMemWrite->lowAddr) && (dwTemp <= psMemWrite->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemWrite->memoryCall)
 						{
 							psMemWrite->memoryCall(dwTemp, (cpu.z80BC & 0xff), psMemWrite);
@@ -4361,7 +4361,7 @@
 				{
 					if ((dwAddr >= psIoRead->lowIoAddr) && (dwAddr <= psIoRead->highIoAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						cpu.z80C = psIoRead->IOCall(dwAddr, psIoRead);
 						psIoRead = NULL;
 						break;
@@ -4387,7 +4387,7 @@
 				{
 					if ((dwAddr >= psIoWrite->lowIoAddr) && (dwAddr <= psIoWrite->highIoAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						psIoWrite->IOCall(dwAddr, cpu.z80C, psIoWrite);
 						psIoWrite = NULL;
 						break;
@@ -4423,7 +4423,7 @@
 				{
 					if ((dwTemp >= psMemRead->lowAddr) && (dwTemp <= psMemRead->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemRead->memoryCall)
 						{
 							cpu.z80BC = psMemRead->memoryCall(dwTemp, psMemRead);
@@ -4485,7 +4485,7 @@
 				{
 					if ((dwAddr >= psIoRead->lowIoAddr) && (dwAddr <= psIoRead->highIoAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						cpu.z80D = psIoRead->IOCall(dwAddr, psIoRead);
 						psIoRead = NULL;
 						break;
@@ -4511,7 +4511,7 @@
 				{
 					if ((dwAddr >= psIoWrite->lowIoAddr) && (dwAddr <= psIoWrite->highIoAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						psIoWrite->IOCall(dwAddr, cpu.z80D, psIoWrite);
 						psIoWrite = NULL;
 						break;
@@ -4547,7 +4547,7 @@
 				{
 					if ((dwTemp >= psMemWrite->lowAddr) && (dwTemp <= psMemWrite->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemWrite->memoryCall)
 						{
 							psMemWrite->memoryCall(dwTemp, (cpu.z80DE & 0xff), psMemWrite);
@@ -4609,7 +4609,7 @@
 				{
 					if ((dwAddr >= psIoRead->lowIoAddr) && (dwAddr <= psIoRead->highIoAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						cpu.z80E = psIoRead->IOCall(dwAddr, psIoRead);
 						psIoRead = NULL;
 						break;
@@ -4635,7 +4635,7 @@
 				{
 					if ((dwAddr >= psIoWrite->lowIoAddr) && (dwAddr <= psIoWrite->highIoAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						psIoWrite->IOCall(dwAddr, cpu.z80E, psIoWrite);
 						psIoWrite = NULL;
 						break;
@@ -4671,7 +4671,7 @@
 				{
 					if ((dwTemp >= psMemRead->lowAddr) && (dwTemp <= psMemRead->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemRead->memoryCall)
 						{
 							cpu.z80DE = psMemRead->memoryCall(dwTemp, psMemRead);
@@ -4734,7 +4734,7 @@
 				{
 					if ((dwAddr >= psIoRead->lowIoAddr) && (dwAddr <= psIoRead->highIoAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						cpu.z80H = psIoRead->IOCall(dwAddr, psIoRead);
 						psIoRead = NULL;
 						break;
@@ -4760,7 +4760,7 @@
 				{
 					if ((dwAddr >= psIoWrite->lowIoAddr) && (dwAddr <= psIoWrite->highIoAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						psIoWrite->IOCall(dwAddr, cpu.z80H, psIoWrite);
 						psIoWrite = NULL;
 						break;
@@ -4796,7 +4796,7 @@
 				{
 					if ((dwTemp >= psMemWrite->lowAddr) && (dwTemp <= psMemWrite->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemWrite->memoryCall)
 						{
 							psMemWrite->memoryCall(dwTemp, (cpu.z80HL & 0xff), psMemWrite);
@@ -4847,7 +4847,7 @@
 				{
 					if ((cpu.z80HL >= psMemRead->lowAddr) && (cpu.z80HL <= psMemRead->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemRead->memoryCall)
 						{
 							bTemp = psMemRead->memoryCall(cpu.z80HL, psMemRead);
@@ -4875,7 +4875,7 @@
 				{
 					if ((cpu.z80HL >= psMemWrite->lowAddr) && (cpu.z80HL <= psMemWrite->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemWrite->memoryCall)
 						{
 							psMemWrite->memoryCall(cpu.z80HL, bTemp, psMemWrite);
@@ -4908,7 +4908,7 @@
 				{
 					if ((dwAddr >= psIoRead->lowIoAddr) && (dwAddr <= psIoRead->highIoAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						cpu.z80L = psIoRead->IOCall(dwAddr, psIoRead);
 						psIoRead = NULL;
 						break;
@@ -4934,7 +4934,7 @@
 				{
 					if ((dwAddr >= psIoWrite->lowIoAddr) && (dwAddr <= psIoWrite->highIoAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						psIoWrite->IOCall(dwAddr, cpu.z80L, psIoWrite);
 						psIoWrite = NULL;
 						break;
@@ -4992,7 +4992,7 @@
 				{
 					if ((cpu.z80HL >= psMemRead->lowAddr) && (cpu.z80HL <= psMemRead->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemRead->memoryCall)
 						{
 							bTemp = psMemRead->memoryCall(cpu.z80HL, psMemRead);
@@ -5020,7 +5020,7 @@
 				{
 					if ((cpu.z80HL >= psMemWrite->lowAddr) && (cpu.z80HL <= psMemWrite->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemWrite->memoryCall)
 						{
 							psMemWrite->memoryCall(cpu.z80HL, bTemp, psMemWrite);
@@ -5082,7 +5082,7 @@
 				{
 					if ((dwTemp >= psMemWrite->lowAddr) && (dwTemp <= psMemWrite->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemWrite->memoryCall)
 						{
 							psMemWrite->memoryCall(dwTemp, (cpu.z80sp & 0xff), psMemWrite);
@@ -5139,7 +5139,7 @@
 				{
 					if ((dwAddr >= psIoRead->lowIoAddr) && (dwAddr <= psIoRead->highIoAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						cpu.z80A = psIoRead->IOCall(dwAddr, psIoRead);
 						psIoRead = NULL;
 						break;
@@ -5165,7 +5165,7 @@
 				{
 					if ((dwAddr >= psIoWrite->lowIoAddr) && (dwAddr <= psIoWrite->highIoAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						psIoWrite->IOCall(dwAddr, cpu.z80A, psIoWrite);
 						psIoWrite = NULL;
 						break;
@@ -5201,7 +5201,7 @@
 				{
 					if ((dwTemp >= psMemRead->lowAddr) && (dwTemp <= psMemRead->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemRead->memoryCall)
 						{
 							cpu.z80sp = psMemRead->memoryCall(dwTemp, psMemRead);
@@ -5417,7 +5417,7 @@
 				{
 					if ((cpu.z80HL >= psMemRead->lowAddr) && (cpu.z80HL <= psMemRead->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemRead->memoryCall)
 						{
 							bTemp = psMemRead->memoryCall(cpu.z80HL, psMemRead);
@@ -5442,7 +5442,7 @@
 				{
 					if ((cpu.z80DE >= psMemWrite->lowAddr) && (cpu.z80DE <= psMemWrite->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemWrite->memoryCall)
 						{
 							psMemWrite->memoryCall(cpu.z80DE, bTemp, psMemWrite);
@@ -5484,7 +5484,7 @@
 				{
 					if ((cpu.z80HL >= psMemRead->lowAddr) && (cpu.z80HL <= psMemRead->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemRead->memoryCall)
 						{
 							bTemp = psMemRead->memoryCall(cpu.z80HL, psMemRead);
@@ -5526,7 +5526,7 @@
 				{
 					if ((cpu.z80B >= psIoRead->lowIoAddr) && (cpu.z80B <= psIoRead->highIoAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						bTemp = psIoRead->IOCall(cpu.z80B, psIoRead);
 						psIoRead = NULL;
 						break;
@@ -5544,7 +5544,7 @@
 				{
 					if ((cpu.z80HL >= psMemWrite->lowAddr) && (cpu.z80HL <= psMemWrite->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemWrite->memoryCall)
 						{
 							psMemWrite->memoryCall(cpu.z80HL, bTemp, psMemWrite);
@@ -5587,7 +5587,7 @@
 				{
 					if ((cpu.z80HL >= psMemRead->lowAddr) && (cpu.z80HL <= psMemRead->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemRead->memoryCall)
 						{
 							bTemp = psMemRead->memoryCall(cpu.z80HL, psMemRead);
@@ -5612,7 +5612,7 @@
 				{
 					if ((cpu.z80BC >= psIoWrite->lowIoAddr) && (cpu.z80BC <= psIoWrite->highIoAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						psIoWrite->IOCall(cpu.z80BC, bTemp, psIoWrite);
 						psIoWrite = NULL;
 						break;
@@ -5661,7 +5661,7 @@
 				{
 					if ((cpu.z80HL >= psMemRead->lowAddr) && (cpu.z80HL <= psMemRead->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemRead->memoryCall)
 						{
 							bTemp = psMemRead->memoryCall(cpu.z80HL, psMemRead);
@@ -5686,7 +5686,7 @@
 				{
 					if ((cpu.z80DE >= psMemWrite->lowAddr) && (cpu.z80DE <= psMemWrite->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemWrite->memoryCall)
 						{
 							psMemWrite->memoryCall(cpu.z80DE, bTemp, psMemWrite);
@@ -5728,7 +5728,7 @@
 				{
 					if ((cpu.z80HL >= psMemRead->lowAddr) && (cpu.z80HL <= psMemRead->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemRead->memoryCall)
 						{
 							bTemp = psMemRead->memoryCall(cpu.z80HL, psMemRead);
@@ -5770,7 +5770,7 @@
 				{
 					if ((cpu.z80B >= psIoRead->lowIoAddr) && (cpu.z80B <= psIoRead->highIoAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						bTemp = psIoRead->IOCall(cpu.z80B, psIoRead);
 						psIoRead = NULL;
 						break;
@@ -5788,7 +5788,7 @@
 				{
 					if ((cpu.z80HL >= psMemWrite->lowAddr) && (cpu.z80HL <= psMemWrite->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemWrite->memoryCall)
 						{
 							psMemWrite->memoryCall(cpu.z80HL, bTemp, psMemWrite);
@@ -5831,7 +5831,7 @@
 				{
 					if ((cpu.z80HL >= psMemRead->lowAddr) && (cpu.z80HL <= psMemRead->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemRead->memoryCall)
 						{
 							bTemp = psMemRead->memoryCall(cpu.z80HL, psMemRead);
@@ -5856,7 +5856,7 @@
 				{
 					if ((cpu.z80BC >= psIoWrite->lowIoAddr) && (cpu.z80BC <= psIoWrite->highIoAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						psIoWrite->IOCall(cpu.z80BC, bTemp, psIoWrite);
 						psIoWrite = NULL;
 						break;
@@ -5907,7 +5907,7 @@
 				{
 					if ((cpu.z80HL >= psMemRead->lowAddr) && (cpu.z80HL <= psMemRead->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemRead->memoryCall)
 						{
 							bTemp = psMemRead->memoryCall(cpu.z80HL, psMemRead);
@@ -5932,7 +5932,7 @@
 				{
 					if ((cpu.z80DE >= psMemWrite->lowAddr) && (cpu.z80DE <= psMemWrite->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemWrite->memoryCall)
 						{
 							psMemWrite->memoryCall(cpu.z80DE, bTemp, psMemWrite);
@@ -5979,7 +5979,7 @@
 				{
 					if ((cpu.z80HL >= psMemRead->lowAddr) && (cpu.z80HL <= psMemRead->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemRead->memoryCall)
 						{
 							bTemp = psMemRead->memoryCall(cpu.z80HL, psMemRead);
@@ -6027,7 +6027,7 @@
 				{
 					if ((cpu.z80B >= psIoRead->lowIoAddr) && (cpu.z80B <= psIoRead->highIoAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						bTemp = psIoRead->IOCall(cpu.z80B, psIoRead);
 						psIoRead = NULL;
 						break;
@@ -6045,7 +6045,7 @@
 				{
 					if ((cpu.z80HL >= psMemWrite->lowAddr) && (cpu.z80HL <= psMemWrite->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemWrite->memoryCall)
 						{
 							psMemWrite->memoryCall(cpu.z80HL, bTemp, psMemWrite);
@@ -6089,7 +6089,7 @@
 				{
 					if ((cpu.z80HL >= psMemRead->lowAddr) && (cpu.z80HL <= psMemRead->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemRead->memoryCall)
 						{
 							bTemp = psMemRead->memoryCall(cpu.z80HL, psMemRead);
@@ -6114,7 +6114,7 @@
 				{
 					if ((cpu.z80BC >= psIoWrite->lowIoAddr) && (cpu.z80BC <= psIoWrite->highIoAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						psIoWrite->IOCall(cpu.z80BC, bTemp, psIoWrite);
 						psIoWrite = NULL;
 						break;
@@ -6165,7 +6165,7 @@
 				{
 					if ((cpu.z80HL >= psMemRead->lowAddr) && (cpu.z80HL <= psMemRead->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemRead->memoryCall)
 						{
 							bTemp = psMemRead->memoryCall(cpu.z80HL, psMemRead);
@@ -6190,7 +6190,7 @@
 				{
 					if ((cpu.z80DE >= psMemWrite->lowAddr) && (cpu.z80DE <= psMemWrite->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemWrite->memoryCall)
 						{
 							psMemWrite->memoryCall(cpu.z80DE, bTemp, psMemWrite);
@@ -6237,7 +6237,7 @@
 				{
 					if ((cpu.z80HL >= psMemRead->lowAddr) && (cpu.z80HL <= psMemRead->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemRead->memoryCall)
 						{
 							bTemp = psMemRead->memoryCall(cpu.z80HL, psMemRead);
@@ -6285,7 +6285,7 @@
 				{
 					if ((cpu.z80B >= psIoRead->lowIoAddr) && (cpu.z80B <= psIoRead->highIoAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						bTemp = psIoRead->IOCall(cpu.z80B, psIoRead);
 						psIoRead = NULL;
 						break;
@@ -6303,7 +6303,7 @@
 				{
 					if ((cpu.z80HL >= psMemWrite->lowAddr) && (cpu.z80HL <= psMemWrite->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemWrite->memoryCall)
 						{
 							psMemWrite->memoryCall(cpu.z80HL, bTemp, psMemWrite);
@@ -6347,7 +6347,7 @@
 				{
 					if ((cpu.z80HL >= psMemRead->lowAddr) && (cpu.z80HL <= psMemRead->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemRead->memoryCall)
 						{
 							bTemp = psMemRead->memoryCall(cpu.z80HL, psMemRead);
@@ -6372,7 +6372,7 @@
 				{
 					if ((cpu.z80BC >= psIoWrite->lowIoAddr) && (cpu.z80BC <= psIoWrite->highIoAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						psIoWrite->IOCall(cpu.z80BC, bTemp, psIoWrite);
 						psIoWrite = NULL;
 						break;
@@ -6930,7 +6930,7 @@
 				{
 					if ((dwAddr >= psMemWrite->lowAddr) && (dwAddr <= psMemWrite->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemWrite->memoryCall)
 						{
 							psMemWrite->memoryCall(dwAddr, (cpu.z80IX & 0xff), psMemWrite);
@@ -7011,7 +7011,7 @@
 				{
 					if ((dwAddr >= psMemRead->lowAddr) && (dwAddr <= psMemRead->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemRead->memoryCall)
 						{
 							cpu.z80IX = psMemRead->memoryCall(dwAddr, psMemRead);
@@ -7098,7 +7098,7 @@
 				{
 					if ((dwAddr >= psMemRead->lowAddr) && (dwAddr <= psMemRead->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemRead->memoryCall)
 						{
 							bTemp = psMemRead->memoryCall(dwAddr, psMemRead);
@@ -7125,7 +7125,7 @@
 				{
 					if ((dwAddr >= psMemWrite->lowAddr) && (dwAddr <= psMemWrite->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemWrite->memoryCall)
 						{
 							psMemWrite->memoryCall(dwAddr, bTemp, psMemWrite);
@@ -7157,7 +7157,7 @@
 				{
 					if ((dwAddr >= psMemRead->lowAddr) && (dwAddr <= psMemRead->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemRead->memoryCall)
 						{
 							bTemp = psMemRead->memoryCall(dwAddr, psMemRead);
@@ -7184,7 +7184,7 @@
 				{
 					if ((dwAddr >= psMemWrite->lowAddr) && (dwAddr <= psMemWrite->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemWrite->memoryCall)
 						{
 							psMemWrite->memoryCall(dwAddr, bTemp, psMemWrite);
@@ -7216,7 +7216,7 @@
 				{
 					if ((sdwAddr >= psMemWrite->lowAddr) && (sdwAddr <= psMemWrite->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemWrite->memoryCall)
 						{
 							psMemWrite->memoryCall(sdwAddr, *pbPC++, psMemWrite);
@@ -7329,7 +7329,7 @@
 				{
 					if ((sdwAddr >= psMemRead->lowAddr) && (sdwAddr <= psMemRead->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemRead->memoryCall)
 						{
 							cpu.z80B = psMemRead->memoryCall(sdwAddr, psMemRead);
@@ -7398,7 +7398,7 @@
 				{
 					if ((sdwAddr >= psMemRead->lowAddr) && (sdwAddr <= psMemRead->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemRead->memoryCall)
 						{
 							cpu.z80C = psMemRead->memoryCall(sdwAddr, psMemRead);
@@ -7467,7 +7467,7 @@
 				{
 					if ((sdwAddr >= psMemRead->lowAddr) && (sdwAddr <= psMemRead->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemRead->memoryCall)
 						{
 							cpu.z80D = psMemRead->memoryCall(sdwAddr, psMemRead);
@@ -7536,7 +7536,7 @@
 				{
 					if ((sdwAddr >= psMemRead->lowAddr) && (sdwAddr <= psMemRead->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemRead->memoryCall)
 						{
 							cpu.z80E = psMemRead->memoryCall(sdwAddr, psMemRead);
@@ -7608,7 +7608,7 @@
 				{
 					if ((sdwAddr >= psMemRead->lowAddr) && (sdwAddr <= psMemRead->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemRead->memoryCall)
 						{
 							cpu.z80H = psMemRead->memoryCall(sdwAddr, psMemRead);
@@ -7681,7 +7681,7 @@
 				{
 					if ((sdwAddr >= psMemRead->lowAddr) && (sdwAddr <= psMemRead->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemRead->memoryCall)
 						{
 							cpu.z80L = psMemRead->memoryCall(sdwAddr, psMemRead);
@@ -7719,7 +7719,7 @@
 				{
 					if ((sdwAddr >= psMemWrite->lowAddr) && (sdwAddr <= psMemWrite->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemWrite->memoryCall)
 						{
 							psMemWrite->memoryCall(sdwAddr, cpu.z80B, psMemWrite);
@@ -7751,7 +7751,7 @@
 				{
 					if ((sdwAddr >= psMemWrite->lowAddr) && (sdwAddr <= psMemWrite->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemWrite->memoryCall)
 						{
 							psMemWrite->memoryCall(sdwAddr, cpu.z80C, psMemWrite);
@@ -7783,7 +7783,7 @@
 				{
 					if ((sdwAddr >= psMemWrite->lowAddr) && (sdwAddr <= psMemWrite->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemWrite->memoryCall)
 						{
 							psMemWrite->memoryCall(sdwAddr, cpu.z80D, psMemWrite);
@@ -7815,7 +7815,7 @@
 				{
 					if ((sdwAddr >= psMemWrite->lowAddr) && (sdwAddr <= psMemWrite->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemWrite->memoryCall)
 						{
 							psMemWrite->memoryCall(sdwAddr, cpu.z80E, psMemWrite);
@@ -7847,7 +7847,7 @@
 				{
 					if ((sdwAddr >= psMemWrite->lowAddr) && (sdwAddr <= psMemWrite->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemWrite->memoryCall)
 						{
 							psMemWrite->memoryCall(sdwAddr, cpu.z80H, psMemWrite);
@@ -7879,7 +7879,7 @@
 				{
 					if ((sdwAddr >= psMemWrite->lowAddr) && (sdwAddr <= psMemWrite->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemWrite->memoryCall)
 						{
 							psMemWrite->memoryCall(sdwAddr, cpu.z80L, psMemWrite);
@@ -7917,7 +7917,7 @@
 				{
 					if ((sdwAddr >= psMemWrite->lowAddr) && (sdwAddr <= psMemWrite->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemWrite->memoryCall)
 						{
 							psMemWrite->memoryCall(sdwAddr, cpu.z80A, psMemWrite);
@@ -7981,7 +7981,7 @@
 				{
 					if ((sdwAddr >= psMemRead->lowAddr) && (sdwAddr <= psMemRead->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemRead->memoryCall)
 						{
 							cpu.z80A = psMemRead->memoryCall(sdwAddr, psMemRead);
@@ -8058,7 +8058,7 @@
 				{
 					if ((dwAddr >= psMemRead->lowAddr) && (dwAddr <= psMemRead->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemRead->memoryCall)
 						{
 							bTemp = psMemRead->memoryCall(dwAddr, psMemRead);
@@ -8139,7 +8139,7 @@
 				{
 					if ((dwAddr >= psMemRead->lowAddr) && (dwAddr <= psMemRead->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemRead->memoryCall)
 						{
 							bTemp = psMemRead->memoryCall(dwAddr, psMemRead);
@@ -8221,7 +8221,7 @@
 				{
 					if ((dwAddr >= psMemRead->lowAddr) && (dwAddr <= psMemRead->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemRead->memoryCall)
 						{
 							bTemp = psMemRead->memoryCall(dwAddr, psMemRead);
@@ -8302,7 +8302,7 @@
 				{
 					if ((dwAddr >= psMemRead->lowAddr) && (dwAddr <= psMemRead->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemRead->memoryCall)
 						{
 							bTemp = psMemRead->memoryCall(dwAddr, psMemRead);
@@ -8384,7 +8384,7 @@
 				{
 					if ((dwAddr >= psMemRead->lowAddr) && (dwAddr <= psMemRead->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemRead->memoryCall)
 						{
 							bTemp = psMemRead->memoryCall(dwAddr, psMemRead);
@@ -8465,7 +8465,7 @@
 				{
 					if ((dwAddr >= psMemRead->lowAddr) && (dwAddr <= psMemRead->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemRead->memoryCall)
 						{
 							bTemp = psMemRead->memoryCall(dwAddr, psMemRead);
@@ -8546,7 +8546,7 @@
 				{
 					if ((dwAddr >= psMemRead->lowAddr) && (dwAddr <= psMemRead->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemRead->memoryCall)
 						{
 							bTemp = psMemRead->memoryCall(dwAddr, psMemRead);
@@ -8625,7 +8625,7 @@
 				{
 					if ((dwAddr >= psMemRead->lowAddr) && (dwAddr <= psMemRead->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemRead->memoryCall)
 						{
 							bTemp = psMemRead->memoryCall(dwAddr, psMemRead);
@@ -8828,7 +8828,7 @@
 				{
 					if ((cpu.z80sp >= psMemRead->lowAddr) && (cpu.z80sp <= psMemRead->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemRead->memoryCall)
 						{
 							cpu.z80IX = psMemRead->memoryCall(cpu.z80sp, psMemRead);
@@ -8868,7 +8868,7 @@
 				{
 					if ((cpu.z80sp >= psMemRead->lowAddr) && (cpu.z80sp <= psMemRead->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemRead->memoryCall)
 						{
 							dwAddr = psMemRead->memoryCall(cpu.z80sp, psMemRead);
@@ -8896,7 +8896,7 @@
 				{
 					if ((cpu.z80sp >= psMemWrite->lowAddr) && (cpu.z80sp <= psMemWrite->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemWrite->memoryCall)
 						{
 							psMemWrite->memoryCall(cpu.z80sp, (cpu.z80IX & 0xff), psMemWrite);
@@ -8937,7 +8937,7 @@
 				{
 					if ((cpu.z80sp >= psMemWrite->lowAddr) && (cpu.z80sp <= psMemWrite->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemWrite->memoryCall)
 						{
 							psMemWrite->memoryCall(cpu.z80sp, (cpu.z80IX & 0xff), psMemWrite);
@@ -9112,7 +9112,7 @@
 				{
 					if ((dwAddr >= psMemRead->lowAddr) && (dwAddr <= psMemRead->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemRead->memoryCall)
 						{
 							bTemp = psMemRead->memoryCall(dwAddr, psMemRead);
@@ -9176,7 +9176,7 @@
 				{
 					if ((dwAddr >= psMemWrite->lowAddr) && (dwAddr <= psMemWrite->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemWrite->memoryCall)
 						{
 							psMemWrite->memoryCall(dwAddr, bTemp, psMemWrite);
@@ -9245,7 +9245,7 @@
 				{
 					if ((dwAddr >= psMemWrite->lowAddr) && (dwAddr <= psMemWrite->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemWrite->memoryCall)
 						{
 							psMemWrite->memoryCall(dwAddr, bTemp, psMemWrite);
@@ -9315,7 +9315,7 @@
 				{
 					if ((dwAddr >= psMemWrite->lowAddr) && (dwAddr <= psMemWrite->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemWrite->memoryCall)
 						{
 							psMemWrite->memoryCall(dwAddr, bTemp, psMemWrite);
@@ -9385,7 +9385,7 @@
 				{
 					if ((dwAddr >= psMemWrite->lowAddr) && (dwAddr <= psMemWrite->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemWrite->memoryCall)
 						{
 							psMemWrite->memoryCall(dwAddr, bTemp, psMemWrite);
@@ -9454,7 +9454,7 @@
 				{
 					if ((dwAddr >= psMemWrite->lowAddr) && (dwAddr <= psMemWrite->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemWrite->memoryCall)
 						{
 							psMemWrite->memoryCall(dwAddr, bTemp, psMemWrite);
@@ -9523,7 +9523,7 @@
 				{
 					if ((dwAddr >= psMemWrite->lowAddr) && (dwAddr <= psMemWrite->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemWrite->memoryCall)
 						{
 							psMemWrite->memoryCall(dwAddr, bTemp, psMemWrite);
@@ -9633,7 +9633,7 @@
 				{
 					if ((dwAddr >= psMemWrite->lowAddr) && (dwAddr <= psMemWrite->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemWrite->memoryCall)
 						{
 							psMemWrite->memoryCall(dwAddr, bTemp, psMemWrite);
@@ -10115,7 +10115,7 @@
 				{
 					if ((dwAddr >= psMemWrite->lowAddr) && (dwAddr <= psMemWrite->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemWrite->memoryCall)
 						{
 							psMemWrite->memoryCall(dwAddr, bTemp, psMemWrite);
@@ -10181,7 +10181,7 @@
 				{
 					if ((dwAddr >= psMemWrite->lowAddr) && (dwAddr <= psMemWrite->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemWrite->memoryCall)
 						{
 							psMemWrite->memoryCall(dwAddr, bTemp, psMemWrite);
@@ -10247,7 +10247,7 @@
 				{
 					if ((dwAddr >= psMemWrite->lowAddr) && (dwAddr <= psMemWrite->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemWrite->memoryCall)
 						{
 							psMemWrite->memoryCall(dwAddr, bTemp, psMemWrite);
@@ -10313,7 +10313,7 @@
 				{
 					if ((dwAddr >= psMemWrite->lowAddr) && (dwAddr <= psMemWrite->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemWrite->memoryCall)
 						{
 							psMemWrite->memoryCall(dwAddr, bTemp, psMemWrite);
@@ -10379,7 +10379,7 @@
 				{
 					if ((dwAddr >= psMemWrite->lowAddr) && (dwAddr <= psMemWrite->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemWrite->memoryCall)
 						{
 							psMemWrite->memoryCall(dwAddr, bTemp, psMemWrite);
@@ -10445,7 +10445,7 @@
 				{
 					if ((dwAddr >= psMemWrite->lowAddr) && (dwAddr <= psMemWrite->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemWrite->memoryCall)
 						{
 							psMemWrite->memoryCall(dwAddr, bTemp, psMemWrite);
@@ -10511,7 +10511,7 @@
 				{
 					if ((dwAddr >= psMemWrite->lowAddr) && (dwAddr <= psMemWrite->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemWrite->memoryCall)
 						{
 							psMemWrite->memoryCall(dwAddr, bTemp, psMemWrite);
@@ -10577,7 +10577,7 @@
 				{
 					if ((dwAddr >= psMemWrite->lowAddr) && (dwAddr <= psMemWrite->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemWrite->memoryCall)
 						{
 							psMemWrite->memoryCall(dwAddr, bTemp, psMemWrite);
@@ -10643,7 +10643,7 @@
 				{
 					if ((dwAddr >= psMemWrite->lowAddr) && (dwAddr <= psMemWrite->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemWrite->memoryCall)
 						{
 							psMemWrite->memoryCall(dwAddr, bTemp, psMemWrite);
@@ -10709,7 +10709,7 @@
 				{
 					if ((dwAddr >= psMemWrite->lowAddr) && (dwAddr <= psMemWrite->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemWrite->memoryCall)
 						{
 							psMemWrite->memoryCall(dwAddr, bTemp, psMemWrite);
@@ -10775,7 +10775,7 @@
 				{
 					if ((dwAddr >= psMemWrite->lowAddr) && (dwAddr <= psMemWrite->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemWrite->memoryCall)
 						{
 							psMemWrite->memoryCall(dwAddr, bTemp, psMemWrite);
@@ -10841,7 +10841,7 @@
 				{
 					if ((dwAddr >= psMemWrite->lowAddr) && (dwAddr <= psMemWrite->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemWrite->memoryCall)
 						{
 							psMemWrite->memoryCall(dwAddr, bTemp, psMemWrite);
@@ -10907,7 +10907,7 @@
 				{
 					if ((dwAddr >= psMemWrite->lowAddr) && (dwAddr <= psMemWrite->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemWrite->memoryCall)
 						{
 							psMemWrite->memoryCall(dwAddr, bTemp, psMemWrite);
@@ -10973,7 +10973,7 @@
 				{
 					if ((dwAddr >= psMemWrite->lowAddr) && (dwAddr <= psMemWrite->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemWrite->memoryCall)
 						{
 							psMemWrite->memoryCall(dwAddr, bTemp, psMemWrite);
@@ -11039,7 +11039,7 @@
 				{
 					if ((dwAddr >= psMemWrite->lowAddr) && (dwAddr <= psMemWrite->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemWrite->memoryCall)
 						{
 							psMemWrite->memoryCall(dwAddr, bTemp, psMemWrite);
@@ -11105,7 +11105,7 @@
 				{
 					if ((dwAddr >= psMemWrite->lowAddr) && (dwAddr <= psMemWrite->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemWrite->memoryCall)
 						{
 							psMemWrite->memoryCall(dwAddr, bTemp, psMemWrite);
@@ -11328,7 +11328,7 @@
 				{
 					if ((dwAddr >= psMemWrite->lowAddr) && (dwAddr <= psMemWrite->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemWrite->memoryCall)
 						{
 							psMemWrite->memoryCall(dwAddr, (cpu.z80IY & 0xff), psMemWrite);
@@ -11409,7 +11409,7 @@
 				{
 					if ((dwAddr >= psMemRead->lowAddr) && (dwAddr <= psMemRead->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemRead->memoryCall)
 						{
 							cpu.z80IY = psMemRead->memoryCall(dwAddr, psMemRead);
@@ -11496,7 +11496,7 @@
 				{
 					if ((dwAddr >= psMemRead->lowAddr) && (dwAddr <= psMemRead->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemRead->memoryCall)
 						{
 							bTemp = psMemRead->memoryCall(dwAddr, psMemRead);
@@ -11523,7 +11523,7 @@
 				{
 					if ((dwAddr >= psMemWrite->lowAddr) && (dwAddr <= psMemWrite->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemWrite->memoryCall)
 						{
 							psMemWrite->memoryCall(dwAddr, bTemp, psMemWrite);
@@ -11555,7 +11555,7 @@
 				{
 					if ((dwAddr >= psMemRead->lowAddr) && (dwAddr <= psMemRead->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemRead->memoryCall)
 						{
 							bTemp = psMemRead->memoryCall(dwAddr, psMemRead);
@@ -11582,7 +11582,7 @@
 				{
 					if ((dwAddr >= psMemWrite->lowAddr) && (dwAddr <= psMemWrite->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemWrite->memoryCall)
 						{
 							psMemWrite->memoryCall(dwAddr, bTemp, psMemWrite);
@@ -11614,7 +11614,7 @@
 				{
 					if ((sdwAddr >= psMemWrite->lowAddr) && (sdwAddr <= psMemWrite->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemWrite->memoryCall)
 						{
 							psMemWrite->memoryCall(sdwAddr, *pbPC++, psMemWrite);
@@ -11727,7 +11727,7 @@
 				{
 					if ((sdwAddr >= psMemRead->lowAddr) && (sdwAddr <= psMemRead->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemRead->memoryCall)
 						{
 							cpu.z80B = psMemRead->memoryCall(sdwAddr, psMemRead);
@@ -11796,7 +11796,7 @@
 				{
 					if ((sdwAddr >= psMemRead->lowAddr) && (sdwAddr <= psMemRead->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemRead->memoryCall)
 						{
 							cpu.z80C = psMemRead->memoryCall(sdwAddr, psMemRead);
@@ -11865,7 +11865,7 @@
 				{
 					if ((sdwAddr >= psMemRead->lowAddr) && (sdwAddr <= psMemRead->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemRead->memoryCall)
 						{
 							cpu.z80D = psMemRead->memoryCall(sdwAddr, psMemRead);
@@ -11934,7 +11934,7 @@
 				{
 					if ((sdwAddr >= psMemRead->lowAddr) && (sdwAddr <= psMemRead->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemRead->memoryCall)
 						{
 							cpu.z80E = psMemRead->memoryCall(sdwAddr, psMemRead);
@@ -12006,7 +12006,7 @@
 				{
 					if ((sdwAddr >= psMemRead->lowAddr) && (sdwAddr <= psMemRead->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemRead->memoryCall)
 						{
 							cpu.z80H = psMemRead->memoryCall(sdwAddr, psMemRead);
@@ -12079,7 +12079,7 @@
 				{
 					if ((sdwAddr >= psMemRead->lowAddr) && (sdwAddr <= psMemRead->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemRead->memoryCall)
 						{
 							cpu.z80L = psMemRead->memoryCall(sdwAddr, psMemRead);
@@ -12117,7 +12117,7 @@
 				{
 					if ((sdwAddr >= psMemWrite->lowAddr) && (sdwAddr <= psMemWrite->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemWrite->memoryCall)
 						{
 							psMemWrite->memoryCall(sdwAddr, cpu.z80B, psMemWrite);
@@ -12149,7 +12149,7 @@
 				{
 					if ((sdwAddr >= psMemWrite->lowAddr) && (sdwAddr <= psMemWrite->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemWrite->memoryCall)
 						{
 							psMemWrite->memoryCall(sdwAddr, cpu.z80C, psMemWrite);
@@ -12181,7 +12181,7 @@
 				{
 					if ((sdwAddr >= psMemWrite->lowAddr) && (sdwAddr <= psMemWrite->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemWrite->memoryCall)
 						{
 							psMemWrite->memoryCall(sdwAddr, cpu.z80D, psMemWrite);
@@ -12213,7 +12213,7 @@
 				{
 					if ((sdwAddr >= psMemWrite->lowAddr) && (sdwAddr <= psMemWrite->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemWrite->memoryCall)
 						{
 							psMemWrite->memoryCall(sdwAddr, cpu.z80E, psMemWrite);
@@ -12245,7 +12245,7 @@
 				{
 					if ((sdwAddr >= psMemWrite->lowAddr) && (sdwAddr <= psMemWrite->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemWrite->memoryCall)
 						{
 							psMemWrite->memoryCall(sdwAddr, cpu.z80H, psMemWrite);
@@ -12277,7 +12277,7 @@
 				{
 					if ((sdwAddr >= psMemWrite->lowAddr) && (sdwAddr <= psMemWrite->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemWrite->memoryCall)
 						{
 							psMemWrite->memoryCall(sdwAddr, cpu.z80L, psMemWrite);
@@ -12315,7 +12315,7 @@
 				{
 					if ((sdwAddr >= psMemWrite->lowAddr) && (sdwAddr <= psMemWrite->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemWrite->memoryCall)
 						{
 							psMemWrite->memoryCall(sdwAddr, cpu.z80A, psMemWrite);
@@ -12379,7 +12379,7 @@
 				{
 					if ((sdwAddr >= psMemRead->lowAddr) && (sdwAddr <= psMemRead->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemRead->memoryCall)
 						{
 							cpu.z80A = psMemRead->memoryCall(sdwAddr, psMemRead);
@@ -12456,7 +12456,7 @@
 				{
 					if ((dwAddr >= psMemRead->lowAddr) && (dwAddr <= psMemRead->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemRead->memoryCall)
 						{
 							bTemp = psMemRead->memoryCall(dwAddr, psMemRead);
@@ -12537,7 +12537,7 @@
 				{
 					if ((dwAddr >= psMemRead->lowAddr) && (dwAddr <= psMemRead->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemRead->memoryCall)
 						{
 							bTemp = psMemRead->memoryCall(dwAddr, psMemRead);
@@ -12619,7 +12619,7 @@
 				{
 					if ((dwAddr >= psMemRead->lowAddr) && (dwAddr <= psMemRead->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemRead->memoryCall)
 						{
 							bTemp = psMemRead->memoryCall(dwAddr, psMemRead);
@@ -12700,7 +12700,7 @@
 				{
 					if ((dwAddr >= psMemRead->lowAddr) && (dwAddr <= psMemRead->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemRead->memoryCall)
 						{
 							bTemp = psMemRead->memoryCall(dwAddr, psMemRead);
@@ -12782,7 +12782,7 @@
 				{
 					if ((dwAddr >= psMemRead->lowAddr) && (dwAddr <= psMemRead->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemRead->memoryCall)
 						{
 							bTemp = psMemRead->memoryCall(dwAddr, psMemRead);
@@ -12863,7 +12863,7 @@
 				{
 					if ((dwAddr >= psMemRead->lowAddr) && (dwAddr <= psMemRead->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemRead->memoryCall)
 						{
 							bTemp = psMemRead->memoryCall(dwAddr, psMemRead);
@@ -12944,7 +12944,7 @@
 				{
 					if ((dwAddr >= psMemRead->lowAddr) && (dwAddr <= psMemRead->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemRead->memoryCall)
 						{
 							bTemp = psMemRead->memoryCall(dwAddr, psMemRead);
@@ -13023,7 +13023,7 @@
 				{
 					if ((dwAddr >= psMemRead->lowAddr) && (dwAddr <= psMemRead->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemRead->memoryCall)
 						{
 							bTemp = psMemRead->memoryCall(dwAddr, psMemRead);
@@ -13226,7 +13226,7 @@
 				{
 					if ((cpu.z80sp >= psMemRead->lowAddr) && (cpu.z80sp <= psMemRead->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemRead->memoryCall)
 						{
 							cpu.z80IY = psMemRead->memoryCall(cpu.z80sp, psMemRead);
@@ -13266,7 +13266,7 @@
 				{
 					if ((cpu.z80sp >= psMemRead->lowAddr) && (cpu.z80sp <= psMemRead->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemRead->memoryCall)
 						{
 							dwAddr = psMemRead->memoryCall(cpu.z80sp, psMemRead);
@@ -13294,7 +13294,7 @@
 				{
 					if ((cpu.z80sp >= psMemWrite->lowAddr) && (cpu.z80sp <= psMemWrite->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemWrite->memoryCall)
 						{
 							psMemWrite->memoryCall(cpu.z80sp, (cpu.z80IY & 0xff), psMemWrite);
@@ -13335,7 +13335,7 @@
 				{
 					if ((cpu.z80sp >= psMemWrite->lowAddr) && (cpu.z80sp <= psMemWrite->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemWrite->memoryCall)
 						{
 							psMemWrite->memoryCall(cpu.z80sp, (cpu.z80IY & 0xff), psMemWrite);
@@ -13537,7 +13537,7 @@
 				{
 					if ((cpu.z80BC >= psMemWrite->lowAddr) && (cpu.z80BC <= psMemWrite->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemWrite->memoryCall)
 						{
 							psMemWrite->memoryCall(cpu.z80BC, cpu.z80A, psMemWrite);
@@ -13619,7 +13619,7 @@
 				{
 					if ((cpu.z80BC >= psMemRead->lowAddr) && (cpu.z80BC <= psMemRead->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemRead->memoryCall)
 						{
 							cpu.z80A = psMemRead->memoryCall(cpu.z80BC, psMemRead);
@@ -13683,7 +13683,7 @@
 				if (--cpu.z80B)
 				{
 					dwElapsedTicks += 5;	/* 5 More for jump taken */
-					cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+					cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 					sdwAddr = (sdwAddr + (INT32) cpu.z80pc) & 0xffff;
 					pbPC = cpu.z80Base + sdwAddr;	/* Normalize the address */
 				}
@@ -13704,7 +13704,7 @@
 				{
 					if ((cpu.z80DE >= psMemWrite->lowAddr) && (cpu.z80DE <= psMemWrite->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemWrite->memoryCall)
 						{
 							psMemWrite->memoryCall(cpu.z80DE, cpu.z80A, psMemWrite);
@@ -13765,7 +13765,7 @@
 			{
 				sdwCyclesRemaining -= 12;
 				sdwAddr = (INT8) *pbPC++;	/* Get LSB first */
-				cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+				cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 				sdwAddr = (sdwAddr + (INT32) cpu.z80pc) & 0xffff;
 				{
 				sdwCyclesRemaining -= 5;
@@ -13790,7 +13790,7 @@
 				{
 					if ((cpu.z80DE >= psMemRead->lowAddr) && (cpu.z80DE <= psMemRead->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemRead->memoryCall)
 						{
 							cpu.z80A = psMemRead->memoryCall(cpu.z80DE, psMemRead);
@@ -13851,7 +13851,7 @@
 			{
 				sdwCyclesRemaining -= 7;
 				sdwAddr = (INT8) *pbPC++;	/* Get LSB first */
-				cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+				cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 				sdwAddr = (sdwAddr + (INT32) cpu.z80pc) & 0xffff;
 				if (!(cpu.z80F & Z80_FLAG_ZERO))
 				{
@@ -13877,7 +13877,7 @@
 				{
 					if ((dwTemp >= psMemWrite->lowAddr) && (dwTemp <= psMemWrite->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemWrite->memoryCall)
 						{
 							psMemWrite->memoryCall(dwTemp, (cpu.z80HL & 0xff), psMemWrite);
@@ -13944,7 +13944,7 @@
 			{
 				sdwCyclesRemaining -= 7;
 				sdwAddr = (INT8) *pbPC++;	/* Get LSB first */
-				cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+				cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 				sdwAddr = (sdwAddr + (INT32) cpu.z80pc) & 0xffff;
 				if (cpu.z80F & Z80_FLAG_ZERO)
 				{
@@ -13972,7 +13972,7 @@
 				{
 					if ((dwAddr >= psMemRead->lowAddr) && (dwAddr <= psMemRead->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemRead->memoryCall)
 						{
 							cpu.z80HL = psMemRead->memoryCall(dwAddr, psMemRead);
@@ -14035,7 +14035,7 @@
 			{
 				sdwCyclesRemaining -= 7;
 				sdwAddr = (INT8) *pbPC++;	/* Get LSB first */
-				cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+				cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 				sdwAddr = (sdwAddr + (INT32) cpu.z80pc) & 0xffff;
 				if (!(cpu.z80F & Z80_FLAG_CARRY))
 				{
@@ -14061,7 +14061,7 @@
 				{
 					if ((dwTemp >= psMemWrite->lowAddr) && (dwTemp <= psMemWrite->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemWrite->memoryCall)
 						{
 							psMemWrite->memoryCall(dwTemp, cpu.z80A, psMemWrite);
@@ -14098,7 +14098,7 @@
 				{
 					if ((cpu.z80HL >= psMemRead->lowAddr) && (cpu.z80HL <= psMemRead->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemRead->memoryCall)
 						{
 							bTemp = psMemRead->memoryCall(cpu.z80HL, psMemRead);
@@ -14126,7 +14126,7 @@
 				{
 					if ((cpu.z80HL >= psMemWrite->lowAddr) && (cpu.z80HL <= psMemWrite->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemWrite->memoryCall)
 						{
 							psMemWrite->memoryCall(cpu.z80HL, bTemp, psMemWrite);
@@ -14156,7 +14156,7 @@
 				{
 					if ((cpu.z80HL >= psMemRead->lowAddr) && (cpu.z80HL <= psMemRead->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemRead->memoryCall)
 						{
 							bTemp = psMemRead->memoryCall(cpu.z80HL, psMemRead);
@@ -14184,7 +14184,7 @@
 				{
 					if ((cpu.z80HL >= psMemWrite->lowAddr) && (cpu.z80HL <= psMemWrite->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemWrite->memoryCall)
 						{
 							psMemWrite->memoryCall(cpu.z80HL, bTemp, psMemWrite);
@@ -14214,7 +14214,7 @@
 				{
 					if ((cpu.z80HL >= psMemWrite->lowAddr) && (cpu.z80HL <= psMemWrite->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemWrite->memoryCall)
 						{
 							psMemWrite->memoryCall(cpu.z80HL, *pbPC++, psMemWrite);
@@ -14247,7 +14247,7 @@
 			{
 				sdwCyclesRemaining -= 7;
 				sdwAddr = (INT8) *pbPC++;	/* Get LSB first */
-				cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+				cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 				sdwAddr = (sdwAddr + (INT32) cpu.z80pc) & 0xffff;
 				if (cpu.z80F & Z80_FLAG_CARRY)
 				{
@@ -14275,7 +14275,7 @@
 				{
 					if ((dwTemp >= psMemRead->lowAddr) && (dwTemp <= psMemRead->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemRead->memoryCall)
 						{
 							cpu.z80A = psMemRead->memoryCall(dwTemp, psMemRead);
@@ -14375,7 +14375,7 @@
 				{
 					if ((cpu.z80HL >= psMemRead->lowAddr) && (cpu.z80HL <= psMemRead->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemRead->memoryCall)
 						{
 							cpu.z80B = psMemRead->memoryCall(cpu.z80HL, psMemRead);
@@ -14446,7 +14446,7 @@
 				{
 					if ((cpu.z80HL >= psMemRead->lowAddr) && (cpu.z80HL <= psMemRead->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemRead->memoryCall)
 						{
 							cpu.z80C = psMemRead->memoryCall(cpu.z80HL, psMemRead);
@@ -14517,7 +14517,7 @@
 				{
 					if ((cpu.z80HL >= psMemRead->lowAddr) && (cpu.z80HL <= psMemRead->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemRead->memoryCall)
 						{
 							cpu.z80D = psMemRead->memoryCall(cpu.z80HL, psMemRead);
@@ -14588,7 +14588,7 @@
 				{
 					if ((cpu.z80HL >= psMemRead->lowAddr) && (cpu.z80HL <= psMemRead->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemRead->memoryCall)
 						{
 							cpu.z80E = psMemRead->memoryCall(cpu.z80HL, psMemRead);
@@ -14659,7 +14659,7 @@
 				{
 					if ((cpu.z80HL >= psMemRead->lowAddr) && (cpu.z80HL <= psMemRead->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemRead->memoryCall)
 						{
 							cpu.z80H = psMemRead->memoryCall(cpu.z80HL, psMemRead);
@@ -14730,7 +14730,7 @@
 				{
 					if ((cpu.z80HL >= psMemRead->lowAddr) && (cpu.z80HL <= psMemRead->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemRead->memoryCall)
 						{
 							cpu.z80L = psMemRead->memoryCall(cpu.z80HL, psMemRead);
@@ -14766,7 +14766,7 @@
 				{
 					if ((cpu.z80HL >= psMemWrite->lowAddr) && (cpu.z80HL <= psMemWrite->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemWrite->memoryCall)
 						{
 							psMemWrite->memoryCall(cpu.z80HL, cpu.z80B, psMemWrite);
@@ -14796,7 +14796,7 @@
 				{
 					if ((cpu.z80HL >= psMemWrite->lowAddr) && (cpu.z80HL <= psMemWrite->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemWrite->memoryCall)
 						{
 							psMemWrite->memoryCall(cpu.z80HL, cpu.z80C, psMemWrite);
@@ -14826,7 +14826,7 @@
 				{
 					if ((cpu.z80HL >= psMemWrite->lowAddr) && (cpu.z80HL <= psMemWrite->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemWrite->memoryCall)
 						{
 							psMemWrite->memoryCall(cpu.z80HL, cpu.z80D, psMemWrite);
@@ -14856,7 +14856,7 @@
 				{
 					if ((cpu.z80HL >= psMemWrite->lowAddr) && (cpu.z80HL <= psMemWrite->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemWrite->memoryCall)
 						{
 							psMemWrite->memoryCall(cpu.z80HL, cpu.z80E, psMemWrite);
@@ -14886,7 +14886,7 @@
 				{
 					if ((cpu.z80HL >= psMemWrite->lowAddr) && (cpu.z80HL <= psMemWrite->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemWrite->memoryCall)
 						{
 							psMemWrite->memoryCall(cpu.z80HL, cpu.z80H, psMemWrite);
@@ -14916,7 +14916,7 @@
 				{
 					if ((cpu.z80HL >= psMemWrite->lowAddr) && (cpu.z80HL <= psMemWrite->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemWrite->memoryCall)
 						{
 							psMemWrite->memoryCall(cpu.z80HL, cpu.z80L, psMemWrite);
@@ -14954,7 +14954,7 @@
 				{
 					if ((cpu.z80HL >= psMemWrite->lowAddr) && (cpu.z80HL <= psMemWrite->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemWrite->memoryCall)
 						{
 							psMemWrite->memoryCall(cpu.z80HL, cpu.z80A, psMemWrite);
@@ -15020,7 +15020,7 @@
 				{
 					if ((cpu.z80HL >= psMemRead->lowAddr) && (cpu.z80HL <= psMemRead->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemRead->memoryCall)
 						{
 							cpu.z80A = psMemRead->memoryCall(cpu.z80HL, psMemRead);
@@ -15115,7 +15115,7 @@
 				{
 					if ((cpu.z80HL >= psMemRead->lowAddr) && (cpu.z80HL <= psMemRead->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemRead->memoryCall)
 						{
 							bTemp = psMemRead->memoryCall(cpu.z80HL, psMemRead);
@@ -15220,7 +15220,7 @@
 				{
 					if ((cpu.z80HL >= psMemRead->lowAddr) && (cpu.z80HL <= psMemRead->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemRead->memoryCall)
 						{
 							bTemp = psMemRead->memoryCall(cpu.z80HL, psMemRead);
@@ -15325,7 +15325,7 @@
 				{
 					if ((cpu.z80HL >= psMemRead->lowAddr) && (cpu.z80HL <= psMemRead->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemRead->memoryCall)
 						{
 							bTemp = psMemRead->memoryCall(cpu.z80HL, psMemRead);
@@ -15430,7 +15430,7 @@
 				{
 					if ((cpu.z80HL >= psMemRead->lowAddr) && (cpu.z80HL <= psMemRead->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemRead->memoryCall)
 						{
 							bTemp = psMemRead->memoryCall(cpu.z80HL, psMemRead);
@@ -15529,7 +15529,7 @@
 				{
 					if ((cpu.z80HL >= psMemRead->lowAddr) && (cpu.z80HL <= psMemRead->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemRead->memoryCall)
 						{
 							bTemp = psMemRead->memoryCall(cpu.z80HL, psMemRead);
@@ -15626,7 +15626,7 @@
 				{
 					if ((cpu.z80HL >= psMemRead->lowAddr) && (cpu.z80HL <= psMemRead->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemRead->memoryCall)
 						{
 							bTemp = psMemRead->memoryCall(cpu.z80HL, psMemRead);
@@ -15723,7 +15723,7 @@
 				{
 					if ((cpu.z80HL >= psMemRead->lowAddr) && (cpu.z80HL <= psMemRead->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemRead->memoryCall)
 						{
 							bTemp = psMemRead->memoryCall(cpu.z80HL, psMemRead);
@@ -15814,7 +15814,7 @@
 				{
 					if ((cpu.z80HL >= psMemRead->lowAddr) && (cpu.z80HL <= psMemRead->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemRead->memoryCall)
 						{
 							bTemp = psMemRead->memoryCall(cpu.z80HL, psMemRead);
@@ -15869,7 +15869,7 @@
 				{
 					if ((cpu.z80sp >= psMemRead->lowAddr) && (cpu.z80sp <= psMemRead->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemRead->memoryCall)
 						{
 							cpu.z80BC = psMemRead->memoryCall(cpu.z80sp, psMemRead);
@@ -15922,7 +15922,7 @@
 				dwAddr |= ((UINT32) *pbPC++ << 8); /* Get MSB last */
 				if (!(cpu.z80F & Z80_FLAG_ZERO))
 				{
-					cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+					cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 					pbSP = (cpu.z80Base + cpu.z80sp - 1);	/* Normalize the stack pointer */
 					*pbSP-- = cpu.z80pc >> 8;	/* MSB */
 					*pbSP = (UINT8) cpu.z80pc;	/* LSB */
@@ -15941,7 +15941,7 @@
 				{
 					if ((cpu.z80sp >= psMemWrite->lowAddr) && (cpu.z80sp <= psMemWrite->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemWrite->memoryCall)
 						{
 							psMemWrite->memoryCall(cpu.z80sp, (cpu.z80BC & 0xff), psMemWrite);
@@ -15979,7 +15979,7 @@
 			case 0xc7:
 			{
 				sdwCyclesRemaining -= 11;
-				cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+				cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 				pbSP = (cpu.z80Base + cpu.z80sp - 1);	/* Normalize the stack pointer */
 				*pbSP-- = cpu.z80pc >> 8;	/* LSB */
 				*pbSP = (UINT8) cpu.z80pc;	/* MSB */
@@ -16034,7 +16034,7 @@
 				dwAddr |= ((UINT32) *pbPC++ << 8); /* Get MSB last */
 				if (cpu.z80F & Z80_FLAG_ZERO)
 				{
-					cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+					cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 					pbSP = (cpu.z80Base + cpu.z80sp - 1);	/* Normalize the stack pointer */
 					*pbSP-- = cpu.z80pc >> 8;	/* MSB */
 					*pbSP = (UINT8) cpu.z80pc;	/* LSB */
@@ -16048,7 +16048,7 @@
 				sdwCyclesRemaining -= 17;
 				dwAddr = *pbPC++;	/* Get LSB first */
 				dwAddr |= ((UINT32) *pbPC++ << 8); /* Get MSB last */
-				cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+				cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 				pbSP = (cpu.z80Base + cpu.z80sp - 1);	/* Normalize the stack pointer */
 				*pbSP-- = cpu.z80pc >> 8;	/* LSB */
 				*pbSP = (UINT8) cpu.z80pc;	/* MSB */
@@ -16069,7 +16069,7 @@
 			case 0xcf:
 			{
 				sdwCyclesRemaining -= 11;
-				cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+				cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 				pbSP = (cpu.z80Base + cpu.z80sp - 1);	/* Normalize the stack pointer */
 				*pbSP-- = cpu.z80pc >> 8;	/* LSB */
 				*pbSP = (UINT8) cpu.z80pc;	/* MSB */
@@ -16099,7 +16099,7 @@
 				{
 					if ((cpu.z80sp >= psMemRead->lowAddr) && (cpu.z80sp <= psMemRead->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemRead->memoryCall)
 						{
 							cpu.z80DE = psMemRead->memoryCall(cpu.z80sp, psMemRead);
@@ -16146,7 +16146,7 @@
 				{
 					if ((dwTemp >= psIoWrite->lowIoAddr) && (dwTemp <= psIoWrite->highIoAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						psIoWrite->IOCall(dwTemp, cpu.z80A, psIoWrite);
 						psIoWrite = NULL;
 						break;
@@ -16163,7 +16163,7 @@
 				dwAddr |= ((UINT32) *pbPC++ << 8); /* Get MSB last */
 				if (!(cpu.z80F & Z80_FLAG_CARRY))
 				{
-					cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+					cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 					pbSP = (cpu.z80Base + cpu.z80sp - 1);	/* Normalize the stack pointer */
 					*pbSP-- = cpu.z80pc >> 8;	/* MSB */
 					*pbSP = (UINT8) cpu.z80pc;	/* LSB */
@@ -16182,7 +16182,7 @@
 				{
 					if ((cpu.z80sp >= psMemWrite->lowAddr) && (cpu.z80sp <= psMemWrite->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemWrite->memoryCall)
 						{
 							psMemWrite->memoryCall(cpu.z80sp, (cpu.z80DE & 0xff), psMemWrite);
@@ -16220,7 +16220,7 @@
 			case 0xd7:
 			{
 				sdwCyclesRemaining -= 11;
-				cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+				cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 				pbSP = (cpu.z80Base + cpu.z80sp - 1);	/* Normalize the stack pointer */
 				*pbSP-- = cpu.z80pc >> 8;	/* LSB */
 				*pbSP = (UINT8) cpu.z80pc;	/* MSB */
@@ -16276,7 +16276,7 @@
 				{
 					if ((dwTemp >= psIoRead->lowIoAddr) && (dwTemp <= psIoRead->highIoAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						cpu.z80A = psIoRead->IOCall(dwTemp, psIoRead);
 						psIoRead = NULL;
 						break;
@@ -16298,7 +16298,7 @@
 				dwAddr |= ((UINT32) *pbPC++ << 8); /* Get MSB last */
 				if (cpu.z80F & Z80_FLAG_CARRY)
 				{
-					cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+					cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 					pbSP = (cpu.z80Base + cpu.z80sp - 1);	/* Normalize the stack pointer */
 					*pbSP-- = cpu.z80pc >> 8;	/* MSB */
 					*pbSP = (UINT8) cpu.z80pc;	/* LSB */
@@ -16325,7 +16325,7 @@
 			case 0xdf:
 			{
 				sdwCyclesRemaining -= 11;
-				cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+				cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 				pbSP = (cpu.z80Base + cpu.z80sp - 1);	/* Normalize the stack pointer */
 				*pbSP-- = cpu.z80pc >> 8;	/* LSB */
 				*pbSP = (UINT8) cpu.z80pc;	/* MSB */
@@ -16355,7 +16355,7 @@
 				{
 					if ((cpu.z80sp >= psMemRead->lowAddr) && (cpu.z80sp <= psMemRead->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemRead->memoryCall)
 						{
 							cpu.z80HL = psMemRead->memoryCall(cpu.z80sp, psMemRead);
@@ -16401,7 +16401,7 @@
 				{
 					if ((cpu.z80sp >= psMemRead->lowAddr) && (cpu.z80sp <= psMemRead->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemRead->memoryCall)
 						{
 							dwAddr = psMemRead->memoryCall(cpu.z80sp, psMemRead);
@@ -16429,7 +16429,7 @@
 				{
 					if ((cpu.z80sp >= psMemWrite->lowAddr) && (cpu.z80sp <= psMemWrite->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemWrite->memoryCall)
 						{
 							psMemWrite->memoryCall(cpu.z80sp, (cpu.z80HL & 0xff), psMemWrite);
@@ -16462,7 +16462,7 @@
 				dwAddr |= ((UINT32) *pbPC++ << 8); /* Get MSB last */
 				if (!(cpu.z80F & Z80_FLAG_OVERFLOW_PARITY))
 				{
-					cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+					cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 					pbSP = (cpu.z80Base + cpu.z80sp - 1);	/* Normalize the stack pointer */
 					*pbSP-- = cpu.z80pc >> 8;	/* MSB */
 					*pbSP = (UINT8) cpu.z80pc;	/* LSB */
@@ -16481,7 +16481,7 @@
 				{
 					if ((cpu.z80sp >= psMemWrite->lowAddr) && (cpu.z80sp <= psMemWrite->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemWrite->memoryCall)
 						{
 							psMemWrite->memoryCall(cpu.z80sp, (cpu.z80HL & 0xff), psMemWrite);
@@ -16518,7 +16518,7 @@
 			case 0xe7:
 			{
 				sdwCyclesRemaining -= 11;
-				cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+				cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 				pbSP = (cpu.z80Base + cpu.z80sp - 1);	/* Normalize the stack pointer */
 				*pbSP-- = cpu.z80pc >> 8;	/* LSB */
 				*pbSP = (UINT8) cpu.z80pc;	/* MSB */
@@ -16572,7 +16572,7 @@
 				dwAddr |= ((UINT32) *pbPC++ << 8); /* Get MSB last */
 				if (cpu.z80F & Z80_FLAG_OVERFLOW_PARITY)
 				{
-					cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+					cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 					pbSP = (cpu.z80Base + cpu.z80sp - 1);	/* Normalize the stack pointer */
 					*pbSP-- = cpu.z80pc >> 8;	/* MSB */
 					*pbSP = (UINT8) cpu.z80pc;	/* LSB */
@@ -16598,7 +16598,7 @@
 			case 0xef:
 			{
 				sdwCyclesRemaining -= 11;
-				cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+				cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 				pbSP = (cpu.z80Base + cpu.z80sp - 1);	/* Normalize the stack pointer */
 				*pbSP-- = cpu.z80pc >> 8;	/* LSB */
 				*pbSP = (UINT8) cpu.z80pc;	/* MSB */
@@ -16628,7 +16628,7 @@
 				{
 					if ((cpu.z80sp >= psMemRead->lowAddr) && (cpu.z80sp <= psMemRead->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemRead->memoryCall)
 						{
 							cpu.z80AF = psMemRead->memoryCall(cpu.z80sp, psMemRead);
@@ -16679,7 +16679,7 @@
 				dwAddr |= ((UINT32) *pbPC++ << 8); /* Get MSB last */
 				if (!(cpu.z80F & Z80_FLAG_SIGN))
 				{
-					cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+					cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 					pbSP = (cpu.z80Base + cpu.z80sp - 1);	/* Normalize the stack pointer */
 					*pbSP-- = cpu.z80pc >> 8;	/* MSB */
 					*pbSP = (UINT8) cpu.z80pc;	/* LSB */
@@ -16698,7 +16698,7 @@
 				{
 					if ((cpu.z80sp >= psMemWrite->lowAddr) && (cpu.z80sp <= psMemWrite->highAddr))
 					{
-						cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+						cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 						if (psMemWrite->memoryCall)
 						{
 							psMemWrite->memoryCall(cpu.z80sp, (cpu.z80AF & 0xff), psMemWrite);
@@ -16735,7 +16735,7 @@
 			case 0xf7:
 			{
 				sdwCyclesRemaining -= 11;
-				cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+				cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 				pbSP = (cpu.z80Base + cpu.z80sp - 1);	/* Normalize the stack pointer */
 				*pbSP-- = cpu.z80pc >> 8;	/* LSB */
 				*pbSP = (UINT8) cpu.z80pc;	/* MSB */
@@ -16787,7 +16787,7 @@
 				dwAddr |= ((UINT32) *pbPC++ << 8); /* Get MSB last */
 				if (cpu.z80F & Z80_FLAG_SIGN)
 				{
-					cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+					cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 					pbSP = (cpu.z80Base + cpu.z80sp - 1);	/* Normalize the stack pointer */
 					*pbSP-- = cpu.z80pc >> 8;	/* MSB */
 					*pbSP = (UINT8) cpu.z80pc;	/* LSB */
@@ -16812,7 +16812,7 @@
 			case 0xff:
 			{
 				sdwCyclesRemaining -= 11;
-				cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+				cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 				pbSP = (cpu.z80Base + cpu.z80sp - 1);	/* Normalize the stack pointer */
 				*pbSP-- = cpu.z80pc >> 8;	/* LSB */
 				*pbSP = (UINT8) cpu.z80pc;	/* MSB */
@@ -16825,7 +16825,7 @@
 
 	dwElapsedTicks += (dwOriginalCycles - sdwCyclesRemaining);
 
-	cpu.z80pc = (UINT32) pbPC - (UINT32) cpu.z80Base;
+	cpu.z80pc = (UINT32) (pbPC - cpu.z80Base);
 	return(dwReturnCode); /* Indicate success */
 }
 
