#! /bin/sh /usr/share/dpatch/dpatch-run
## gcc43-fixes.dpatch by Matthijs Mohlmann <matthijs@cacholong.nl>
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: No description.

@DPATCH@
diff -urNad trunk~/modules/ldapbackend/ldapbackend.cc trunk/modules/ldapbackend/ldapbackend.cc
--- trunk~/modules/ldapbackend/ldapbackend.cc	2007-04-15 12:05:52.000000000 +0200
+++ trunk/modules/ldapbackend/ldapbackend.cc	2008-03-01 16:28:01.061412475 +0100
@@ -194,8 +194,8 @@
 void LdapBackend::lookup_simple( const QType &qtype, const string &qname, DNSPacket *dnspkt, int zoneid )
 {
 	string filter, attr, qesc;
-	char** attributes = ldap_attrany + 1;   // skip associatedDomain
-	char* attronly[] = { NULL, "dNSTTL", "modifyTimestamp", NULL };
+	const char** attributes = ldap_attrany + 1;   // skip associatedDomain
+	const char* attronly[] = { NULL, "dNSTTL", "modifyTimestamp", NULL };
 
 
 	qesc = toLower( m_pldap->escape( qname ) );
@@ -205,14 +205,14 @@
 	{
 		attr = qtype.getName() + "Record";
 		filter = "&(" + filter + ")(" + attr + "=*)";
-		attronly[0] = (char*) attr.c_str();
+		attronly[0] = attr.c_str();
 		attributes = attronly;
 	}
 
 	filter = strbind( ":target:", filter, getArg( "filter-lookup" ) );
 
 	DLOG( L << Logger::Debug << m_myname << " Search = basedn: " << getArg( "basedn" ) << ", filter: " << filter << ", qtype: " << qtype.getName() << endl );
-	m_msgid = m_pldap->search( getArg( "basedn" ), LDAP_SCOPE_SUBTREE, filter, (const char**) attributes );
+	m_msgid = m_pldap->search( getArg( "basedn" ), LDAP_SCOPE_SUBTREE, filter, attributes );
 }
 
 
@@ -222,8 +222,8 @@
 	int len;
 	vector<string> parts;
 	string filter, attr, qesc;
-	char** attributes = ldap_attrany + 1;   // skip associatedDomain
-	char* attronly[] = { NULL, "dNSTTL", "modifyTimestamp", NULL };
+	const char** attributes = ldap_attrany + 1;   // skip associatedDomain
+	const char* attronly[] = { NULL, "dNSTTL", "modifyTimestamp", NULL };
 
 
 	qesc = toLower( m_pldap->escape( qname ) );
@@ -249,7 +249,7 @@
 		{
 			attr = qtype.getName() + "Record";
 			filter = "&(" + filter + ")(" + attr + "=*)";
-			attronly[0] = (char*) attr.c_str();
+			attronly[0] = attr.c_str();
 			attributes = attronly;
 		}
 	}
@@ -257,7 +257,7 @@
 	filter = strbind( ":target:", filter, getArg( "filter-lookup" ) );
 
 	DLOG( L << Logger::Debug << m_myname << " Search = basedn: " << getArg( "basedn" ) << ", filter: " << filter << ", qtype: " << qtype.getName() << endl );
-	m_msgid = m_pldap->search( getArg( "basedn" ), LDAP_SCOPE_SUBTREE, filter, (const char**) attributes );
+	m_msgid = m_pldap->search( getArg( "basedn" ), LDAP_SCOPE_SUBTREE, filter, attributes );
 }
 
 
@@ -265,8 +265,8 @@
 void LdapBackend::lookup_tree( const QType &qtype, const string &qname, DNSPacket *dnspkt, int zoneid )
 {
 	string filter, attr, qesc, dn;
-	char** attributes = ldap_attrany + 1;   // skip associatedDomain
-	char* attronly[] = { NULL, "dNSTTL", "modifyTimestamp", NULL };
+	const char** attributes = ldap_attrany + 1;   // skip associatedDomain
+	const char* attronly[] = { NULL, "dNSTTL", "modifyTimestamp", NULL };
 	vector<string>::reverse_iterator i;
 	vector<string> parts;
 
@@ -278,7 +278,7 @@
 	{
 		attr = qtype.getName() + "Record";
 		filter = "&(" + filter + ")(" + attr + "=*)";
-		attronly[0] = (char*) attr.c_str();
+		attronly[0] = attr.c_str();
 		attributes = attronly;
 	}
 
@@ -291,7 +291,7 @@
 	}
 
 	DLOG( L << Logger::Debug << m_myname << " Search = basedn: " << dn + getArg( "basedn" ) << ", filter: " << filter << ", qtype: " << qtype.getName() << endl );
-	m_msgid = m_pldap->search( dn + getArg( "basedn" ), LDAP_SCOPE_BASE, filter, (const char**) attributes );
+	m_msgid = m_pldap->search( dn + getArg( "basedn" ), LDAP_SCOPE_BASE, filter, attributes );
 }
 
 
@@ -487,12 +487,12 @@
 {
 	string filter;
 	SOAData sd;
-	char* attronly[] = { "sOARecord", NULL };
+	const char* attronly[] = { "sOARecord", NULL };
 
 
 	// search for SOARecord of domain
 	filter = "(&(associatedDomain=" + toLower( m_pldap->escape( domain ) ) + ")(SOARecord=*))";
-	m_msgid = m_pldap->search( getArg( "basedn" ), LDAP_SCOPE_SUBTREE, filter, (const char**) attronly );
+	m_msgid = m_pldap->search( getArg( "basedn" ), LDAP_SCOPE_SUBTREE, filter, attronly );
 	m_pldap->getSearchEntry( m_msgid, m_result );
 
 	if( m_result.count( "sOARecord" ) && !m_result["sOARecord"].empty() )
diff -urNad trunk~/modules/ldapbackend/ldapbackend.hh trunk/modules/ldapbackend/ldapbackend.hh
--- trunk~/modules/ldapbackend/ldapbackend.hh	2007-04-15 12:05:49.000000000 +0200
+++ trunk/modules/ldapbackend/ldapbackend.hh	2008-03-01 16:28:01.061412475 +0100
@@ -54,7 +54,7 @@
 
 
 
-static char* ldap_attrany[] = {
+static const char* ldap_attrany[] = {
 	"associatedDomain",
 	"dNSTTL",
 	"aRecord",
diff -urNad trunk~/modules/ldapbackend/powerldap.cc trunk/modules/ldapbackend/powerldap.cc
--- trunk~/modules/ldapbackend/powerldap.cc	2008-03-01 16:27:59.909588193 +0100
+++ trunk/modules/ldapbackend/powerldap.cc	2008-03-01 16:29:30.115826665 +0100
@@ -1,6 +1,6 @@
 #include "powerldap.hh"
 #include <pdns/misc.hh>
-
+#include <sys/time.h>
 
 PowerLDAP::PowerLDAP( const string& hosts, uint16_t port, bool tls )
 {
diff -urNad trunk~/pdns/distributor.hh trunk/pdns/distributor.hh
--- trunk~/pdns/distributor.hh	2007-04-15 12:04:01.000000000 +0200
+++ trunk/pdns/distributor.hh	2008-03-01 16:33:09.179981540 +0100
@@ -82,7 +82,6 @@
   struct QuestionData
   {
     Question *Q;
-    time_t created;
     void (*callback)(const AnswerData &);
     int id;
   };
diff -urNad trunk~/pdns/dns.hh trunk/pdns/dns.hh
--- trunk~/pdns/dns.hh	2007-04-15 12:04:13.000000000 +0200
+++ trunk/pdns/dns.hh	2008-03-01 16:30:34.170139444 +0100
@@ -115,7 +115,7 @@
 #pragma pack (pop)
 #endif 
 
-typedef enum  {
+enum  {
         ns_t_invalid = 0,       /* Cookie. */
         ns_t_a = 1,             /* Host address. */
         ns_t_ns = 2,            /* Authoritative server. */
diff -urNad trunk~/pdns/dynmessenger.cc trunk/pdns/dynmessenger.cc
--- trunk~/pdns/dynmessenger.cc	2007-04-15 12:02:08.000000000 +0200
+++ trunk/pdns/dynmessenger.cc	2008-03-01 16:31:21.029415840 +0100
@@ -18,6 +18,7 @@
 */
 #include "dynmessenger.hh"
 #include <cstdio>
+#include <cstdlib>
 #include <cstring>
 #include <cerrno>
 #include <iostream>
diff -urNad trunk~/pdns/misc.hh trunk/pdns/misc.hh
--- trunk~/pdns/misc.hh	2007-04-15 12:02:45.000000000 +0200
+++ trunk/pdns/misc.hh	2008-03-01 16:32:06.277132468 +0100
@@ -19,6 +19,7 @@
 #ifndef MISC_HH
 #define MISC_HH
 #include <stdint.h>
+#include <cstring>
 
 #if 0
 #define RDTSC(qp) \
@@ -234,7 +235,7 @@
   return c==' ' || c=='\t' || c=='\r' || c=='\n';
 }
 
-inline const char dns_tolower(char c)
+inline char dns_tolower(char c)
 {
   if(c>='A' && c<='Z')
     c+='a'-'A';
diff -urNad trunk~/pdns/pdns_recursor.cc trunk/pdns/pdns_recursor.cc
--- trunk~/pdns/pdns_recursor.cc	2007-04-22 10:52:38.000000000 +0200
+++ trunk/pdns/pdns_recursor.cc	2008-03-01 16:32:56.211476978 +0100
@@ -412,7 +412,7 @@
   set<DNSResourceRecord>nsset;
 
   if(::arg()["hint-file"].empty()) {
-    static char*ips[]={"198.41.0.4", "192.228.79.201", "192.33.4.12", "128.8.10.90", "192.203.230.10", "192.5.5.241", "192.112.36.4", "128.63.2.53", 
+    static const char*ips[]={"198.41.0.4", "192.228.79.201", "192.33.4.12", "128.8.10.90", "192.203.230.10", "192.5.5.241", "192.112.36.4", "128.63.2.53", 
 		       "192.36.148.17","192.58.128.30", "193.0.14.129", "198.32.64.12", "202.12.27.33"};
     DNSResourceRecord arr, nsrr;
     arr.qtype=QType::A;
