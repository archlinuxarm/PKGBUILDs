diff --git a/extras/artist_to_albumartist.cpp b/extras/artist_to_albumartist.cpp
index c3ddfee3..bf5aac29 100644
--- a/extras/artist_to_albumartist.cpp
+++ b/extras/artist_to_albumartist.cpp
@@ -34,7 +34,7 @@ enum class CopyResult { Success, NoArtist, AlbumArtistAlreadyInPlace };
 bool is_framelist_empty(const TagLib::ID3v2::FrameList &list)
 {
 	for (auto it = list.begin(); it != list.end(); ++it)
-		if ((*it)->toString() != TagLib::String::null)
+		if ((*it)->toString() != TagLib::String())
 			return false;
 	return true;
 }
diff --git a/src/tags.cpp b/src/tags.cpp
index 6cd6a8c2..09731801 100644
--- a/src/tags.cpp
+++ b/src/tags.cpp
@@ -123,12 +123,12 @@ void writeCommonTags(const MPD::MutableSong &s, TagLib::Tag *tag)
 	tag->setArtist(ToWString(s.getArtist()));
 	tag->setAlbum(ToWString(s.getAlbum()));
 	try {
-		tag->setYear(boost::lexical_cast<TagLib::uint>(s.getDate()));
+		tag->setYear(boost::lexical_cast<uint>(s.getDate()));
 	} catch (boost::bad_lexical_cast &) {
 		std::cerr << "writeCommonTags: couldn't write 'year' tag to '" << s.getURI() << "' as it's not a positive integer\n";
 	}
 	try {
-		tag->setTrack(boost::lexical_cast<TagLib::uint>(s.getTrack()));
+		tag->setTrack(boost::lexical_cast<uint>(s.getTrack()));
 	} catch (boost::bad_lexical_cast &) {
 		std::cerr << "writeCommonTags: couldn't write 'track' tag to '" << s.getURI() << "' as it's not a positive integer\n";
 	}
@@ -306,7 +306,7 @@ bool write(MPD::MutableSong &s)
 	{
 		writeID3v2Tags(s, mpeg_file->ID3v2Tag(true));
 		// write id3v2.4 tags only
-		if (!mpeg_file->save(TagLib::MPEG::File::ID3v2, true, 4, false))
+		if (!mpeg_file->save(TagLib::MPEG::File::ID3v2, TagLib::File::StripTags::StripNone, TagLib::ID3v2::Version::v4, TagLib::File::DuplicateTags::DoNotDuplicate))
 			return false;
 		// do not call generic save() as it will duplicate tags
 		saved = true;
