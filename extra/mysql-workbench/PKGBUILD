# Maintainer: Christian Hesse <mail@eworm.de>
# Contributor: Alexandre Boily <alexandreboily@gmail.com>
# Contributor: Illarion Kovalchuk <illarion.kovalchuk@gmail.com>
# Contributor: totoloco <totoloco at gmail _dot_com>
# Contributor: Ionut Biru <ibiru@archlinux.org>

# ALARM: Kevin Mihelich <kevin@archlinuxarm.org>
#  - add -fsigned-char to CXXFLAGS

highmem=1
buildarch=8

pkgname=mysql-workbench
pkgver=8.0.38
pkgrel=5
_mysql_version=8.4.2
_connector_version=8.4.0
_gdal_version=3.9.2
_boost_version=1.77.0
# bump the antlr4 version as required, this is to match the jar file name
_antlr4_version=4.13.2
pkgdesc='A cross-platform, visual database design tool developed by MySQL'
arch=('x86_64')
url='https://www.mysql.com/products/workbench/'
license=('GPL2')
depends=('antlr4-runtime' 'libantlr4-runtime.so'
         'atkmm' 'libatkmm-1.6.so'
         'at-spi2-core' 'libatk-1.0.so'
         'cairo' 'libcairo.so'
         'curl' 'libcurl.so'
         'desktop-file-utils'
         'expat' 'libexpat.so'
         'freetype2'
         'gcc-libs'
         'gdk-pixbuf2' 'libgdk_pixbuf-2.0.so'
         'giflib' 'libgif.so'
         'glib2' 'libgio-2.0.so' 'libglib-2.0.so' 'libgmodule-2.0.so' 'libgobject-2.0.so'
         'glibc'
         'gtk3' 'libgdk-3.so' 'libgtk-3.so'
         'gtkmm3' 'libgtkmm-3.0.so' #'libgdkmm-3.0.so'
         'hicolor-icon-theme'
         'json-c' 'libjson-c.so'
         'libaio'
         'libarchive' 'libarchive.so'
         'libgl' 'libGLX.so' 'libOpenGL.so'
         'libjpeg' 'libjpeg.so'
         'libpng' 'libpng16.so'
         'libsecret' 'libsecret-1.so'
         'libssh' 'libssh.so'
         'libtiff' 'libtiff.so'
         'libx11'
         'libxml2' 'libxml2.so'
         'libzip' 'libzip.so'
         'lz4' 'liblz4.so'
         'ncurses' 'libncursesw.so'
         'openssl' 'libcrypto.so' 'libssl.so'
         'pango' 'libpango-1.0.so' 'libpangocairo-1.0.so'
         'pcre2' 'libpcre2-8.so'
         'proj' #'libproj.so'
         'python'
         'rapidjson'
         'sqlite' 'libsqlite3.so'
         'unixodbc' #'libodbc.so'
         'vsqlite++' #'libvsqlitepp.so'
         'xz' 'liblzma.so'
         'zlib' 'libz.so'
         'zstd' 'libzstd.so')
makedepends=('cmake' 'boost' 'mesa' 'swig' 'java-runtime' 'imagemagick'
             "antlr4=${_antlr4_version}" "antlr4-runtime=${_antlr4_version}")
validpgpkeys=('BCA43417C3B485DD128EC6D4B7B3B788A8D3785C') # MySQL Release Engineering <mysql-build@oss.oracle.com>
source=("https://cdn.mysql.com/Downloads/MySQLGUITools/mysql-workbench-community-${pkgver}-src.tar.gz"{,.asc}
	"https://cdn.mysql.com/Downloads/MySQL-${_mysql_version%.*}/mysql-${_mysql_version}.tar.gz"{,.asc}
	"https://cdn.mysql.com/Downloads/Connector-C++/mysql-connector-c++-${_connector_version}-src.tar.gz"{,.asc}
	"https://download.osgeo.org/gdal/${_gdal_version}/gdal-${_gdal_version}.tar.xz"
	"https://downloads.sourceforge.net/project/boost/boost/${_boost_version}/boost_${_boost_version//./_}.tar.bz2"
	'0001-mysql-workbench-no-check-for-updates.patch'
	'0002-disable-unsupported-operating-system-warning.patch'
	'arch_linux_profile.xml')
sha256sums=('5b646c03684845468d44ad10e6937560e0db122c3a1c4ddc7de8ac3dd51c60f6'
            'SKIP'
            '5657a78dc86bf0bf2227e0b05f8de5a2c447a816a112ffa26fa70083bcbe9814'
            'SKIP'
            '540b3d3b4d20ecf9f900bf55bba870718e50672f54fa2cdb124adf385796ce8b'
            'SKIP'
            'bfbcc9f087f012c36151c20c79f8eac9529e1e5298fbded79cd5a1365f0b113a'
            'fc9f85fc030e233142908241af7a846e60630aa7388de9a5fafb1f3a26840854'
            'cdf687f23bc6e8d52dbee9fa02b23d755e80f88476f0fc2e7c4c71cdfed3792f'
            '2d0f6dcf38f22e49ef7ab9de0230484f1ffac41b7ac40feaf5ef4538ae2f7a18'
            'd816164098c90c432b4fe590708c14f95ab137abfe16ad1b7d498b2e83c0e265')

prepare() {
	cd "${srcdir}/mysql-workbench-community-${pkgver}-src/"

	# Disable 'Help' -> 'Check for Updates'
	# Updates are provided via Arch Linux packages
	patch -Np1 < "${srcdir}"/0001-mysql-workbench-no-check-for-updates.patch

	# disable unsupported operating system warning
	patch -Np1 < "${srcdir}"/0002-disable-unsupported-operating-system-warning.patch

	# remove '-Werror'
	sed -i '/^\s*set/s| -Werror||' CMakeLists.txt

	# work around crashes on query:
	# disable LTO (link time optimization) for libsqlparser.so
	# TODO: drop when fixed!
	sed -i '/target_compile_options/s|PRIVATE|PRIVATE -fno-lto|' library/sql.parser/source/CMakeLists.txt

	# be happy with more recent antlr
	sed -i "/set(ANTLR_JAR_FILENAME/s/4.11.1/${_antlr4_version}/" CMakeLists.txt
}

build() {
	# Build mysql
	mkdir "${srcdir}/mysql-${_mysql_version}-build"
	cd "${srcdir}/mysql-${_mysql_version}-build"
	echo "Configure mysql..."
	cmake "${srcdir}/mysql-${_mysql_version}" \
		-DWITHOUT_SERVER=ON \
		-DBUILD_CONFIG=mysql_release \
		-DCMAKE_INSTALL_PREFIX=/usr \
		-DSYSCONFDIR=/etc/mysql \
		-DMYSQL_DATADIR=/var/lib/mysql \
		-DWITH_BOOST="${srcdir}/boost_${_boost_version//./_}"
	echo "Build mysql..."
	make
	echo "Install mysql..."
	make DESTDIR="${srcdir}/install-bundle/" install

	# Build mysql-connector-c++
	mkdir "${srcdir}/mysql-connector-c++-${_connector_version}-src-build"
	cd "${srcdir}/mysql-connector-c++-${_connector_version}-src-build"
	echo "Configure mysql-connector-c++..."
	cmake "${srcdir}/mysql-connector-c++-${_connector_version}-src" \
		-Wno-dev \
		-DCMAKE_INSTALL_PREFIX=/usr \
		-DCMAKE_BUILD_TYPE=Release \
		-DINSTALL_LIB_DIR=lib \
		-DMYSQL_DIR="${srcdir}/install-bundle/" \
		-DMYSQL_CONFIG_EXECUTABLE="${srcdir}/install-bundle/usr/bin/mysql_config" \
		-DWITH_JDBC=ON
	echo "Build mysql-connector-c++..."
	make
	echo "Install mysql-connector-c++..."
	make DESTDIR="${srcdir}/install-bundle/" install

	# Build gdal
	cd "${srcdir}/"
	echo "Configure gdal..."
	cmake -B build-gdal -S "${srcdir}/gdal-${_gdal_version}" \
		-DCMAKE_INSTALL_PREFIX='/usr' \
		-DGDAL_USE_JASPER='OFF' \
		-DGDAL_USE_MYSQL='OFF' \
		-DBUILD_CSHARP_BINDINGS='FALSE' \
		-DBUILD_JAVA_BINDINGS='FALSE' \
		-DBUILD_PYTHON_BINDINGS='FALSE'
	echo "Build gdal..."
	make LD_LIBRARY_PATH="${srcdir}/install-bundle/usr/lib/" -C build-gdal
	echo "Install gdal..."
	make LD_LIBRARY_PATH="${srcdir}/install-bundle/usr/lib/" DESTDIR="${srcdir}/install-bundle/" -C build-gdal install
	ln -s '.' "${srcdir}/install-bundle/usr/include/gdal"

	# Build MySQL Workbench itself with bundled libs
	mkdir "${srcdir}/mysql-workbench-community-${pkgver}-src-build"
	cd "${srcdir}/mysql-workbench-community-${pkgver}-src-build"
	echo "Configure mysql-workbench..."
	cmake "${srcdir}/mysql-workbench-community-${pkgver}-src" \
		-Wno-dev \
		-DCMAKE_INSTALL_PREFIX:PATH=/usr \
		-DCMAKE_CXX_FLAGS="$CXXFLAGS -fsigned-char" \
		-DCMAKE_BUILD_TYPE=Release \
		-DMySQL_CONFIG_PATH="${srcdir}/install-bundle/usr/bin/mysql_config" \
		-DMySQLCppConn_LIBRARY="${srcdir}/install-bundle/usr/lib/libmysqlcppconn.so" \
		-DMySQLCppConn_INCLUDE_DIR="${srcdir}/install-bundle/usr/include/jdbc" \
		-DGDAL_INCLUDE_DIR="${srcdir}/install-bundle/usr/include" \
		-DGDAL_LIBRARY="${srcdir}/install-bundle/usr/lib/libgdal.so" \
		-DUNIXODBC_CONFIG_PATH='/usr/bin/odbc_config' \
		-DUSE_BUNDLED_MYSQLDUMP=1 \
		-DWITH_ANTLR_JAR="/usr/share/java/antlr-${_antlr4_version}-complete.jar"
	echo "Build mysql-workbench..."
	make
}

package() {
	# install bundled libraries
	for LIBRARY in $(find "${srcdir}/install-bundle/usr/lib/" -type f -regex '.*/lib\(gdal\|mysql\(client\|cppconn\)\)\.so\..*'); do
		BASENAME="$(basename "${LIBRARY}")"
		SONAME="$(readelf -d "${LIBRARY}" | grep -Po '(?<=(Library soname: \[)).*(?=\])')"
		install -D -m0755 "${LIBRARY}" "${pkgdir}"/usr/lib/mysql-workbench/"${BASENAME}"
		ln -s "${BASENAME}" "${pkgdir}"/usr/lib/mysql-workbench/"${SONAME}"
	done

	# install bundled mysql and mysqldump
	install -m0755 "${srcdir}/install-bundle/usr/bin/mysql"{,dump} "${pkgdir}"/usr/lib/mysql-workbench/

	# install MySQL Workbench itself
	cd "${srcdir}/mysql-workbench-community-${pkgver}-src-build"

	make DESTDIR="${pkgdir}" install

	# icons
	for SIZE in 16 24 32 48 64 96 128; do
		# set modify/create for reproducible builds
		magick \
			"${srcdir}/mysql-workbench-community-${pkgver}-src/images/icons/MySQLWorkbench-128.png" \
			-scale ${SIZE} +set date:create +set date:modify \
			"${srcdir}/mysql-workbench.png"
		install -D -m0644 "${srcdir}/mysql-workbench.png" "${pkgdir}/usr/share/icons/hicolor/${SIZE}x${SIZE}/apps/mysql-workbench.png"
	done

	install -D -m 0644 "${srcdir}"/arch_linux_profile.xml \
		"${pkgdir}"/usr/share/mysql-workbench/mysql.profiles/Arch_Linux_\(MariaDB\).xml
}
