# $Id$
# Maintainer: Anatol Pomozov <anatol dot pomozov at gmail>
# Contributor: St√©phane Gaudreault <stephane@archlinux.org>

# ALARM: Kevin Mihelich <kevin@archlinuxarm.org
#  - only use valgrind with v7/v8

pkgname=openmpi
pkgver=2.1.1
pkgrel=1
pkgdesc='High performance message passing library (MPI)'
arch=(i686 x86_64)
url='http://www.open-mpi.org'
license=(custom)
depends=(libltdl hwloc)
makedepends=(inetutils gcc-fortran)
makedepends_armv7h=(valgrind)
makedepends_aarch64=(valgrind)
optdepends=('gcc-fortran: fortran support')
options=(staticlibs)
source=(http://www.open-mpi.org/software/ompi/v${pkgver%.*}/downloads/${pkgname}-${pkgver}.tar.bz2)
sha1sums=('3aaee35c17b6ef02f4cee274f2670d5b7b2c968a')

build() {
   cd $pkgname-$pkgver

   # enable valgrind and memchecker for v7
   [[ $CARCH == "armv7h" || $CARCH == "aarch64" ]] && CONFIG='--with-valgrind --enable-memchecker'

   ./configure --prefix=/usr \
               --sysconfdir=/etc/${pkgname} \
               --enable-mpi-fortran=all \
               --libdir=/usr/lib/${pkgname} \
               --with-threads=posix \
               --enable-mpi-thread-multiple \
               --enable-smp-locks \
               --enable-builtin-atomics \
               --enable-mpi-cxx \
               --enable-pretty-print-stacktrace \
               --without-slurm \
               --with-hwloc=/usr \
               --with-libltdl=/usr  \
               FC=/usr/bin/gfortran \
               LDFLAGS="$LDFLAGS -Wl,-z,noexecstack" \
               $CONFIG

   make
}

check() {
   cd $pkgname-$pkgver

   make check
}

package() {
   cd $pkgname-$pkgver
   make DESTDIR="$pkgdir" install

   # FS#28583
   install -d -m 755 "$pkgdir"/usr/lib/pkgconfig
   for i in ompi-c.pc ompi-cxx.pc ompi-f77.pc ompi-f90.pc ompi.pc; do
      ln -sf /usr/lib/openmpi/pkgconfig/$i "$pkgdir"/usr/lib/pkgconfig/
   done

   install -d -m 755 "$pkgdir"/etc/ld.so.conf.d
   echo "/usr/lib/$pkgname" > "$pkgdir"/etc/ld.so.conf.d/$pkgname.conf

   install -Dm644 LICENSE "$pkgdir"/usr/share/licenses/$pkgname/LICENSE
}
