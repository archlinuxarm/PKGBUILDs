diff -up fltk-1.1.9/src/filename_list.cxx.gcc44 fltk-1.1.9/src/filename_list.cxx
--- fltk-1.1.9/src/filename_list.cxx.gcc44	2006-06-09 11:16:34.000000000 -0500
+++ fltk-1.1.9/src/filename_list.cxx	2009-05-13 09:46:42.372917879 -0500
@@ -67,7 +67,7 @@ int fl_filename_list(const char *d, dire
   // The vast majority of UNIX systems want the sort function to have this
   // prototype, most likely so that it can be passed to qsort without any
   // changes:
-  int n = scandir(d, list, 0, (int(*)(const void*,const void*))sort);
+  int n = scandir(d, list, 0, (int(*)(const dirent **,const dirent **))sort);
 #else
   // This version is when we define our own scandir (WIN32 and perhaps
   // some Unix systems) and apparently on IRIX:
diff -ru fltk-1.1.9.orig/src/fl_set_fonts_xft.cxx fltk-1.1.9/src/fl_set_fonts_xft.cxx
--- fltk-1.1.9.orig/src/fl_set_fonts_xft.cxx	2009-03-04 10:58:49.000000000 +0000
+++ fltk-1.1.9/src/fl_set_fonts_xft.cxx	2009-03-04 11:01:25.000000000 +0000
@@ -253,13 +253,13 @@
       // So the bit we want is up to the first comma - BUT some strings have
       // more than one name, separated by, guess what?, a comma...
       stop = start = first = 0;
-      stop = strchr((const char *)font, ',');
-      start = strchr((const char *)font, ':');
+      stop = strchr((char *)font, ',');
+      start = strchr((char *)font, ':');
       if ((stop) && (start) && (stop < start))
       {
         first = stop + 1; // discard first version of name
         // find first comma *after* the end of the name
-        stop = strchr((const char *)start, ',');
+        stop = strchr((char *)start, ',');
       }
       else
       {
