# Maintainer:  Bernardo Barros <bernardobarros@gmail.com>
# Contributor: Björn Lindig <bjoern.lindig@googlemail.com>

pkgname=supercollider-3.6-git
_name="supercollider"
pkgver=20131110
pkgrel=1
pkgdesc="An environment and programming language for real time audio synthesis and algorithmic composition (3.6 branch)."
url="http://supercollider.sourceforge.net/"
arch=('i686' 'x86_64' 'armv6h')
license=('GPL3')
depends=('jack' 'fftw' 'cwiid' 'qtwebkit')
makedepends=('cmake' 'ruby' 'vim' 'emacs')
optdepends=('emacs: emacs interface'
            'gedit: gedit interface'
            'vim: vim interface'
            'ruby: vim support')
conflicts=('supercollider')
provides=('supercollider=3.6')
install="$pkgname.install"
source=("0001-cmake-link-pthreads-libraries.patch")
md5sums=('dd6c3bd6c67cf14082124fce8a7bc70c')
noautobuild=0
buildarch=00010000
highmem=1
_gitroot="git://github.com/supercollider/supercollider.git"

build() {
  cd $srcdir
  msg "Connecting to GIT server...."
  if [ -d $_name ] ; then
    (cd $_name && git pull origin && git submodule update)
    msg "The local files are updated."
  else
    git clone $_gitroot
  fi
  rm -rf $_name-build
  cd $_name
  git checkout -t origin/3.6
  git submodule sync
  git submodule init 
  git submodule update
  git apply --stat ../0001-cmake-link-pthreads-libraries.patch
  cd ..
  cp -r $_name $_name-build
  cd $_name-build/
  msg "GIT checkout done or server timeout"
  msg "Starting make..."
  [ -d bld] || mkdir bld && cd bld
  export LDFLAGS="${LDFLAGS//-Wl,--as-needed}"
  _carch='uname -m'
  if [[ "$_carch" == *armv6* ]]; then
    export CC="gcc"
    export CXX="g++"
    cmake .. -L -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_BUILD_TYPE=Release \
      -DBUILD_TESTING=OFF -DSSE=OFF -DSSE2=OFF -DSUPERNOVA=OFF -DNOVA_SIMD=ON \
      -DNATIVE=OFF -DSC_QT=OFF -DSC_WII=OFF -DSC_ED=OFF -DSC_IDE=OFF -DSC_EL=ON \
      -DCMAKE_C_FLAGS="-march=armv6 -mfpu=vfp -mfloat-abi=hard" \
      -DCMAKE_CXX_FLAGS="-march=armv6 -mfpu=vfp -mfloat-abi=hard" 
    make -j4
  else
    cmake .. -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_BUILD_TYPE=Release \
      -DSC_WII=1 -DSUPERNOVA=1 -DSC_QT=1 -DNATIVE=1 
   # -DSSE=1 -DSSE41=1 -DSSE42=1
    make
  fi 
}

package() {
  cd "$srcdir/$_name-build/bld"
  make DESTDIR="$pkgdir/" install
}

