# Maintainer: Serge Zirukin <ftrvxmtrx gmail>
# Contributor: Daniel YC Lin <dlin.tw gmail>
# Contributor: Alexander RÃ¸dseth <rodseth gmail>
# Contributor: Christian Himpel <chressie gmail>
# Contributor: Andres Perera <andres87p gmail>
# Contributor: Ashok Gautham <ScriptDevil gmail>
# Contributor: Matthew Bauer <mjbauer95 gmail>
# Contributor: Vesa Kaihlavirta <vegai iki fi>

# ALARM
#    - Added by Mauro de Carvalho <mauro.dec gmail>
#    - Based on go-hg from AUR
#    - Added the armv6 arch
#    - Added a condition to set LC_ALL correctly

pkgname=go-hg
pkgver=14790
pkgrel=1
pkgdesc='Google Go compiler and tools (hg tip)'
arch=('x86_64' 'i686', 'armv6h')
url="http://golang.org/"
license=('custom')
depends=()
makedepends=('ed' 'mercurial')
provides=('go')
conflicts=('go')
options=(!strip !makeflags)
install=go.install
source=('go.sh')
sha256sums=('67394dd14510e351b0b29a4bfbcbcc60b61bf285994f67f849f7501a5d4493b0')
_hgroot=https://go.googlecode.com/hg/
_hgrepo=go

build() {
  cd "$srcdir"
  msg "Connecting to Mercurial server...."

  if [[ -d "$_hgrepo" ]]; then
    cd "$_hgrepo"
    hg pull -u || true # prevent error when no changeset
    msg "The local files are updated."
  else
    hg clone "$_hgroot" "$_hgrepo"
  fi

  msg "Mercurial checkout done or server timeout"
  msg "Starting build..."

  rm -rf "$srcdir/$_hgrepo-build"
  hg clone "$srcdir/$_hgrepo" "$srcdir/$_hgrepo-build"
  # prevent http://code.google.com/p/go/issues/detail?id=3263
  mv $srcdir/$_hgrepo-build/lib/codereview/codereview.cfg \
     $srcdir/$_hgrepo-build/lib/codereview/codereview.cfg.orig
  cd "$srcdir/$_hgrepo-build/src"

  unset GOARCH GOBIN GOOS GOROOT
  if test "$CARCH" == x86_64 || test "$CARCH" == armv6h; then
    LC_ALL=C GOROOT_FINAL=/opt/go ./make.bash
  else
    LC_ALL=C GOROOT_FINAL=/opt/go GOARCH=386 GOHOSTARCH=386 ./make.bash
  fi
}

package() {
  cd "$srcdir/$_hgrepo-build"

  msg2 "Packaging files..."
  mkdir -p $pkgdir/opt/go
  find * -type f ! -executable -print0 | xargs -0 -I {} install -Dm644 {} $pkgdir/opt/go/{}
  find * -type f -executable -print0 | xargs -0 -I {} install -Dm755 {} $pkgdir/opt/go/{}
  install -Dm755 $srcdir/go.sh $pkgdir/etc/profile.d/go.sh

  msg2 "Packaging editor-related files..."
  install -Dm644 misc/bash/go "$pkgdir/etc/bash_completion.d/go"
  install -Dm644 misc/zsh/go "$pkgdir/usr/share/zsh/site-functions/_go"
  install -Dm644 misc/emacs/go-mode-load.el "$pkgdir/usr/share/emacs/site-lisp/go-mode-load.el"
  install -Dm644 misc/emacs/go-mode.el "$pkgdir/usr/share/emacs/site-lisp/go-mode.el"
  for f in ftdetect/gofiletype.vim autoload/go/complete.vim indent/go.vim \
    ftplugin/go/fmt.vim ftplugin/go/import.vim \
    syntax/go.vim syntax/godoc.vim plugin/godoc.vim ;
  do
    install -Dm644 "misc/vim/$f" "$pkgdir/usr/share/vim/vimfiles/$f"
  done

  msg2 "Packaging license..."
  install -Dm644 LICENSE $pkgdir/usr/share/licenses/go/LICENSE

  msg2 "strip binary files"
  find $pkgdir/opt/go -type f 2>/dev/null | while read binary ; do
    case "$(file -bi "$binary")" in
    *application/x-sharedlib*)  # Libraries (.so)
      strip $STRIP_SHARED "$binary" 2>/dev/null || true ;;
    *application/x-archive*)    # Libraries (.a)
      strip $STRIP_STATIC "$binary"  2>/dev/null || true ;;
    *application/x-executable*) # Binaries
      strip $STRIP_BINARIES "$binary" || true ;;
    esac
  done

  msg2 "set same timestamps on all files"
  find $pkgdir/opt/go -type f -exec touch -r $pkgdir/opt/go/bin/go {} \;

  msg2 "changelog(last 10)"
  (cd  $srcdir/$_hgrepo ; \
    hg log -l 10 --template '{node|short} {date|shortdate} {desc|firstline}\n' ; \
    true )
}

# vim:set ts=2 sw=2 et:
