# Begin of automatic generation

# acosh
Test "acosh (7) == 2.63391579384963341725009269461593689":
ildouble: 1
ldouble: 1

# asinh
Test "asinh (0.75) == 0.693147180559945309417232121458176568":
ildouble: 1
ldouble: 1

# atan2
Test "atan2 (0.390625, .00029) == 1.57005392693128974780151246612928941":
ildouble: 1
ldouble: 1
Test "atan2 (1.390625, 0.9296875) == 0.981498387184244311516296577615519772":
ildouble: 1
ldouble: 1

# atanh
Test "atanh (0.75) == 0.972955074527656652552676371721589865":
ildouble: 1
ldouble: 1

# cacos
Test "Real part of: cacos (0.75 + 1.25 i) == 1.11752014915610270578240049553777969 - 1.13239363160530819522266333696834467 i":
float: 2
ifloat: 2
ildouble: 1
ldouble: 1
Test "Imaginary part of: cacos (0.75 + 1.25 i) == 1.11752014915610270578240049553777969 - 1.13239363160530819522266333696834467 i":
float: 1
ifloat: 1
ildouble: 2
ldouble: 2

# cacosh
Test "Real part of: cacosh (-2 - 3 i) == 1.9833870299165354323470769028940395 - 2.1414491111159960199416055713254211 i":
double: 1
float: 7
idouble: 1
ifloat: 7
ildouble: 6
ldouble: 6
Test "Imaginary part of: cacosh (-2 - 3 i) == 1.9833870299165354323470769028940395 - 2.1414491111159960199416055713254211 i":
double: 1
idouble: 1
ildouble: 2
ldouble: 2
Test "Real part of: cacosh (0.75 + 1.25 i) == 1.13239363160530819522266333696834467 + 1.11752014915610270578240049553777969 i":
ildouble: 1
ldouble: 1
Test "Imaginary part of: cacosh (0.75 + 1.25 i) == 1.13239363160530819522266333696834467 + 1.11752014915610270578240049553777969 i":
float: 1
ifloat: 1

# casin
Test "Real part of: casin (0.75 + 1.25 i) == 0.453276177638793913448921196101971749 + 1.13239363160530819522266333696834467 i":
double: 1
float: 5
idouble: 1
ifloat: 5
ildouble: 3
ldouble: 3
Test "Imaginary part of: casin (0.75 + 1.25 i) == 0.453276177638793913448921196101971749 + 1.13239363160530819522266333696834467 i":
float: 1
ifloat: 1
ildouble: 2
ldouble: 2

# casinh
Test "Real part of: casinh (-2 - 3 i) == -1.9686379257930962917886650952454982 - 0.96465850440760279204541105949953237 i":
double: 6
float: 19
idouble: 6
ifloat: 19
ildouble: 5
ldouble: 5
Test "Imaginary part of: casinh (-2 - 3 i) == -1.9686379257930962917886650952454982 - 0.96465850440760279204541105949953237 i":
double: 13
float: 1
idouble: 13
ifloat: 1
ildouble: 6
ldouble: 6
Test "Real part of: casinh (0.75 + 1.25 i) == 1.03171853444778027336364058631006594 + 0.911738290968487636358489564316731207 i":
float: 1
ifloat: 1
Test "Imaginary part of: casinh (0.75 + 1.25 i) == 1.03171853444778027336364058631006594 + 0.911738290968487636358489564316731207 i":
double: 1
float: 1
idouble: 1
ifloat: 1
ildouble: 1
ldouble: 1

# catan
Test "Imaginary part of: catan (-2 - 3 i) == -1.4099210495965755225306193844604208 - 0.22907268296853876629588180294200276 i":
double: 1
float: 1
idouble: 1
ifloat: 1
Test "Real part of: catan (0.75 + 1.25 i) == 1.10714871779409050301706546017853704 + 0.549306144334054845697622618461262852 i":
ildouble: 1
ldouble: 1

# catanh
Test "Real part of: catanh (-2 - 3 i) == -0.14694666622552975204743278515471595 - 1.3389725222944935611241935759091443 i":
ildouble: 1
ldouble: 1

# cbrt
Test "cbrt (-0.001) == -0.1":
ildouble: 1
ldouble: 1
Test "cbrt (0.9921875) == 0.997389022060725270579075195353955217":
ildouble: 1
ldouble: 1

# ccos
Test "Real part of: ccos (-2 - 3 i) == -4.18962569096880723013255501961597373 - 9.10922789375533659797919726277886212 i":
float: 1
ifloat: 1
Test "Imaginary part of: ccos (-2 - 3 i) == -4.18962569096880723013255501961597373 - 9.10922789375533659797919726277886212 i":
float: 1
ifloat: 1
Test "Real part of: ccos (0.75 + 1.25 i) == 1.38173873063425888530729933139078645 - 1.09193013555397466170919531722024128 i":
float: 1
ifloat: 1
ildouble: 1
ldouble: 1
Test "Imaginary part of: ccos (0.75 + 1.25 i) == 1.38173873063425888530729933139078645 - 1.09193013555397466170919531722024128 i":
float: 1
ifloat: 1
ildouble: 1
ldouble: 1

# ccosh
Test "Real part of: ccosh (-2 - 3 i) == -3.72454550491532256547397070325597253 + 0.511822569987384608834463849801875634 i":
float: 1
ifloat: 1
Test "Imaginary part of: ccosh (-2 - 3 i) == -3.72454550491532256547397070325597253 + 0.511822569987384608834463849801875634 i":
float: 1
ifloat: 1
ildouble: 1
ldouble: 1
Test "Real part of: ccosh (0.75 + 1.25 i) == 0.408242591877968807788852146397499084 + 0.780365930845853240391326216300863152 i":
float: 1
ifloat: 1
Test "Imaginary part of: ccosh (0.75 + 1.25 i) == 0.408242591877968807788852146397499084 + 0.780365930845853240391326216300863152 i":
float: 1
ifloat: 1
ildouble: 1
ldouble: 1

# cexp
Test "Real part of: cexp (-2.0 - 3.0 i) == -0.13398091492954261346140525546115575 - 0.019098516261135196432576240858800925 i":
float: 1
ifloat: 1
Test "Imaginary part of: cexp (-2.0 - 3.0 i) == -0.13398091492954261346140525546115575 - 0.019098516261135196432576240858800925 i":
float: 1
ifloat: 1
Test "Real part of: cexp (0.75 + 1.25 i) == 0.667537446429131586942201977015932112 + 2.00900045494094876258347228145863909 i":
float: 2
ifloat: 2
Test "Imaginary part of: cexp (0.75 + 1.25 i) == 0.667537446429131586942201977015932112 + 2.00900045494094876258347228145863909 i":
float: 1
ifloat: 1
ildouble: 1
ldouble: 1

# clog
Test "Real part of: clog (0.75 + 1.25 i) == 0.376885901188190075998919126749298416 + 1.03037682652431246378774332703115153 i":
float: 1
ifloat: 1
ildouble: 1
ldouble: 1
Test "Imaginary part of: clog (0.75 + 1.25 i) == 0.376885901188190075998919126749298416 + 1.03037682652431246378774332703115153 i":
ildouble: 1
ldouble: 1

# clog10
Test "Imaginary part of: clog10 (-0 + inf i) == inf + pi/2*log10(e) i":
float: 1
ifloat: 1
Test "Imaginary part of: clog10 (-0 - inf i) == inf - pi/2*log10(e) i":
float: 1
ifloat: 1
Test "Real part of: clog10 (-2 - 3 i) == 0.556971676153418384603252578971164214 - 0.937554462986374708541507952140189646 i":
ildouble: 1
ldouble: 1
Test "Imaginary part of: clog10 (-3 + inf i) == inf + pi/2*log10(e) i":
float: 1
ifloat: 1
Test "Imaginary part of: clog10 (-3 - inf i) == inf - pi/2*log10(e) i":
float: 1
ifloat: 1
Test "Imaginary part of: clog10 (-inf + 0 i) == inf + pi*log10(e) i":
float: 1
ifloat: 1
Test "Imaginary part of: clog10 (-inf + 1 i) == inf + pi*log10(e) i":
float: 1
ifloat: 1
Test "Imaginary part of: clog10 (-inf + inf i) == inf + 3/4 pi*log10(e) i":
double: 1
idouble: 1
Test "Imaginary part of: clog10 (-inf - 0 i) == inf - pi*log10(e) i":
float: 1
ifloat: 1
Test "Imaginary part of: clog10 (-inf - 1 i) == inf - pi*log10(e) i":
float: 1
ifloat: 1
Test "Imaginary part of: clog10 (0 + inf i) == inf + pi/2*log10(e) i":
float: 1
ifloat: 1
Test "Imaginary part of: clog10 (0 - inf i) == inf - pi/2*log10(e) i":
float: 1
ifloat: 1
Test "Real part of: clog10 (0.75 + 1.25 i) == 0.163679467193165171449476605077428975 + 0.447486970040493067069984724340855636 i":
double: 1
float: 1
idouble: 1
ifloat: 1
ildouble: 1
ldouble: 1
Test "Imaginary part of: clog10 (0.75 + 1.25 i) == 0.163679467193165171449476605077428975 + 0.447486970040493067069984724340855636 i":
double: 1
idouble: 1
ildouble: 2
ldouble: 2
Test "Imaginary part of: clog10 (3 + inf i) == inf + pi/2*log10(e) i":
float: 1
ifloat: 1
Test "Imaginary part of: clog10 (3 - inf i) == inf - pi/2*log10(e) i":
float: 1
ifloat: 1
Test "Imaginary part of: clog10 (inf + inf i) == inf + pi/4*log10(e) i":
float: 1
ifloat: 1
Test "Imaginary part of: clog10 (inf - inf i) == inf - pi/4*log10(e) i":
float: 1
ifloat: 1

# cos
Test "cos (M_PI_6l * 2.0) == 0.5":
double: 1
float: 1
idouble: 1
ifloat: 1
ildouble: 1
ldouble: 1
Test "cos (M_PI_6l * 4.0) == -0.5":
double: 2
float: 1
idouble: 2
ifloat: 1
ildouble: 1
ldouble: 1
Test "cos (pi/2) == 0":
double: 1
float: 1
idouble: 1
ifloat: 1
ildouble: 1
ldouble: 1

# cpow
Test "Real part of: cpow (0.75 + 1.25 i, 0.0 + 1.0 i) == 0.331825439177608832276067945276730566 + 0.131338600281188544930936345230903032 i":
float: 1
ifloat: 1
Test "Imaginary part of: cpow (0.75 + 1.25 i, 0.0 + 1.0 i) == 0.331825439177608832276067945276730566 + 0.131338600281188544930936345230903032 i":
float: 1
ifloat: 1
Test "Real part of: cpow (0.75 + 1.25 i, 0.75 + 1.25 i) == 0.117506293914473555420279832210420483 + 0.346552747708338676483025352060418001 i":
float: 1
ifloat: 1
ildouble: 9
ldouble: 9
Test "Imaginary part of: cpow (0.75 + 1.25 i, 0.75 + 1.25 i) == 0.117506293914473555420279832210420483 + 0.346552747708338676483025352060418001 i":
float: 1
ifloat: 1
ildouble: 1
ldouble: 1
Test "Real part of: cpow (0.75 + 1.25 i, 1.0 + 0.0 i) == 0.75 + 1.25 i":
float: 2
ifloat: 2
ildouble: 2
ldouble: 2
Test "Imaginary part of: cpow (0.75 + 1.25 i, 1.0 + 0.0 i) == 0.75 + 1.25 i":
float: 2
ifloat: 2
ildouble: 1
ldouble: 1
Test "Real part of: cpow (0.75 + 1.25 i, 1.0 + 1.0 i) == 0.0846958290317209430433805274189191353 + 0.513285749182902449043287190519090481 i":
double: 1
float: 2
idouble: 1
ifloat: 2
ildouble: 15
ldouble: 15
Test "Imaginary part of: cpow (0.75 + 1.25 i, 1.0 + 1.0 i) == 0.0846958290317209430433805274189191353 + 0.513285749182902449043287190519090481 i":
float: 1
ifloat: 1
ildouble: 1
ldouble: 1
Test "Real part of: cpow (2 + 0 i, 10 + 0 i) == 1024.0 + 0.0 i":
ildouble: 5
ldouble: 5
Test "Real part of: cpow (2 + 3 i, 4 + 0 i) == -119.0 - 120.0 i":
double: 1
float: 1
idouble: 1
ifloat: 1
ildouble: 4
ldouble: 4
Test "Imaginary part of: cpow (2 + 3 i, 4 + 0 i) == -119.0 - 120.0 i":
float: 6
ifloat: 6
ildouble: 2
ldouble: 2
Test "Real part of: cpow (e + 0 i, 0 + 2 * M_PIl i) == 1.0 + 0.0 i":
float: 1
ifloat: 1
Test "Imaginary part of: cpow (e + 0 i, 0 + 2 * M_PIl i) == 1.0 + 0.0 i":
double: 2
float: 3
idouble: 2
ifloat: 3
ildouble: 1
ldouble: 1

# csin
Test "Real part of: csin (-2 - 3 i) == -9.15449914691142957346729954460983256 + 4.16890695996656435075481305885375484 i":
float: 1
ifloat: 1
Test "Imaginary part of: csin (-2 - 3 i) == -9.15449914691142957346729954460983256 + 4.16890695996656435075481305885375484 i":
float: 1
ifloat: 1
Test "Real part of: csin (0.75 + 1.25 i) == 1.28722291002649188575873510790565441 + 1.17210635989270256101081285116138863 i":
float: 1
ifloat: 1
ildouble: 1
ldouble: 1
Test "Imaginary part of: csin (0.75 + 1.25 i) == 1.28722291002649188575873510790565441 + 1.17210635989270256101081285116138863 i":
float: 1
ifloat: 1

# csinh
Test "Real part of: csinh (-2 - 3 i) == 3.59056458998577995201256544779481679 - 0.530921086248519805267040090660676560 i":
float: 1
ifloat: 1
Test "Imaginary part of: csinh (-2 - 3 i) == 3.59056458998577995201256544779481679 - 0.530921086248519805267040090660676560 i":
float: 1
ifloat: 1
Test "Real part of: csinh (0.75 + 1.25 i) == 0.259294854551162779153349830618433028 + 1.22863452409509552219214606515777594 i":
float: 1
ifloat: 1
ildouble: 1
ldouble: 1
Test "Imaginary part of: csinh (0.75 + 1.25 i) == 0.259294854551162779153349830618433028 + 1.22863452409509552219214606515777594 i":
float: 1
ifloat: 1

# ctan
Test "Real part of: ctan (-2 - 3 i) == 0.376402564150424829275122113032269084e-2 - 1.00323862735360980144635859782192726 i":
double: 1
idouble: 1
ildouble: 1
ldouble: 1
Test "Real part of: ctan (0.75 + 1.25 i) == 0.160807785916206426725166058173438663 + 0.975363285031235646193581759755216379 i":
ildouble: 1
ldouble: 1
Test "Imaginary part of: ctan (0.75 + 1.25 i) == 0.160807785916206426725166058173438663 + 0.975363285031235646193581759755216379 i":
ildouble: 2
ldouble: 2

# ctanh
Test "Imaginary part of: ctanh (-2 - 3 i) == -0.965385879022133124278480269394560686 + 0.988437503832249372031403430350121098e-2 i":
ildouble: 1
ldouble: 1
Test "Imaginary part of: ctanh (0 + pi/4 i) == 0.0 + 1.0 i":
double: 1
idouble: 1
Test "Imaginary part of: ctanh (0.75 + 1.25 i) == 1.37260757053378320258048606571226857 + 0.385795952609750664177596760720790220 i":
double: 1
float: 1
idouble: 1
ifloat: 1
ildouble: 1
ldouble: 1

# erfc
Test "erfc (0.75) == 0.288844366346484868401062165408589223":
float: 1
ifloat: 1
Test "erfc (1.25) == 0.0770998717435417698634765188027188596":
ildouble: 1
ldouble: 1
Test "erfc (4.125) == 0.542340079956506600531223408575531062e-8":
float: 1
ifloat: 1

# expm1
Test "expm1 (1) == M_El - 1.0":
ildouble: 1
ldouble: 1

# gamma
Test "gamma (-0.5) == log(2*sqrt(pi))":
ildouble: 1
ldouble: 1
Test "gamma (0.5) == log(sqrt(pi))":
ildouble: 1
ldouble: 1
Test "gamma (3) == M_LN2l":
ildouble: 1
ldouble: 1

# hypot
Test "hypot (-0.7, -12.4) == 12.419742348374220601176836866763271":
float: 1
ifloat: 1
Test "hypot (-0.7, 12.4) == 12.419742348374220601176836866763271":
float: 1
ifloat: 1
Test "hypot (-12.4, -0.7) == 12.419742348374220601176836866763271":
float: 1
ifloat: 1
Test "hypot (-12.4, 0.7) == 12.419742348374220601176836866763271":
float: 1
ifloat: 1
Test "hypot (0.7, -12.4) == 12.419742348374220601176836866763271":
float: 1
ifloat: 1
Test "hypot (0.7, 12.4) == 12.419742348374220601176836866763271":
float: 1
ifloat: 1
Test "hypot (12.4, -0.7) == 12.419742348374220601176836866763271":
float: 1
ifloat: 1
Test "hypot (12.4, 0.7) == 12.419742348374220601176836866763271":
float: 1
ifloat: 1

# j0
Test "j0 (-4.0) == -3.9714980986384737228659076845169804197562E-1":
float: 1
ifloat: 1
ildouble: 1
ldouble: 1
Test "j0 (0.75) == 0.864242275166648623555731103820923211":
float: 1
ifloat: 1
Test "j0 (1.5) == 0.511827671735918128749051744283411720":
float: 1
ifloat: 1
Test "j0 (10.0) == -0.245935764451348335197760862485328754":
double: 1
idouble: 1
Test "j0 (4.0) == -3.9714980986384737228659076845169804197562E-1":
float: 1
ifloat: 1
ildouble: 1
ldouble: 1

# j1
Test "j1 (-1.0) == -0.440050585744933515959682203718914913":
float: 1
ifloat: 1
Test "j1 (1.0) == 0.440050585744933515959682203718914913":
float: 1
ifloat: 1
Test "j1 (1.5) == 0.557936507910099641990121213156089400":
float: 1
ifloat: 1
Test "j1 (10.0) == 0.0434727461688614366697487680258592883":
float: 2
ifloat: 2
ildouble: 1
ldouble: 1
Test "j1 (2.0) == 0.576724807756873387202448242269137087":
float: 1
ifloat: 1
Test "j1 (8.0) == 0.234636346853914624381276651590454612":
float: 1
ifloat: 1
ildouble: 1
ldouble: 1

# jn
Test "jn (0, -4.0) == -3.9714980986384737228659076845169804197562E-1":
float: 1
ifloat: 1
ildouble: 1
ldouble: 1
Test "jn (0, 0.75) == 0.864242275166648623555731103820923211":
float: 1
ifloat: 1
Test "jn (0, 1.5) == 0.511827671735918128749051744283411720":
float: 1
ifloat: 1
Test "jn (0, 10.0) == -0.245935764451348335197760862485328754":
double: 1
idouble: 1
Test "jn (0, 4.0) == -3.9714980986384737228659076845169804197562E-1":
float: 1
ifloat: 1
ildouble: 1
ldouble: 1
Test "jn (1, -1.0) == -0.440050585744933515959682203718914913":
float: 1
ifloat: 1
Test "jn (1, 1.0) == 0.440050585744933515959682203718914913":
float: 1
ifloat: 1
Test "jn (1, 1.5) == 0.557936507910099641990121213156089400":
float: 1
ifloat: 1
Test "jn (1, 10.0) == 0.0434727461688614366697487680258592883":
float: 2
ifloat: 2
ildouble: 1
ldouble: 1
Test "jn (1, 2.0) == 0.576724807756873387202448242269137087":
float: 1
ifloat: 1
Test "jn (1, 8.0) == 0.234636346853914624381276651590454612":
float: 1
ifloat: 1
ildouble: 1
ldouble: 1
Test "jn (10, -1.0) == 0.263061512368745320699785368779050294e-9":
float: 2
ifloat: 2
ildouble: 1
ldouble: 1
Test "jn (10, 0.125) == 0.250543369809369890173993791865771547e-18":
float: 1
ifloat: 1
Test "jn (10, 0.75) == 0.149621713117596814698712483621682835e-10":
float: 2
ifloat: 2
ildouble: 2
ldouble: 2
Test "jn (10, 1.0) == 0.263061512368745320699785368779050294e-9":
float: 2
ifloat: 2
ildouble: 1
ldouble: 1
Test "jn (10, 10.0) == 0.207486106633358857697278723518753428":
double: 1
float: 5
idouble: 1
ifloat: 5
ildouble: 2
ldouble: 2
Test "jn (10, 2.0) == 0.251538628271673670963516093751820639e-6":
float: 2
ifloat: 2
ildouble: 1
ldouble: 1
Test "jn (3, -1.0) == -0.0195633539826684059189053216217515083":
float: 1
ifloat: 1
ildouble: 1
ldouble: 1
Test "jn (3, 1.0) == 0.0195633539826684059189053216217515083":
float: 1
ifloat: 1
ildouble: 1
ldouble: 1
Test "jn (3, 10.0) == 0.0583793793051868123429354784103409563":
double: 1
float: 1
idouble: 1
ifloat: 1
ildouble: 1
ldouble: 1
Test "jn (3, 2.0) == 0.128943249474402051098793332969239835":
ildouble: 1
ldouble: 1

# lgamma
Test "lgamma (-0.5) == log(2*sqrt(pi))":
ildouble: 1
ldouble: 1
Test "lgamma (0.5) == log(sqrt(pi))":
ildouble: 1
ldouble: 1
Test "lgamma (0.7) == 0.260867246531666514385732417016759578":
float: 1
ifloat: 1
ildouble: 1
ldouble: 1
Test "lgamma (1.2) == -0.853740900033158497197028392998854470e-1":
double: 1
float: 2
idouble: 1
ifloat: 2
ildouble: 1
ldouble: 1
Test "lgamma (3) == M_LN2l":
ildouble: 1
ldouble: 1

# log
Test "log (0.75) == -0.287682072451780927439219005993827432":
ildouble: 1
ldouble: 1
Test "log (2) == M_LN2l":
ildouble: 1
ldouble: 1
Test "log (e) == 1":
float: 1
ifloat: 1

# log10
Test "log10 (0.75) == -0.124938736608299953132449886193870744":
ildouble: 2
ldouble: 2
Test "log10 (e) == log10(e)":
float: 1
ifloat: 1

# log1p
Test "log1p (-0.25) == -0.287682072451780927439219005993827432":
ildouble: 1
ldouble: 1

# log2
Test "log2 (0.75) == -.415037499278843818546261056052183492":
ildouble: 1
ldouble: 1

# pow
Test "pow (0.75, 1.25) == 0.697953644326574699205914060237425566":
ildouble: 1
ldouble: 1

# sincos
Test "sincos (M_PI_6l*2.0, &sin_res, &cos_res) puts 0.5 in cos_res":
double: 1
float: 1
idouble: 1
ifloat: 1
ildouble: 1
ldouble: 1
Test "sincos (M_PI_6l*2.0, &sin_res, &cos_res) puts 0.86602540378443864676372317075293616 in sin_res":
double: 1
float: 1
idouble: 1
ifloat: 1
ildouble: 1
ldouble: 1
Test "sincos (pi/2, &sin_res, &cos_res) puts 0 in cos_res":
double: 1
float: 1
idouble: 1
ifloat: 1
ildouble: 1
ldouble: 1

# sinh
Test "sinh (0.75) == 0.822316731935829980703661634446913849":
ildouble: 1
ldouble: 1

# tan
Test "tan (0.75) == 0.931596459944072461165202756573936428":
ildouble: 1
ldouble: 1
Test "tan (pi/4) == 1":
double: 1
idouble: 1

# tgamma
Test "tgamma (-0.5) == -2 sqrt (pi)":
double: 1
float: 1
idouble: 1
ifloat: 1
ildouble: 1
ldouble: 1
Test "tgamma (0.5) == sqrt (pi)":
float: 1
ifloat: 1
ildouble: 1
ldouble: 1
Test "tgamma (0.7) == 1.29805533264755778568117117915281162":
double: 1
float: 1
idouble: 1
ifloat: 1
Test "tgamma (4) == 6":
ildouble: 1
ldouble: 1

# y0
Test "y0 (0.125) == -1.38968062514384052915582277745018693":
double: 1
float: 1
idouble: 1
ifloat: 1
ildouble: 1
ldouble: 1
Test "y0 (0.75) == -0.137172769385772397522814379396581855":
double: 1
idouble: 1
ildouble: 2
ldouble: 2
Test "y0 (1.0) == 0.0882569642156769579829267660235151628":
ildouble: 1
ldouble: 1
Test "y0 (1.5) == 0.382448923797758843955068554978089862":
ildouble: 1
ldouble: 1
Test "y0 (10.0) == 0.0556711672835993914244598774101900481":
ildouble: 1
ldouble: 1
Test "y0 (2.0) == 0.510375672649745119596606592727157873":
float: 1
ifloat: 1
Test "y0 (8.0) == 0.223521489387566220527323400498620359":
float: 1
ifloat: 1
ildouble: 1
ldouble: 1

# y1
Test "y1 (0.125) == -5.19993611253477499595928744876579921":
ildouble: 1
ldouble: 1
Test "y1 (1.0) == -0.781212821300288716547150000047964821":
double: 1
idouble: 1
Test "y1 (10.0) == 0.249015424206953883923283474663222803":
float: 1
ifloat: 1
Test "y1 (2.0) == -0.107032431540937546888370772277476637":
float: 2
ifloat: 2
ildouble: 1
ldouble: 1
Test "y1 (8.0) == -0.158060461731247494255555266187483550":
ildouble: 1
ldouble: 1

# yn
Test "yn (0, 0.125) == -1.38968062514384052915582277745018693":
double: 1
float: 1
idouble: 1
ifloat: 1
ildouble: 1
ldouble: 1
Test "yn (0, 0.75) == -0.137172769385772397522814379396581855":
double: 1
idouble: 1
ildouble: 2
ldouble: 2
Test "yn (0, 1.0) == 0.0882569642156769579829267660235151628":
ildouble: 1
ldouble: 1
Test "yn (0, 1.5) == 0.382448923797758843955068554978089862":
ildouble: 1
ldouble: 1
Test "yn (0, 10.0) == 0.0556711672835993914244598774101900481":
ildouble: 1
ldouble: 1
Test "yn (0, 2.0) == 0.510375672649745119596606592727157873":
float: 1
ifloat: 1
Test "yn (0, 8.0) == 0.223521489387566220527323400498620359":
float: 1
ifloat: 1
ildouble: 1
ldouble: 1
Test "yn (1, 0.125) == -5.19993611253477499595928744876579921":
float: 1
ifloat: 1
ildouble: 1
ldouble: 1
Test "yn (1, 0.75) == -1.03759455076928541973767132140642198":
float: 1
ifloat: 1
Test "yn (1, 1.0) == -0.781212821300288716547150000047964821":
double: 1
idouble: 1
Test "yn (1, 10.0) == 0.249015424206953883923283474663222803":
float: 1
ifloat: 1
Test "yn (1, 2.0) == -0.107032431540937546888370772277476637":
float: 2
ifloat: 2
ildouble: 1
ldouble: 1
Test "yn (1, 8.0) == -0.158060461731247494255555266187483550":
ildouble: 1
ldouble: 1
Test "yn (10, 0.125) == -127057845771019398.252538486899753195":
double: 1
idouble: 1
ildouble: 2
ldouble: 2
Test "yn (10, 0.75) == -2133501638.90573424452445412893839236":
float: 1
ifloat: 1
ildouble: 4
ldouble: 4
Test "yn (10, 10.0) == -0.359814152183402722051986577343560609":
double: 1
float: 1
idouble: 1
ifloat: 1
Test "yn (3, 0.125) == -2612.69757350066712600220955744091741":
ildouble: 1
ldouble: 1
Test "yn (3, 0.75) == -12.9877176234475433186319774484809207":
double: 1
float: 1
idouble: 1
ifloat: 1
ildouble: 2
ldouble: 2
Test "yn (3, 2.0) == -1.12778377684042778608158395773179238":
float: 1
ifloat: 1

# Maximal error of functions:
Function: "acosh":
ildouble: 1
ldouble: 1

Function: "asinh":
ildouble: 1
ldouble: 1

Function: "atan2":
ildouble: 1
ldouble: 1

Function: "atanh":
ildouble: 1
ldouble: 1

Function: Real part of "cacos":
float: 2
ifloat: 2
ildouble: 1
ldouble: 1

Function: Imaginary part of "cacos":
float: 1
ifloat: 1
ildouble: 2
ldouble: 2

Function: Real part of "cacosh":
double: 1
float: 7
idouble: 1
ifloat: 7
ildouble: 6
ldouble: 6

Function: Imaginary part of "cacosh":
double: 1
float: 1
idouble: 1
ifloat: 1
ildouble: 2
ldouble: 2

Function: Real part of "casin":
double: 1
float: 5
idouble: 1
ifloat: 5
ildouble: 3
ldouble: 3

Function: Imaginary part of "casin":
float: 1
ifloat: 1
ildouble: 2
ldouble: 2

Function: Real part of "casinh":
double: 6
float: 19
idouble: 6
ifloat: 19
ildouble: 5
ldouble: 5

Function: Imaginary part of "casinh":
double: 13
float: 1
idouble: 13
ifloat: 1
ildouble: 6
ldouble: 6

Function: Real part of "catan":
ildouble: 1
ldouble: 1

Function: Imaginary part of "catan":
double: 1
float: 1
idouble: 1
ifloat: 1

Function: Real part of "catanh":
ildouble: 1
ldouble: 1

Function: "cbrt":
ildouble: 1
ldouble: 1

Function: Real part of "ccos":
float: 1
ifloat: 1
ildouble: 1
ldouble: 1

Function: Imaginary part of "ccos":
float: 1
ifloat: 1
ildouble: 1
ldouble: 1

Function: Real part of "ccosh":
float: 1
ifloat: 1

Function: Imaginary part of "ccosh":
float: 1
ifloat: 1
ildouble: 1
ldouble: 1

Function: Real part of "cexp":
float: 2
ifloat: 2

Function: Imaginary part of "cexp":
float: 1
ifloat: 1
ildouble: 1
ldouble: 1

Function: Real part of "clog":
float: 1
ifloat: 1
ildouble: 1
ldouble: 1

Function: Imaginary part of "clog":
ildouble: 1
ldouble: 1

Function: Real part of "clog10":
double: 1
float: 1
idouble: 1
ifloat: 1
ildouble: 1
ldouble: 1

Function: Imaginary part of "clog10":
double: 1
float: 1
idouble: 1
ifloat: 1
ildouble: 2
ldouble: 2

Function: "cos":
double: 2
float: 1
idouble: 2
ifloat: 1
ildouble: 1
ldouble: 1

Function: Real part of "cpow":
double: 1
float: 2
idouble: 1
ifloat: 2
ildouble: 15
ldouble: 15

Function: Imaginary part of "cpow":
double: 2
float: 6
idouble: 2
ifloat: 6
ildouble: 2
ldouble: 2

Function: Real part of "csin":
float: 1
ifloat: 1
ildouble: 1
ldouble: 1

Function: Imaginary part of "csin":
float: 1
ifloat: 1

Function: Real part of "csinh":
float: 1
ifloat: 1
ildouble: 1
ldouble: 1

Function: Imaginary part of "csinh":
float: 1
ifloat: 1

Function: Real part of "ctan":
double: 1
idouble: 1
ildouble: 1
ldouble: 1

Function: Imaginary part of "ctan":
ildouble: 2
ldouble: 2

Function: Imaginary part of "ctanh":
double: 1
float: 1
idouble: 1
ifloat: 1
ildouble: 1
ldouble: 1

Function: "erfc":
float: 1
ifloat: 1
ildouble: 1
ldouble: 1

Function: "expm1":
ildouble: 1
ldouble: 1

Function: "gamma":
ildouble: 1
ldouble: 1

Function: "hypot":
float: 1
ifloat: 1

Function: "j0":
double: 1
float: 1
idouble: 1
ifloat: 1
ildouble: 1
ldouble: 1

Function: "j1":
float: 2
ifloat: 2
ildouble: 1
ldouble: 1

Function: "jn":
double: 1
float: 5
idouble: 1
ifloat: 5
ildouble: 2
ldouble: 2

Function: "lgamma":
double: 1
float: 2
idouble: 1
ifloat: 2
ildouble: 1
ldouble: 1

Function: "log":
float: 1
ifloat: 1
ildouble: 1
ldouble: 1

Function: "log10":
float: 1
ifloat: 1
ildouble: 2
ldouble: 2

Function: "log1p":
ildouble: 1
ldouble: 1

Function: "log2":
ildouble: 1
ldouble: 1

Function: "pow":
ildouble: 1
ldouble: 1

Function: "sincos":
double: 1
float: 1
idouble: 1
ifloat: 1
ildouble: 1
ldouble: 1

Function: "sinh":
ildouble: 1
ldouble: 1

Function: "tan":
double: 1
idouble: 1
ildouble: 1
ldouble: 1

Function: "tgamma":
double: 1
float: 1
idouble: 1
ifloat: 1
ildouble: 1
ldouble: 1

Function: "y0":
double: 1
float: 1
idouble: 1
ifloat: 1
ildouble: 2
ldouble: 2

Function: "y1":
double: 1
float: 2
idouble: 1
ifloat: 2
ildouble: 1
ldouble: 1

Function: "yn":
double: 1
float: 2
idouble: 1
ifloat: 2
ildouble: 4
ldouble: 4

# end of automatic generation
