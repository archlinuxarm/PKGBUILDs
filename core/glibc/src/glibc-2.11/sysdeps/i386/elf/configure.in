GLIBC_PROVIDES dnl See aclocal.m4 in the top level source directory.
# Local configure fragment for sysdeps/i386/elf.

if test "$usetls" != no; then
# Check for support of thread-local storage handling in assembler and
# linker.
AC_CACHE_CHECK(for i386 TLS support, libc_cv_386_tls, [dnl
cat > conftest.s <<\EOF
	.section ".tdata", "awT", @progbits
	.globl foo
foo:	.long	1
	.section ".tbss", "awT", @nobits
	.globl bar
bar:	.skip	4
	.text
baz:	leal	bar@TLSLDM(%ebx), %eax
	leal	bar@DTPOFF(%eax), %edx
	subl	foo@GOTTPOFF(%edx), %eax
	subl	$bar@TPOFF, %eax
	movl	foo@GOTNTPOFF(%edx), %ecx
	movl	%gs:(%ecx), %eax
	movl	%gs:bar@NTPOFF, %eax
EOF
dnl
if AC_TRY_COMMAND(${CC-cc} -c $CFLAGS conftest.s 1>&AS_MESSAGE_LOG_FD); then
  libc_cv_386_tls=yes
else
  libc_cv_386_tls=no
fi
rm -f conftest*])
if test $libc_cv_386_tls = yes; then
  AC_DEFINE(HAVE_TLS_SUPPORT)
fi
fi

dnl It is always possible to access static and hidden symbols in an
dnl position independent way.
AC_DEFINE(PI_STATIC_AND_HIDDEN)
