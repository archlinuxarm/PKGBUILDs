Index: nfs-utils-1.1.6/utils/gssd/context_lucid.c
===================================================================
--- nfs-utils-1.1.6.orig/utils/gssd/context_lucid.c
+++ nfs-utils-1.1.6/utils/gssd/context_lucid.c
@@ -51,8 +51,10 @@
 #include "context.h"
 
 #ifndef OM_uint64
+#ifndef GSSAPI_GSSAPI_H_
 typedef uint64_t OM_uint64;
 #endif
+#endif
 
 static int
 write_lucid_keyblock(char **p, char *end, gss_krb5_lucid_key_t *key)
@@ -177,10 +179,10 @@
 	int retcode = 0;
 
 	printerr(2, "DEBUG: serialize_krb5_ctx: lucid version!\n");
-	maj_stat = gss_export_lucid_sec_context(&min_stat, &ctx,
+	maj_stat = gss_krb5_export_lucid_sec_context(&min_stat, &ctx,
 						1, &return_ctx);
 	if (maj_stat != GSS_S_COMPLETE) {
-		pgsserr("gss_export_lucid_sec_context",
+		pgsserr("gss_krb5_export_lucid_sec_context",
 			maj_stat, min_stat, &krb5oid);
 		goto out_err;
 	}
@@ -204,9 +206,9 @@
 	else
 		retcode = prepare_krb5_rfc_cfx_buffer(lctx, buf, endtime);
 
-	maj_stat = gss_free_lucid_sec_context(&min_stat, ctx, return_ctx);
+	maj_stat = gss_krb5_free_lucid_sec_context(&min_stat, ctx);
 	if (maj_stat != GSS_S_COMPLETE) {
-		pgsserr("gss_export_lucid_sec_context",
+		pgsserr("gss_krb5_export_lucid_sec_context",
 			maj_stat, min_stat, &krb5oid);
 		printerr(0, "WARN: failed to free lucid sec context\n");
 	}
Index: nfs-utils-1.1.6/utils/gssd/krb5_util.c
===================================================================
--- nfs-utils-1.1.6.orig/utils/gssd/krb5_util.c
+++ nfs-utils-1.1.6/utils/gssd/krb5_util.c
@@ -332,10 +332,10 @@
 		return -1;
 	}
 
-	maj_stat = gss_set_allowable_enctypes(&min_stat, credh, &krb5oid,
+	maj_stat = gss_krb5_set_allowable_enctypes(&min_stat, credh,
 					     num_enctypes, &enctypes);
 	if (maj_stat != GSS_S_COMPLETE) {
-		pgsserr("gss_set_allowable_enctypes",
+		pgsserr("gss_krb5_set_allowable_enctypes",
 			maj_stat, min_stat, &krb5oid);
 		gss_release_cred(&min_stat, &credh);
 		return -1;
