diff -rupN linux-3.1.old/arch/arm/Kconfig linux-3.1/arch/arm/Kconfig
--- linux-3.1.old/arch/arm/Kconfig	2011-10-24 01:10:05.000000000 -0600
+++ linux-3.1/arch/arm/Kconfig	2012-12-11 10:53:26.000000000 -0700
@@ -503,6 +503,7 @@ config ARCH_KIRKWOOD
 	bool "Marvell Kirkwood"
 	select CPU_FEROCEON
 	select PCI
+	select PCI_QUIRKS
 	select ARCH_REQUIRE_GPIOLIB
 	select GENERIC_CLOCKEVENTS
 	select PLAT_ORION
diff -rupN linux-3.1.old/arch/arm/mach-kirkwood/pcie.c linux-3.1/arch/arm/mach-kirkwood/pcie.c
--- linux-3.1.old/arch/arm/mach-kirkwood/pcie.c	2011-10-24 01:10:05.000000000 -0600
+++ linux-3.1/arch/arm/mach-kirkwood/pcie.c	2012-12-11 10:56:22.000000000 -0700
@@ -213,14 +213,19 @@ static int __init kirkwood_pcie_setup(in
 	return 1;
 }
 
+/*
+ * The root complex has a hardwired class of PCI_CLASS_MEMORY_OTHER, when it
+ * is operating as a root complex this needs to be switched to
+ * PCI_CLASS_BRIDGE_HOST or Linux will errantly try to process the BAR's on
+ * the device. Decoding setup is handled by the orion code.
+ */
 static void __devinit rc_pci_fixup(struct pci_dev *dev)
 {
-	/*
-	 * Prevent enumeration of root complex.
-	 */
 	if (dev->bus->parent == NULL && dev->devfn == 0) {
 		int i;
 
+                dev->class &= 0xff;
+                dev->class |= PCI_CLASS_BRIDGE_HOST << 8;
 		for (i = 0; i < DEVICE_COUNT_RESOURCE; i++) {
 			dev->resource[i].start = 0;
 			dev->resource[i].end   = 0;
