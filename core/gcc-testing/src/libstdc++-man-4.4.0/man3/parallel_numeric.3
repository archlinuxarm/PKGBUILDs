.TH "numeric" 3 "21 Apr 2009" "libstdc++" \" -*- nroff -*-
.ad l
.nh
.SH NAME
numeric \- Parallel STL function calls corresponding to \fBstl_numeric.h\fP. The functions defined here mainly do case switches and call the actual parallelized versions in other files. Inlining policy: Functions that basically only contain one function call, are declared inline. This file is a GNU parallel extension to the Standard C++ Library.  

.PP
.SH SYNOPSIS
.br
.PP
.SS "Namespaces"

.in +1c
.ti -1c
.RI "namespace \fBstd\fP"
.br
.ti -1c
.RI "namespace \fBstd::__parallel\fP"
.br
.in -1c
.SS "Defines"

.in +1c
.ti -1c
.RI "#define \fB_GLIBCXX_PARALLEL_NUMERIC_H\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "template<typename InputIterator , typename T , typename BinaryOperation > T \fBstd::__parallel::accumulate\fP (InputIterator begin, InputIterator end, T init, BinaryOperation binary_op)"
.br
.ti -1c
.RI "template<typename InputIterator , typename T , typename BinaryOperation > T \fBstd::__parallel::accumulate\fP (InputIterator begin, InputIterator end, T init, BinaryOperation binary_op, \fB__gnu_parallel::_Parallelism\fP parallelism_tag)"
.br
.ti -1c
.RI "template<typename InputIterator , typename T > T \fBstd::__parallel::accumulate\fP (InputIterator begin, InputIterator end, T init)"
.br
.ti -1c
.RI "template<typename InputIterator , typename T > T \fBstd::__parallel::accumulate\fP (InputIterator begin, InputIterator end, T init, \fB__gnu_parallel::_Parallelism\fP parallelism_tag)"
.br
.ti -1c
.RI "template<typename InputIterator , typename T , typename BinaryOperation > T \fBstd::__parallel::accumulate\fP (InputIterator begin, InputIterator end, T init, BinaryOperation binary_op, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename InputIterator , typename T > T \fBstd::__parallel::accumulate\fP (InputIterator begin, InputIterator end, T init, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename _RandomAccessIterator , typename T , typename BinaryOperation > T \fBstd::__parallel::accumulate_switch\fP (_RandomAccessIterator begin, _RandomAccessIterator end, T init, BinaryOperation binary_op, random_access_iterator_tag, \fB__gnu_parallel::_Parallelism\fP parallelism_tag=__gnu_parallel::parallel_unbalanced)"
.br
.ti -1c
.RI "template<typename InputIterator , typename T , typename BinaryOperation , typename IteratorTag > T \fBstd::__parallel::accumulate_switch\fP (InputIterator begin, InputIterator end, T init, BinaryOperation binary_op, IteratorTag)"
.br
.ti -1c
.RI "template<typename InputIterator , typename T , typename IteratorTag > T \fBstd::__parallel::accumulate_switch\fP (InputIterator begin, InputIterator end, T init, IteratorTag)"
.br
.ti -1c
.RI "template<typename InputIterator , typename OutputIterator , typename BinaryOperation > OutputIterator \fBstd::__parallel::adjacent_difference\fP (InputIterator begin, InputIterator end, OutputIterator result, BinaryOperation binary_op)"
.br
.ti -1c
.RI "template<typename InputIterator , typename OutputIterator , typename BinaryOperation > OutputIterator \fBstd::__parallel::adjacent_difference\fP (InputIterator begin, InputIterator end, OutputIterator result, BinaryOperation binary_op, \fB__gnu_parallel::_Parallelism\fP parallelism_tag)"
.br
.ti -1c
.RI "template<typename InputIterator , typename OutputIterator > OutputIterator \fBstd::__parallel::adjacent_difference\fP (InputIterator begin, InputIterator end, OutputIterator result)"
.br
.ti -1c
.RI "template<typename InputIterator , typename OutputIterator > OutputIterator \fBstd::__parallel::adjacent_difference\fP (InputIterator begin, InputIterator end, OutputIterator result, \fB__gnu_parallel::_Parallelism\fP parallelism_tag)"
.br
.ti -1c
.RI "template<typename InputIterator , typename OutputIterator , typename BinaryOperation > OutputIterator \fBstd::__parallel::adjacent_difference\fP (InputIterator begin, InputIterator end, OutputIterator result, BinaryOperation bin_op, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename InputIterator , typename OutputIterator > OutputIterator \fBstd::__parallel::adjacent_difference\fP (InputIterator begin, InputIterator end, OutputIterator result, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename InputIterator , typename OutputIterator , typename BinaryOperation > OutputIterator \fBstd::__parallel::adjacent_difference_switch\fP (InputIterator begin, InputIterator end, OutputIterator result, BinaryOperation bin_op, random_access_iterator_tag, random_access_iterator_tag, \fB__gnu_parallel::_Parallelism\fP parallelism_tag=__gnu_parallel::parallel_balanced)"
.br
.ti -1c
.RI "template<typename InputIterator , typename OutputIterator , typename BinaryOperation , typename IteratorTag1 , typename IteratorTag2 > OutputIterator \fBstd::__parallel::adjacent_difference_switch\fP (InputIterator begin, InputIterator end, OutputIterator result, BinaryOperation bin_op, IteratorTag1, IteratorTag2)"
.br
.ti -1c
.RI "template<typename InputIterator1 , typename InputIterator2 , typename T > T \fBstd::__parallel::inner_product\fP (InputIterator1 first1, InputIterator1 last1, InputIterator2 first2, T init)"
.br
.ti -1c
.RI "template<typename InputIterator1 , typename InputIterator2 , typename T > T \fBstd::__parallel::inner_product\fP (InputIterator1 first1, InputIterator1 last1, InputIterator2 first2, T init, \fB__gnu_parallel::_Parallelism\fP parallelism_tag)"
.br
.ti -1c
.RI "template<typename InputIterator1 , typename InputIterator2 , typename T , typename BinaryFunction1 , typename BinaryFunction2 > T \fBstd::__parallel::inner_product\fP (InputIterator1 first1, InputIterator1 last1, InputIterator2 first2, T init, BinaryFunction1 binary_op1, BinaryFunction2 binary_op2)"
.br
.ti -1c
.RI "template<typename InputIterator1 , typename InputIterator2 , typename T , typename BinaryFunction1 , typename BinaryFunction2 > T \fBstd::__parallel::inner_product\fP (InputIterator1 first1, InputIterator1 last1, InputIterator2 first2, T init, BinaryFunction1 binary_op1, BinaryFunction2 binary_op2, \fB__gnu_parallel::_Parallelism\fP parallelism_tag)"
.br
.ti -1c
.RI "template<typename InputIterator1 , typename InputIterator2 , typename T , typename BinaryFunction1 , typename BinaryFunction2 > T \fBstd::__parallel::inner_product\fP (InputIterator1 first1, InputIterator1 last1, InputIterator2 first2, T init, BinaryFunction1 binary_op1, BinaryFunction2 binary_op2, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename InputIterator1 , typename InputIterator2 , typename T > T \fBstd::__parallel::inner_product\fP (InputIterator1 first1, InputIterator1 last1, InputIterator2 first2, T init, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename InputIterator1 , typename InputIterator2 , typename T , typename BinaryFunction1 , typename BinaryFunction2 , typename IteratorTag1 , typename IteratorTag2 > T \fBstd::__parallel::inner_product_switch\fP (InputIterator1 first1, InputIterator1 last1, InputIterator2 first2, T init, BinaryFunction1 binary_op1, BinaryFunction2 binary_op2, IteratorTag1, IteratorTag2)"
.br
.ti -1c
.RI "template<typename RandomAccessIterator1 , typename RandomAccessIterator2 , typename T , typename BinaryFunction1 , typename BinaryFunction2 > T \fBstd::__parallel::inner_product_switch\fP (RandomAccessIterator1 first1, RandomAccessIterator1 last1, RandomAccessIterator2 first2, T init, BinaryFunction1 binary_op1, BinaryFunction2 binary_op2, random_access_iterator_tag, random_access_iterator_tag, \fB__gnu_parallel::_Parallelism\fP parallelism_tag=__gnu_parallel::parallel_unbalanced)"
.br
.ti -1c
.RI "template<typename InputIterator , typename OutputIterator , typename BinaryOperation > OutputIterator \fBstd::__parallel::partial_sum\fP (InputIterator begin, InputIterator end, OutputIterator result, BinaryOperation binary_op)"
.br
.ti -1c
.RI "template<typename InputIterator , typename OutputIterator > OutputIterator \fBstd::__parallel::partial_sum\fP (InputIterator begin, InputIterator end, OutputIterator result)"
.br
.ti -1c
.RI "template<typename InputIterator , typename OutputIterator , typename BinaryOperation > OutputIterator \fBstd::__parallel::partial_sum\fP (InputIterator begin, InputIterator end, OutputIterator result, BinaryOperation bin_op, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename InputIterator , typename OutputIterator > OutputIterator \fBstd::__parallel::partial_sum\fP (InputIterator begin, InputIterator end, OutputIterator result, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename InputIterator , typename OutputIterator , typename BinaryOperation > OutputIterator \fBstd::__parallel::partial_sum_switch\fP (InputIterator begin, InputIterator end, OutputIterator result, BinaryOperation bin_op, random_access_iterator_tag, random_access_iterator_tag)"
.br
.ti -1c
.RI "template<typename InputIterator , typename OutputIterator , typename BinaryOperation , typename IteratorTag1 , typename IteratorTag2 > OutputIterator \fBstd::__parallel::partial_sum_switch\fP (InputIterator begin, InputIterator end, OutputIterator result, BinaryOperation bin_op, IteratorTag1, IteratorTag2)"
.br
.in -1c
.SH "Detailed Description"
.PP 
Parallel STL function calls corresponding to \fBstl_numeric.h\fP. The functions defined here mainly do case switches and call the actual parallelized versions in other files. Inlining policy: Functions that basically only contain one function call, are declared inline. This file is a GNU parallel extension to the Standard C++ Library. 


.PP
Definition in file \fBparallel/numeric\fP.
.SH "Author"
.PP 
Generated automatically by Doxygen for libstdc++ from the source code.
