.TH "std::_List_base" 3 "21 Apr 2009" "libstdc++" \" -*- nroff -*-
.ad l
.nh
.SH NAME
std::_List_base \- See \fBbits/stl_deque.h\fP's \fB_Deque_base\fP for an explanation.  

.PP
.SH SYNOPSIS
.br
.PP
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef _Alloc \fBallocator_type\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fB_List_base\fP (\fB_List_base\fP &&__x)"
.br
.ti -1c
.RI "\fB_List_base\fP (const allocator_type &__a)"
.br
.ti -1c
.RI "void \fB_M_clear\fP ()"
.br
.ti -1c
.RI "const _Node_alloc_type & \fB_M_get_Node_allocator\fP () const "
.br
.ti -1c
.RI "_Node_alloc_type & \fB_M_get_Node_allocator\fP ()"
.br
.ti -1c
.RI "_Tp_alloc_type \fB_M_get_Tp_allocator\fP () const "
.br
.ti -1c
.RI "void \fB_M_init\fP ()"
.br
.ti -1c
.RI "allocator_type \fBget_allocator\fP () const "
.br
.in -1c
.SS "Protected Types"

.in +1c
.ti -1c
.RI "typedef _Alloc::template rebind< \fB_List_node\fP< _Tp > >::other \fB_Node_alloc_type\fP"
.br
.ti -1c
.RI "typedef _Alloc::template rebind< _Tp >::other \fB_Tp_alloc_type\fP"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "\fB_List_node\fP< _Tp > * \fB_M_get_node\fP ()"
.br
.ti -1c
.RI "void \fB_M_put_node\fP (\fB_List_node\fP< _Tp > *__p)"
.br
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "_List_impl \fB_M_impl\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<typename _Tp, typename _Alloc> class std::_List_base< _Tp, _Alloc >"
See \fBbits/stl_deque.h\fP's \fB_Deque_base\fP for an explanation. 
.PP
Definition at line 277 of file stl_list.h.

.SH "Author"
.PP 
Generated automatically by Doxygen for libstdc++ from the source code.
