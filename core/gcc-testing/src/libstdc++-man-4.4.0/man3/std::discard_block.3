.TH "std::discard_block" 3 "21 Apr 2009" "libstdc++" \" -*- nroff -*-
.ad l
.nh
.SH NAME
std::discard_block \- 
.SH SYNOPSIS
.br
.PP
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef _UniformRandomNumberGenerator \fBbase_type\fP"
.br
.ti -1c
.RI "typedef base_type::result_type \fBresult_type\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "const \fBbase_type\fP & \fBbase\fP () const "
.br
.ti -1c
.RI "template<class _Gen > \fBdiscard_block\fP (_Gen &__g)"
.br
.ti -1c
.RI "\fBdiscard_block\fP (unsigned long __s)"
.br
.ti -1c
.RI "\fBdiscard_block\fP (const \fBbase_type\fP &__rng)"
.br
.ti -1c
.RI "\fBdiscard_block\fP ()"
.br
.ti -1c
.RI "\fBresult_type\fP \fBmax\fP () const "
.br
.ti -1c
.RI "\fBresult_type\fP \fBmin\fP () const "
.br
.ti -1c
.RI "\fBresult_type\fP \fBoperator()\fP ()"
.br
.ti -1c
.RI "template<class _Gen > void \fBseed\fP (_Gen &__g)"
.br
.ti -1c
.RI "void \fBseed\fP ()"
.br
.in -1c
.SS "Static Public Attributes"

.in +1c
.ti -1c
.RI "static const int \fBblock_size\fP"
.br
.ti -1c
.RI "static const int \fBused_block\fP"
.br
.in -1c
.SS "Friends"

.in +1c
.ti -1c
.RI "bool \fBoperator!=\fP (const \fBdiscard_block\fP &__lhs, const \fBdiscard_block\fP &__rhs)"
.br
.ti -1c
.RI "template<class _UniformRandomNumberGenerator1 , int __p1, int __r1, typename _CharT , typename _Traits > \fBstd::basic_ostream\fP< _CharT, _Traits > & \fBoperator<<\fP (\fBstd::basic_ostream\fP< _CharT, _Traits > &__os, const \fBdiscard_block\fP< _UniformRandomNumberGenerator1, __p1, __r1 > &__x)"
.br
.ti -1c
.RI "bool \fBoperator==\fP (const \fBdiscard_block\fP &__lhs, const \fBdiscard_block\fP &__rhs)"
.br
.ti -1c
.RI "template<class _UniformRandomNumberGenerator1 , int __p1, int __r1, typename _CharT , typename _Traits > \fBstd::basic_istream\fP< _CharT, _Traits > & \fBoperator>>\fP (\fBstd::basic_istream\fP< _CharT, _Traits > &__is, \fBdiscard_block\fP< _UniformRandomNumberGenerator1, __p1, __r1 > &__x)"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<class _UniformRandomNumberGenerator, int __p, int __r> class std::discard_block< _UniformRandomNumberGenerator, __p, __r >"
Produces random numbers from some base engine by discarding blocks of data.
.PP
0 <= \fC__r\fP <= \fC__p\fP 
.PP
Definition at line 1078 of file tr1_impl/random.
.SH "Member Typedef Documentation"
.PP 
.SS "template<class _UniformRandomNumberGenerator, int __p, int __r> typedef _UniformRandomNumberGenerator \fBstd::discard_block\fP< _UniformRandomNumberGenerator, __p, __r >::\fBbase_type\fP"
.PP
The type of the underlying generator engine. 
.PP
Definition at line 1085 of file tr1_impl/random.
.SS "template<class _UniformRandomNumberGenerator, int __p, int __r> typedef base_type::result_type \fBstd::discard_block\fP< _UniformRandomNumberGenerator, __p, __r >::\fBresult_type\fP"
.PP
The type of the generated random value. 
.PP
Definition at line 1087 of file tr1_impl/random.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<class _UniformRandomNumberGenerator, int __p, int __r> \fBstd::discard_block\fP< _UniformRandomNumberGenerator, __p, __r >::\fBdiscard_block\fP ()\fC [inline]\fP"
.PP
Constructs a default discard_block engine.
.PP
The underlying engine is default constructed as well. 
.PP
Definition at line 1098 of file tr1_impl/random.
.SS "template<class _UniformRandomNumberGenerator, int __p, int __r> \fBstd::discard_block\fP< _UniformRandomNumberGenerator, __p, __r >::\fBdiscard_block\fP (const \fBbase_type\fP & __rng)\fC [inline, explicit]\fP"
.PP
Copy constructs a discard_block engine.
.PP
Copies an existing base class random number generator. 
.PP
\fBParameters:\fP
.RS 4
\fIrng\fP An existing (base class) engine object. 
.RE
.PP

.PP
Definition at line 1108 of file tr1_impl/random.
.SS "template<class _UniformRandomNumberGenerator, int __p, int __r> \fBstd::discard_block\fP< _UniformRandomNumberGenerator, __p, __r >::\fBdiscard_block\fP (unsigned long __s)\fC [inline, explicit]\fP"
.PP
Seed constructs a discard_block engine.
.PP
Constructs the underlying generator engine seeded with \fC__s\fP. 
.PP
\fBParameters:\fP
.RS 4
\fI__s\fP A seed value for the base class engine. 
.RE
.PP

.PP
Definition at line 1118 of file tr1_impl/random.
.SS "template<class _UniformRandomNumberGenerator, int __p, int __r> template<class _Gen > \fBstd::discard_block\fP< _UniformRandomNumberGenerator, __p, __r >::\fBdiscard_block\fP (_Gen & __g)\fC [inline]\fP"
.PP
Generator construct a discard_block engine.
.PP
\fBParameters:\fP
.RS 4
\fI__g\fP A seed generator function. 
.RE
.PP

.PP
Definition at line 1127 of file tr1_impl/random.
.SH "Member Function Documentation"
.PP 
.SS "template<class _UniformRandomNumberGenerator, int __p, int __r> const \fBbase_type\fP& \fBstd::discard_block\fP< _UniformRandomNumberGenerator, __p, __r >::base () const\fC [inline]\fP"
.PP
Gets a const reference to the underlying generator engine object. 
.PP
Definition at line 1156 of file tr1_impl/random.
.SS "template<class _UniformRandomNumberGenerator, int __p, int __r> \fBresult_type\fP \fBstd::discard_block\fP< _UniformRandomNumberGenerator, __p, __r >::max () const\fC [inline]\fP"
.PP
Gets the maximum value in the generated random number range. 
.PP
Definition at line 1170 of file tr1_impl/random.
.SS "template<class _UniformRandomNumberGenerator, int __p, int __r> \fBresult_type\fP \fBstd::discard_block\fP< _UniformRandomNumberGenerator, __p, __r >::min () const\fC [inline]\fP"
.PP
Gets the minimum value in the generated random number range. 
.PP
Definition at line 1163 of file tr1_impl/random.
.SS "template<class _UniformRandomNumberGenerator , int __p, int __r> \fBdiscard_block\fP< _UniformRandomNumberGenerator, __p, __r >::\fBresult_type\fP \fBstd::discard_block\fP< _UniformRandomNumberGenerator, __p, __r >::operator() ()\fC [inline]\fP"
.PP
Gets the next value in the generated random number sequence. 
.PP
Definition at line 583 of file random.tcc.
.SS "template<class _UniformRandomNumberGenerator, int __p, int __r> template<class _Gen > void \fBstd::discard_block\fP< _UniformRandomNumberGenerator, __p, __r >::seed (_Gen & __g)\fC [inline]\fP"
.PP
Reseeds the discard_block object with the given seed generator function. 
.PP
\fBParameters:\fP
.RS 4
\fI__g\fP A seed generator function. 
.RE
.PP

.PP
Definition at line 1146 of file tr1_impl/random.
.SS "template<class _UniformRandomNumberGenerator, int __p, int __r> void \fBstd::discard_block\fP< _UniformRandomNumberGenerator, __p, __r >::seed ()\fC [inline]\fP"
.PP
Reseeds the discard_block object with the default seed for the underlying base class generator engine. 
.PP
Definition at line 1134 of file tr1_impl/random.
.SH "Friends And Related Function Documentation"
.PP 
.SS "template<class _UniformRandomNumberGenerator, int __p, int __r> bool operator!= (const \fBdiscard_block\fP< _UniformRandomNumberGenerator, __p, __r > & __lhs, const \fBdiscard_block\fP< _UniformRandomNumberGenerator, __p, __r > & __rhs)\fC [friend]\fP"
.PP
Compares two discard_block random number generator objects of the same type for inequality.
.PP
\fBParameters:\fP
.RS 4
\fI__lhs\fP A discard_block random number generator object. 
.br
\fI__rhs\fP Another discard_block random number generator object.
.RE
.PP
\fBReturns:\fP
.RS 4
true if the two objects are not equal, false otherwise. 
.RE
.PP

.PP
Definition at line 1204 of file tr1_impl/random.
.SS "template<class _UniformRandomNumberGenerator, int __p, int __r> template<class _UniformRandomNumberGenerator1 , int __p1, int __r1, typename _CharT , typename _Traits > \fBstd::basic_ostream\fP<_CharT, _Traits>& operator<< (\fBstd::basic_ostream\fP< _CharT, _Traits > & __os, const \fBdiscard_block\fP< _UniformRandomNumberGenerator1, __p1, __r1 > & __x)\fC [friend]\fP"
.PP
Inserts the current state of a discard_block random number generator engine \fC__x\fP into the output stream \fC__os\fP.
.PP
\fBParameters:\fP
.RS 4
\fI__os\fP An output stream. 
.br
\fI__x\fP A discard_block random number generator engine.
.RE
.PP
\fBReturns:\fP
.RS 4
The output stream with the state of \fC__x\fP inserted or in an error state. 
.RE
.PP

.SS "template<class _UniformRandomNumberGenerator, int __p, int __r> bool operator== (const \fBdiscard_block\fP< _UniformRandomNumberGenerator, __p, __r > & __lhs, const \fBdiscard_block\fP< _UniformRandomNumberGenerator, __p, __r > & __rhs)\fC [friend]\fP"
.PP
Compares two discard_block random number generator objects of the same type for equality.
.PP
\fBParameters:\fP
.RS 4
\fI__lhs\fP A discard_block random number generator object. 
.br
\fI__rhs\fP Another discard_block random number generator object.
.RE
.PP
\fBReturns:\fP
.RS 4
true if the two objects are equal, false otherwise. 
.RE
.PP

.PP
Definition at line 1190 of file tr1_impl/random.
.SS "template<class _UniformRandomNumberGenerator, int __p, int __r> template<class _UniformRandomNumberGenerator1 , int __p1, int __r1, typename _CharT , typename _Traits > \fBstd::basic_istream\fP<_CharT, _Traits>& operator>> (\fBstd::basic_istream\fP< _CharT, _Traits > & __is, \fBdiscard_block\fP< _UniformRandomNumberGenerator1, __p1, __r1 > & __x)\fC [friend]\fP"
.PP
Extracts the current state of a % subtract_with_carry random number generator engine \fC__x\fP from the input stream \fC__is\fP.
.PP
\fBParameters:\fP
.RS 4
\fI__is\fP An input stream. 
.br
\fI__x\fP A discard_block random number generator engine.
.RE
.PP
\fBReturns:\fP
.RS 4
The input stream with the state of \fC__x\fP extracted or in an error state. 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for libstdc++ from the source code.
