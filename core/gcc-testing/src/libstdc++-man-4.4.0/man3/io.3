.TH "I/O" 3 "21 Apr 2009" "libstdc++" \" -*- nroff -*-
.ad l
.nh
.SH NAME
I/O \- 
.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBstd::basic_filebuf< _CharT, _Traits >\fP"
.br
.RI "\fIThe actual work of input and output (for files).
.PP
This class associates both its input and output sequence with an external disk file, and maintains a joint file position for both sequences. Many of its semantics are described in terms of similar behavior in the Standard C Library's \fCFILE\fP streams. \fP"
.ti -1c
.RI "class \fBstd::basic_fstream< _CharT, _Traits >\fP"
.br
.RI "\fIControlling input and output for files.
.PP
This class supports reading from and writing to named files, using the inherited functions from \fBstd::basic_iostream\fP. To control the associated sequence, an instance of \fBstd::basic_filebuf\fP is used, which this page refers to as \fCsb\fP. \fP"
.ti -1c
.RI "class \fBstd::basic_ifstream< _CharT, _Traits >\fP"
.br
.RI "\fIControlling input for files.
.PP
This class supports reading from named files, using the inherited functions from \fBstd::basic_istream\fP. To control the associated sequence, an instance of \fBstd::basic_filebuf\fP is used, which this page refers to as \fCsb\fP. \fP"
.ti -1c
.RI "class \fBstd::basic_ios< _CharT, _Traits >\fP"
.br
.RI "\fIVirtual base class for all stream classes.
.PP
Most of the member functions called dispatched on stream objects (e.g., \fCstd::cout.foo(bar)\fP;) are consolidated in this class. \fP"
.ti -1c
.RI "class \fBstd::basic_iostream< _CharT, _Traits >\fP"
.br
.RI "\fIMerging istream and ostream capabilities.
.PP
This class multiply inherits from the input and output stream classes simply to provide a single interface. \fP"
.ti -1c
.RI "class \fBstd::basic_istream< _CharT, _Traits >\fP"
.br
.RI "\fIControlling input.
.PP
This is the base class for all input streams. It provides text formatting of all builtin types, and communicates with any class derived from \fBbasic_streambuf\fP to do the actual input. \fP"
.ti -1c
.RI "class \fBstd::basic_istringstream< _CharT, _Traits, _Alloc >\fP"
.br
.RI "\fIControlling input for std::string.
.PP
This class supports reading from objects of type \fBstd::basic_string\fP, using the inherited functions from \fBstd::basic_istream\fP. To control the associated sequence, an instance of \fBstd::basic_stringbuf\fP is used, which this page refers to as \fCsb\fP. \fP"
.ti -1c
.RI "class \fBstd::basic_ofstream< _CharT, _Traits >\fP"
.br
.RI "\fIControlling output for files.
.PP
This class supports reading from named files, using the inherited functions from \fBstd::basic_ostream\fP. To control the associated sequence, an instance of \fBstd::basic_filebuf\fP is used, which this page refers to as \fCsb\fP. \fP"
.ti -1c
.RI "class \fBstd::basic_ostream< _CharT, _Traits >\fP"
.br
.RI "\fIControlling output.
.PP
This is the base class for all output streams. It provides text formatting of all builtin types, and communicates with any class derived from \fBbasic_streambuf\fP to do the actual output. \fP"
.ti -1c
.RI "class \fBstd::basic_ostringstream< _CharT, _Traits, _Alloc >\fP"
.br
.RI "\fIControlling output for std::string.
.PP
This class supports writing to objects of type \fBstd::basic_string\fP, using the inherited functions from \fBstd::basic_ostream\fP. To control the associated sequence, an instance of \fBstd::basic_stringbuf\fP is used, which this page refers to as \fCsb\fP. \fP"
.ti -1c
.RI "class \fBstd::basic_stringbuf< _CharT, _Traits, _Alloc >\fP"
.br
.RI "\fIThe actual work of input and output (for std::string).
.PP
This class associates either or both of its input and output sequences with a sequence of characters, which can be initialized from, or made available as, a \fC\fBstd::basic_string\fP\fP. (Paraphrased from [27.7.1]/1.). \fP"
.ti -1c
.RI "class \fBstd::basic_stringstream< _CharT, _Traits, _Alloc >\fP"
.br
.RI "\fIControlling input and output for std::string.
.PP
This class supports reading from and writing to objects of type \fBstd::basic_string\fP, using the inherited functions from \fBstd::basic_iostream\fP. To control the associated sequence, an instance of \fBstd::basic_stringbuf\fP is used, which this page refers to as \fCsb\fP. \fP"
.ti -1c
.RI "class \fBstd::ios_base\fP"
.br
.RI "\fIThe base of the I/O class hierarchy.
.PP
This class defines everything that can be defined about I/O that does not depend on the type of characters being input or output. Most people will only see \fC\fBios_base\fP\fP when they need to specify the full name of the various I/O flags (e.g., the openmodes). \fP"
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef basic_filebuf< char > \fBstd::filebuf\fP"
.br
.ti -1c
.RI "typedef basic_fstream< char > \fBstd::fstream\fP"
.br
.ti -1c
.RI "typedef basic_ifstream< char > \fBstd::ifstream\fP"
.br
.ti -1c
.RI "typedef basic_ios< char > \fBstd::ios\fP"
.br
.ti -1c
.RI "typedef basic_iostream< char > \fBstd::iostream\fP"
.br
.ti -1c
.RI "typedef basic_istream< char > \fBstd::istream\fP"
.br
.ti -1c
.RI "typedef basic_istringstream< char > \fBstd::istringstream\fP"
.br
.ti -1c
.RI "typedef basic_ofstream< char > \fBstd::ofstream\fP"
.br
.ti -1c
.RI "typedef basic_ostream< char > \fBstd::ostream\fP"
.br
.ti -1c
.RI "typedef basic_ostringstream< char > \fBstd::ostringstream\fP"
.br
.ti -1c
.RI "typedef basic_streambuf< char > \fBstd::streambuf\fP"
.br
.ti -1c
.RI "typedef basic_stringbuf< char > \fBstd::stringbuf\fP"
.br
.ti -1c
.RI "typedef basic_stringstream< char > \fBstd::stringstream\fP"
.br
.ti -1c
.RI "typedef basic_filebuf< wchar_t > \fBstd::wfilebuf\fP"
.br
.ti -1c
.RI "typedef basic_fstream< wchar_t > \fBstd::wfstream\fP"
.br
.ti -1c
.RI "typedef basic_ifstream< wchar_t > \fBstd::wifstream\fP"
.br
.ti -1c
.RI "typedef basic_ios< wchar_t > \fBstd::wios\fP"
.br
.ti -1c
.RI "typedef basic_iostream< wchar_t > \fBstd::wiostream\fP"
.br
.ti -1c
.RI "typedef basic_istream< wchar_t > \fBstd::wistream\fP"
.br
.ti -1c
.RI "typedef basic_istringstream< wchar_t > \fBstd::wistringstream\fP"
.br
.ti -1c
.RI "typedef basic_ofstream< wchar_t > \fBstd::wofstream\fP"
.br
.ti -1c
.RI "typedef basic_ostream< wchar_t > \fBstd::wostream\fP"
.br
.ti -1c
.RI "typedef basic_ostringstream< wchar_t > \fBstd::wostringstream\fP"
.br
.ti -1c
.RI "typedef basic_streambuf< wchar_t > \fBstd::wstreambuf\fP"
.br
.ti -1c
.RI "typedef basic_stringbuf< wchar_t > \fBstd::wstringbuf\fP"
.br
.ti -1c
.RI "typedef basic_stringstream< wchar_t > \fBstd::wstringstream\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
Nearly all of the I/O classes are parameterized on the type of characters they read and write. (The major \fBexception\fP is \fBios_base\fP at the top of the hierarchy.) This is a change from pre-Standard streams, which were not templates.
.PP
For ease of use and compatibility, all of the basic_* I/O-related classes are given typedef names for both of the builtin character widths (wide and narrow). The typedefs are the same as the pre-Standard names, for example:
.PP
.PP
.nf
     typedef basic_ifstream<char>  ifstream;
.fi
.PP
.PP
Because properly forward-declaring these classes can be difficult, you should not do it yourself. Instead, include the <iosfwd> header, which contains only declarations of all the I/O classes as well as the typedefs. Trying to forward-declare the typedefs themselves (e.g., 'class ostream;') is not valid ISO C++.
.PP
For more specific declarations, see http://gcc.gnu.org/onlinedocs/libstdc++/manual/bk01pt11ch24.html 
.SH "Typedef Documentation"
.PP 
.SS "typedef basic_filebuf<char> \fBstd::filebuf\fP"
.PP
One of the \fBI/O \fP. 
.PP
Definition at line 136 of file iosfwd.
.SS "typedef basic_fstream<char> \fBstd::fstream\fP"
.PP
One of the \fBI/O \fP. 
.PP
Definition at line 139 of file iosfwd.
.SS "typedef basic_ifstream<char> \fBstd::ifstream\fP"
.PP
One of the \fBI/O \fP. 
.PP
Definition at line 137 of file iosfwd.
.SS "typedef basic_ios<char> \fBstd::ios\fP"
.PP
One of the \fBI/O \fP. 
.PP
Definition at line 127 of file iosfwd.
.SS "typedef basic_iostream<char> \fBstd::iostream\fP"
.PP
One of the \fBI/O \fP. 
.PP
Definition at line 131 of file iosfwd.
.SS "typedef basic_istream<char> \fBstd::istream\fP"
.PP
One of the \fBI/O \fP. 
.PP
Definition at line 129 of file iosfwd.
.SS "typedef basic_istringstream<char> \fBstd::istringstream\fP"
.PP
One of the \fBI/O \fP. 
.PP
Definition at line 133 of file iosfwd.
.SS "typedef basic_ofstream<char> \fBstd::ofstream\fP"
.PP
One of the \fBI/O \fP. 
.PP
Definition at line 138 of file iosfwd.
.SS "typedef basic_ostream<char> \fBstd::ostream\fP"
.PP
One of the \fBI/O \fP. 
.PP
Definition at line 130 of file iosfwd.
.SS "typedef basic_ostringstream<char> \fBstd::ostringstream\fP"
.PP
One of the \fBI/O \fP. 
.PP
Definition at line 134 of file iosfwd.
.SS "typedef basic_streambuf<char> \fBstd::streambuf\fP"
.PP
One of the \fBI/O \fP. 
.PP
Definition at line 128 of file iosfwd.
.SS "typedef basic_stringbuf<char> \fBstd::stringbuf\fP"
.PP
One of the \fBI/O \fP. 
.PP
Definition at line 132 of file iosfwd.
.SS "typedef basic_stringstream<char> \fBstd::stringstream\fP"
.PP
One of the \fBI/O \fP. 
.PP
Definition at line 135 of file iosfwd.
.SS "typedef basic_filebuf<wchar_t> \fBstd::wfilebuf\fP"
.PP
One of the \fBI/O \fP. 
.PP
Definition at line 151 of file iosfwd.
.SS "typedef basic_fstream<wchar_t> \fBstd::wfstream\fP"
.PP
One of the \fBI/O \fP. 
.PP
Definition at line 154 of file iosfwd.
.SS "typedef basic_ifstream<wchar_t> \fBstd::wifstream\fP"
.PP
One of the \fBI/O \fP. 
.PP
Definition at line 152 of file iosfwd.
.SS "typedef basic_ios<wchar_t> \fBstd::wios\fP"
.PP
One of the \fBI/O \fP. 
.PP
Definition at line 142 of file iosfwd.
.SS "typedef basic_iostream<wchar_t> \fBstd::wiostream\fP"
.PP
One of the \fBI/O \fP. 
.PP
Definition at line 146 of file iosfwd.
.SS "typedef basic_istream<wchar_t> \fBstd::wistream\fP"
.PP
One of the \fBI/O \fP. 
.PP
Definition at line 144 of file iosfwd.
.SS "typedef basic_istringstream<wchar_t> \fBstd::wistringstream\fP"
.PP
One of the \fBI/O \fP. 
.PP
Definition at line 148 of file iosfwd.
.SS "typedef basic_ofstream<wchar_t> \fBstd::wofstream\fP"
.PP
One of the \fBI/O \fP. 
.PP
Definition at line 153 of file iosfwd.
.SS "typedef basic_ostream<wchar_t> \fBstd::wostream\fP"
.PP
One of the \fBI/O \fP. 
.PP
Definition at line 145 of file iosfwd.
.SS "typedef basic_ostringstream<wchar_t> \fBstd::wostringstream\fP"
.PP
One of the \fBI/O \fP. 
.PP
Definition at line 149 of file iosfwd.
.SS "typedef basic_streambuf<wchar_t> \fBstd::wstreambuf\fP"
.PP
One of the \fBI/O \fP. 
.PP
Definition at line 143 of file iosfwd.
.SS "typedef basic_stringbuf<wchar_t> \fBstd::wstringbuf\fP"
.PP
One of the \fBI/O \fP. 
.PP
Definition at line 147 of file iosfwd.
.SS "typedef basic_stringstream<wchar_t> \fBstd::wstringstream\fP"
.PP
One of the \fBI/O \fP. 
.PP
Definition at line 150 of file iosfwd.
.SH "Author"
.PP 
Generated automatically by Doxygen for libstdc++ from the source code.
