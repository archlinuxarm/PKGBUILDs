.TH "std::num_put" 3 "21 Apr 2009" "libstdc++" \" -*- nroff -*-
.ad l
.nh
.SH NAME
std::num_put \- Facet for converting numbers to strings.  

.PP
.SH SYNOPSIS
.br
.PP
Inherits \fBstd::locale::facet\fP.
.PP
.SS "Public Types"

.PP
.RI "\fB\fP"
.br

.in +1c
.in +1c
.ti -1c
.RI "typedef _CharT \fBchar_type\fP"
.br
.ti -1c
.RI "typedef _OutIter \fBiter_type\fP"
.br
.in -1c
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBnum_put\fP (size_t __refs=0)"
.br
.ti -1c
.RI "\fBiter_type\fP \fBput\fP (\fBiter_type\fP __s, \fBios_base\fP &__f, \fBchar_type\fP __fill, const void *__v) const "
.br
.ti -1c
.RI "\fBiter_type\fP \fBput\fP (\fBiter_type\fP __s, \fBios_base\fP &__f, \fBchar_type\fP __fill, bool __v) const "
.br
.in -1c
.PP
.RI "\fB\fP"
.br

.in +1c
.in +1c
.ti -1c
.RI "\fBiter_type\fP \fBput\fP (\fBiter_type\fP __s, \fBios_base\fP &__f, \fBchar_type\fP __fill, long double __v) const "
.br
.ti -1c
.RI "\fBiter_type\fP \fBput\fP (\fBiter_type\fP __s, \fBios_base\fP &__f, \fBchar_type\fP __fill, double __v) const "
.br
.in -1c
.in -1c
.PP
.RI "\fB\fP"
.br

.in +1c
.in +1c
.ti -1c
.RI "\fBiter_type\fP \fBput\fP (\fBiter_type\fP __s, \fBios_base\fP &__f, \fBchar_type\fP __fill, unsigned long long __v) const "
.br
.ti -1c
.RI "\fBiter_type\fP \fBput\fP (\fBiter_type\fP __s, \fBios_base\fP &__f, \fBchar_type\fP __fill, long long __v) const "
.br
.ti -1c
.RI "\fBiter_type\fP \fBput\fP (\fBiter_type\fP __s, \fBios_base\fP &__f, \fBchar_type\fP __fill, unsigned long __v) const "
.br
.ti -1c
.RI "\fBiter_type\fP \fBput\fP (\fBiter_type\fP __s, \fBios_base\fP &__f, \fBchar_type\fP __fill, long __v) const "
.br
.in -1c
.in -1c
.SS "Static Public Attributes"

.in +1c
.ti -1c
.RI "static \fBlocale::id\fP \fBid\fP"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "void \fB_M_group_float\fP (const char *__grouping, size_t __grouping_size, \fBchar_type\fP __sep, const \fBchar_type\fP *__p, \fBchar_type\fP *__new, \fBchar_type\fP *__cs, int &__len) const "
.br
.ti -1c
.RI "void \fB_M_group_int\fP (const char *__grouping, size_t __grouping_size, \fBchar_type\fP __sep, \fBios_base\fP &__io, \fBchar_type\fP *__new, \fBchar_type\fP *__cs, int &__len) const "
.br
.ti -1c
.RI "template<typename _ValueT > \fBiter_type\fP \fB_M_insert_float\fP (\fBiter_type\fP, \fBios_base\fP &__io, \fBchar_type\fP __fill, char __mod, _ValueT __v) const "
.br
.ti -1c
.RI "template<typename _ValueT > \fBiter_type\fP \fB_M_insert_int\fP (\fBiter_type\fP, \fBios_base\fP &__io, \fBchar_type\fP __fill, _ValueT __v) const "
.br
.ti -1c
.RI "void \fB_M_pad\fP (\fBchar_type\fP __fill, \fBstreamsize\fP __w, \fBios_base\fP &__io, \fBchar_type\fP *__new, const \fBchar_type\fP *__cs, int &__len) const "
.br
.ti -1c
.RI "virtual \fB~num_put\fP ()"
.br
.in -1c
.PP
.RI "\fB\fP"
.br

.in +1c
.in +1c
.ti -1c
.RI "virtual \fBiter_type\fP \fBdo_put\fP (\fBiter_type\fP, \fBios_base\fP &, \fBchar_type\fP __fill, const void *__v) const "
.br
.ti -1c
.RI "virtual \fBiter_type\fP \fBdo_put\fP (\fBiter_type\fP, \fBios_base\fP &, \fBchar_type\fP __fill, long double __v) const "
.br
.ti -1c
.RI "virtual \fBiter_type\fP \fBdo_put\fP (\fBiter_type\fP, \fBios_base\fP &, \fBchar_type\fP __fill, double __v) const "
.br
.ti -1c
.RI "virtual \fBiter_type\fP \fBdo_put\fP (\fBiter_type\fP __s, \fBios_base\fP &__io, \fBchar_type\fP __fill, unsigned long long __v) const "
.br
.ti -1c
.RI "virtual \fBiter_type\fP \fBdo_put\fP (\fBiter_type\fP __s, \fBios_base\fP &__io, \fBchar_type\fP __fill, long long __v) const "
.br
.ti -1c
.RI "virtual \fBiter_type\fP \fBdo_put\fP (\fBiter_type\fP __s, \fBios_base\fP &__io, \fBchar_type\fP __fill, unsigned long __v) const "
.br
.ti -1c
.RI "virtual \fBiter_type\fP \fBdo_put\fP (\fBiter_type\fP __s, \fBios_base\fP &__io, \fBchar_type\fP __fill, long __v) const "
.br
.ti -1c
.RI "virtual \fBiter_type\fP \fBdo_put\fP (\fBiter_type\fP, \fBios_base\fP &, \fBchar_type\fP __fill, bool __v) const "
.br
.in -1c
.in -1c
.SS "Static Protected Member Functions"

.in +1c
.ti -1c
.RI "static __c_locale \fB_S_clone_c_locale\fP (__c_locale &__cloc)"
.br
.ti -1c
.RI "static void \fB_S_create_c_locale\fP (__c_locale &__cloc, const char *__s, __c_locale __old=0)"
.br
.ti -1c
.RI "static void \fB_S_destroy_c_locale\fP (__c_locale &__cloc)"
.br
.ti -1c
.RI "static __c_locale \fB_S_get_c_locale\fP ()"
.br
.ti -1c
.RI "static const char * \fB_S_get_c_name\fP ()"
.br
.in -1c
.SS "Friends"

.in +1c
.ti -1c
.RI "class \fBlocale::_Impl\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<typename _CharT, typename _OutIter> class std::num_put< _CharT, _OutIter >"
Facet for converting numbers to strings. 

This facet encapsulates the code to convert a number to a string. It is used by the ostream numeric insertion operators.
.PP
The \fBnum_put\fP template uses protected virtual functions to provide the actual results. The public accessors forward the call to the virtual functions. These virtual functions are hooks for developers to implement the behavior they require from the \fBnum_put\fP facet. 
.PP
Definition at line 2245 of file locale_facets.h.
.SH "Member Typedef Documentation"
.PP 
.SS "template<typename _CharT , typename _OutIter > typedef _CharT \fBstd::num_put\fP< _CharT, _OutIter >::\fBchar_type\fP"
.PP
Public typedefs. 
.PP
Definition at line 2251 of file locale_facets.h.
.SS "template<typename _CharT , typename _OutIter > typedef _OutIter \fBstd::num_put\fP< _CharT, _OutIter >::\fBiter_type\fP"
.PP
Public typedefs. 
.PP
Definition at line 2252 of file locale_facets.h.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<typename _CharT , typename _OutIter > \fBstd::num_put\fP< _CharT, _OutIter >::\fBnum_put\fP (size_t __refs = \fC0\fP)\fC [inline, explicit]\fP"
.PP
Constructor performs initialization. 
.PP
This is the constructor provided by the standard.
.PP
\fBParameters:\fP
.RS 4
\fIrefs\fP Passed to the base facet class. 
.RE
.PP

.PP
Definition at line 2266 of file locale_facets.h.
.SS "template<typename _CharT , typename _OutIter > virtual \fBstd::num_put\fP< _CharT, _OutIter >::~\fBnum_put\fP ()\fC [inline, protected, virtual]\fP"
.PP
Destructor. 
.PP
Definition at line 2445 of file locale_facets.h.
.SH "Member Function Documentation"
.PP 
.SS "template<typename _CharT , typename _OutIter > _OutIter \fBstd::num_put\fP< _CharT, _OutIter >::do_put (\fBiter_type\fP __s, \fBios_base\fP & __io, \fBchar_type\fP __fill, const void * __v) const\fC [inline, protected, virtual]\fP"
.PP
Numeric formatting. 
.PP
These functions do the work of formatting numeric values and inserting them into a stream. This function is a hook for derived classes to change the value returned.
.PP
\fBParameters:\fP
.RS 4
\fIs\fP Stream to write to. 
.br
\fIio\fP Source of \fBlocale\fP and flags. 
.br
\fIfill\fP Char_type to use for filling. 
.br
\fIv\fP Value to format and insert. 
.RE
.PP
\fBReturns:\fP
.RS 4
Iterator after writing. 
.RE
.PP

.PP
Definition at line 1146 of file locale_facets.tcc.
.PP
References std::ios_base::flags(), std::ios_base::hex, and std::ios_base::uppercase.
.SS "template<typename _CharT , typename _OutIter > _OutIter \fBstd::num_put\fP< _CharT, _OutIter >::do_put (\fBiter_type\fP __s, \fBios_base\fP & __io, \fBchar_type\fP __fill, long double __v) const\fC [inline, protected, virtual]\fP"
.PP
Numeric formatting. 
.PP
These functions do the work of formatting numeric values and inserting them into a stream. This function is a hook for derived classes to change the value returned.
.PP
\fBParameters:\fP
.RS 4
\fIs\fP Stream to write to. 
.br
\fIio\fP Source of \fBlocale\fP and flags. 
.br
\fIfill\fP Char_type to use for filling. 
.br
\fIv\fP Value to format and insert. 
.RE
.PP
\fBReturns:\fP
.RS 4
Iterator after writing. 
.RE
.PP

.PP
Definition at line 1139 of file locale_facets.tcc.
.SS "template<typename _CharT , typename _OutIter > _OutIter \fBstd::num_put\fP< _CharT, _OutIter >::do_put (\fBiter_type\fP __s, \fBios_base\fP & __io, \fBchar_type\fP __fill, double __v) const\fC [inline, protected, virtual]\fP"
.PP
Numeric formatting. 
.PP
These functions do the work of formatting numeric values and inserting them into a stream. This function is a hook for derived classes to change the value returned.
.PP
\fBParameters:\fP
.RS 4
\fIs\fP Stream to write to. 
.br
\fIio\fP Source of \fBlocale\fP and flags. 
.br
\fIfill\fP Char_type to use for filling. 
.br
\fIv\fP Value to format and insert. 
.RE
.PP
\fBReturns:\fP
.RS 4
Iterator after writing. 
.RE
.PP

.PP
Definition at line 1125 of file locale_facets.tcc.
.SS "template<typename _CharT , typename _OutIter > virtual \fBiter_type\fP \fBstd::num_put\fP< _CharT, _OutIter >::do_put (\fBiter_type\fP __s, \fBios_base\fP & __io, \fBchar_type\fP __fill, unsigned long long __v) const\fC [inline, protected, virtual]\fP"
.PP
Numeric formatting. 
.PP
These functions do the work of formatting numeric values and inserting them into a stream. This function is a hook for derived classes to change the value returned.
.PP
\fBParameters:\fP
.RS 4
\fIs\fP Stream to write to. 
.br
\fIio\fP Source of \fBlocale\fP and flags. 
.br
\fIfill\fP Char_type to use for filling. 
.br
\fIv\fP Value to format and insert. 
.RE
.PP
\fBReturns:\fP
.RS 4
Iterator after writing. 
.RE
.PP

.PP
Definition at line 2480 of file locale_facets.h.
.SS "template<typename _CharT , typename _OutIter > virtual \fBiter_type\fP \fBstd::num_put\fP< _CharT, _OutIter >::do_put (\fBiter_type\fP __s, \fBios_base\fP & __io, \fBchar_type\fP __fill, long long __v) const\fC [inline, protected, virtual]\fP"
.PP
Numeric formatting. 
.PP
These functions do the work of formatting numeric values and inserting them into a stream. This function is a hook for derived classes to change the value returned.
.PP
\fBParameters:\fP
.RS 4
\fIs\fP Stream to write to. 
.br
\fIio\fP Source of \fBlocale\fP and flags. 
.br
\fIfill\fP Char_type to use for filling. 
.br
\fIv\fP Value to format and insert. 
.RE
.PP
\fBReturns:\fP
.RS 4
Iterator after writing. 
.RE
.PP

.PP
Definition at line 2475 of file locale_facets.h.
.SS "template<typename _CharT , typename _OutIter > virtual \fBiter_type\fP \fBstd::num_put\fP< _CharT, _OutIter >::do_put (\fBiter_type\fP __s, \fBios_base\fP & __io, \fBchar_type\fP __fill, unsigned long __v) const\fC [inline, protected, virtual]\fP"
.PP
Numeric formatting. 
.PP
These functions do the work of formatting numeric values and inserting them into a stream. This function is a hook for derived classes to change the value returned.
.PP
\fBParameters:\fP
.RS 4
\fIs\fP Stream to write to. 
.br
\fIio\fP Source of \fBlocale\fP and flags. 
.br
\fIfill\fP Char_type to use for filling. 
.br
\fIv\fP Value to format and insert. 
.RE
.PP
\fBReturns:\fP
.RS 4
Iterator after writing. 
.RE
.PP

.PP
Definition at line 2469 of file locale_facets.h.
.SS "template<typename _CharT , typename _OutIter > virtual \fBiter_type\fP \fBstd::num_put\fP< _CharT, _OutIter >::do_put (\fBiter_type\fP __s, \fBios_base\fP & __io, \fBchar_type\fP __fill, long __v) const\fC [inline, protected, virtual]\fP"
.PP
Numeric formatting. 
.PP
These functions do the work of formatting numeric values and inserting them into a stream. This function is a hook for derived classes to change the value returned.
.PP
\fBParameters:\fP
.RS 4
\fIs\fP Stream to write to. 
.br
\fIio\fP Source of \fBlocale\fP and flags. 
.br
\fIfill\fP Char_type to use for filling. 
.br
\fIv\fP Value to format and insert. 
.RE
.PP
\fBReturns:\fP
.RS 4
Iterator after writing. 
.RE
.PP

.PP
Definition at line 2465 of file locale_facets.h.
.SS "template<typename _CharT , typename _OutIter > _OutIter \fBstd::num_put\fP< _CharT, _OutIter >::do_put (\fBiter_type\fP __s, \fBios_base\fP & __io, \fBchar_type\fP __fill, bool __v) const\fC [inline, protected, virtual]\fP"
.PP
Numeric formatting. 
.PP
These functions do the work of formatting numeric values and inserting them into a stream. This function is a hook for derived classes to change the value returned.
.PP
\fBParameters:\fP
.RS 4
\fIs\fP Stream to write to. 
.br
\fIio\fP Source of \fBlocale\fP and flags. 
.br
\fIfill\fP Char_type to use for filling. 
.br
\fIv\fP Value to format and insert. 
.RE
.PP
\fBReturns:\fP
.RS 4
Iterator after writing. 
.RE
.PP

.PP
Definition at line 1073 of file locale_facets.tcc.
.PP
References std::ios_base::_M_getloc(), std::ios_base::adjustfield, std::ios_base::boolalpha, std::ios_base::flags(), std::ios_base::left, and std::ios_base::width().
.PP
Referenced by std::num_put< _CharT, _OutIter >::put().
.SS "template<typename _CharT , typename _OutIter > \fBiter_type\fP \fBstd::num_put\fP< _CharT, _OutIter >::put (\fBiter_type\fP __s, \fBios_base\fP & __f, \fBchar_type\fP __fill, const void * __v) const\fC [inline]\fP"
.PP
Numeric formatting. 
.PP
Formats the pointer value \fIv\fP and inserts it into a stream. It does so by calling \fBnum_put::do_put()\fP.
.PP
This function formats \fIv\fP as an unsigned long with \fBios_base::hex\fP and \fBios_base::showbase\fP \fBset\fP.
.PP
\fBParameters:\fP
.RS 4
\fIs\fP Stream to write to. 
.br
\fIio\fP Source of \fBlocale\fP and flags. 
.br
\fIfill\fP Char_type to use for filling. 
.br
\fIv\fP Value to format and insert. 
.RE
.PP
\fBReturns:\fP
.RS 4
Iterator after writing. 
.RE
.PP

.PP
Definition at line 2414 of file locale_facets.h.
.PP
References std::num_put< _CharT, _OutIter >::do_put().
.SS "template<typename _CharT , typename _OutIter > \fBiter_type\fP \fBstd::num_put\fP< _CharT, _OutIter >::put (\fBiter_type\fP __s, \fBios_base\fP & __f, \fBchar_type\fP __fill, long double __v) const\fC [inline]\fP"
.PP
Numeric formatting. 
.PP
Formats the floating point value \fIv\fP and inserts it into a stream. It does so by calling \fBnum_put::do_put()\fP.
.PP
Formatting is affected by the flag settings in \fIio\fP.
.PP
The basic format is affected by the value of io.flags() & \fBios_base::floatfield\fP. If equal to \fBios_base::fixed\fP, formats like the printf f specifier. Else if equal to \fBios_base::scientific\fP, formats like e or E with \fBios_base::uppercase\fP unset or \fBset\fP respectively. Otherwise, formats like g or G depending on uppercase. Note that if both fixed and scientific are \fBset\fP, the effect will also be like g or G.
.PP
The output precision is given by io.precision(). This precision is capped at \fBnumeric_limits::digits10\fP + 2 (different for double and long double). The default precision is 6.
.PP
If \fBios_base::showpos\fP is \fBset\fP, '+' is output before positive values. If \fBios_base::showpoint\fP is \fBset\fP, a decimal point will always be output.
.PP
Thousands separators are inserted according to \fBnumpunct::grouping()\fP and \fBnumpunct::thousands_sep()\fP. The decimal point character used is \fBnumpunct::decimal_point()\fP.
.PP
If io.width() is non-zero, enough \fIfill\fP characters are inserted to make the result at least that wide. If (io.flags() & \fBios_base::adjustfield\fP) == \fBios_base::left\fP, result is padded at the end. If \fBios_base::internal\fP, then padding occurs immediately after either a '+' or '-' or after '0x' or '0X'. Otherwise, padding occurs at the beginning.
.PP
\fBParameters:\fP
.RS 4
\fIs\fP Stream to write to. 
.br
\fIio\fP Source of \fBlocale\fP and flags. 
.br
\fIfill\fP Char_type to use for filling. 
.br
\fIv\fP Value to format and insert. 
.RE
.PP
\fBReturns:\fP
.RS 4
Iterator after writing. 
.RE
.PP

.PP
Definition at line 2393 of file locale_facets.h.
.PP
References std::num_put< _CharT, _OutIter >::do_put().
.SS "template<typename _CharT , typename _OutIter > \fBiter_type\fP \fBstd::num_put\fP< _CharT, _OutIter >::put (\fBiter_type\fP __s, \fBios_base\fP & __f, \fBchar_type\fP __fill, double __v) const\fC [inline]\fP"
.PP
Numeric formatting. 
.PP
Formats the floating point value \fIv\fP and inserts it into a stream. It does so by calling \fBnum_put::do_put()\fP.
.PP
Formatting is affected by the flag settings in \fIio\fP.
.PP
The basic format is affected by the value of io.flags() & \fBios_base::floatfield\fP. If equal to \fBios_base::fixed\fP, formats like the printf f specifier. Else if equal to \fBios_base::scientific\fP, formats like e or E with \fBios_base::uppercase\fP unset or \fBset\fP respectively. Otherwise, formats like g or G depending on uppercase. Note that if both fixed and scientific are \fBset\fP, the effect will also be like g or G.
.PP
The output precision is given by io.precision(). This precision is capped at \fBnumeric_limits::digits10\fP + 2 (different for double and long double). The default precision is 6.
.PP
If \fBios_base::showpos\fP is \fBset\fP, '+' is output before positive values. If \fBios_base::showpoint\fP is \fBset\fP, a decimal point will always be output.
.PP
Thousands separators are inserted according to \fBnumpunct::grouping()\fP and \fBnumpunct::thousands_sep()\fP. The decimal point character used is \fBnumpunct::decimal_point()\fP.
.PP
If io.width() is non-zero, enough \fIfill\fP characters are inserted to make the result at least that wide. If (io.flags() & \fBios_base::adjustfield\fP) == \fBios_base::left\fP, result is padded at the end. If \fBios_base::internal\fP, then padding occurs immediately after either a '+' or '-' or after '0x' or '0X'. Otherwise, padding occurs at the beginning.
.PP
\fBParameters:\fP
.RS 4
\fIs\fP Stream to write to. 
.br
\fIio\fP Source of \fBlocale\fP and flags. 
.br
\fIfill\fP Char_type to use for filling. 
.br
\fIv\fP Value to format and insert. 
.RE
.PP
\fBReturns:\fP
.RS 4
Iterator after writing. 
.RE
.PP

.PP
Definition at line 2389 of file locale_facets.h.
.PP
References std::num_put< _CharT, _OutIter >::do_put().
.SS "template<typename _CharT , typename _OutIter > \fBiter_type\fP \fBstd::num_put\fP< _CharT, _OutIter >::put (\fBiter_type\fP __s, \fBios_base\fP & __f, \fBchar_type\fP __fill, unsigned long long __v) const\fC [inline]\fP"
.PP
Numeric formatting. 
.PP
Formats the integral value \fIv\fP and inserts it into a stream. It does so by calling \fBnum_put::do_put()\fP.
.PP
Formatting is affected by the flag settings in \fIio\fP.
.PP
The basic format is affected by the value of io.flags() & \fBios_base::basefield\fP. If equal to \fBios_base::oct\fP, formats like the printf o specifier. Else if equal to \fBios_base::hex\fP, formats like x or X with \fBios_base::uppercase\fP unset or \fBset\fP respectively. Otherwise, formats like d, ld, lld for signed and u, lu, llu for unsigned values. Note that if both oct and hex are \fBset\fP, neither will take effect.
.PP
If \fBios_base::showpos\fP is \fBset\fP, '+' is output before positive values. If \fBios_base::showbase\fP is \fBset\fP, '0' precedes octal values (except 0) and '0[xX]' precedes hex values.
.PP
Thousands separators are inserted according to \fBnumpunct::grouping()\fP and \fBnumpunct::thousands_sep()\fP. The decimal point character used is \fBnumpunct::decimal_point()\fP.
.PP
If io.width() is non-zero, enough \fIfill\fP characters are inserted to make the result at least that wide. If (io.flags() & \fBios_base::adjustfield\fP) == \fBios_base::left\fP, result is padded at the end. If \fBios_base::internal\fP, then padding occurs immediately after either a '+' or '-' or after '0x' or '0X'. Otherwise, padding occurs at the beginning.
.PP
\fBParameters:\fP
.RS 4
\fIs\fP Stream to write to. 
.br
\fIio\fP Source of \fBlocale\fP and flags. 
.br
\fIfill\fP Char_type to use for filling. 
.br
\fIv\fP Value to format and insert. 
.RE
.PP
\fBReturns:\fP
.RS 4
Iterator after writing. 
.RE
.PP

.PP
Definition at line 2340 of file locale_facets.h.
.PP
References std::num_put< _CharT, _OutIter >::do_put().
.SS "template<typename _CharT , typename _OutIter > \fBiter_type\fP \fBstd::num_put\fP< _CharT, _OutIter >::put (\fBiter_type\fP __s, \fBios_base\fP & __f, \fBchar_type\fP __fill, long long __v) const\fC [inline]\fP"
.PP
Numeric formatting. 
.PP
Formats the integral value \fIv\fP and inserts it into a stream. It does so by calling \fBnum_put::do_put()\fP.
.PP
Formatting is affected by the flag settings in \fIio\fP.
.PP
The basic format is affected by the value of io.flags() & \fBios_base::basefield\fP. If equal to \fBios_base::oct\fP, formats like the printf o specifier. Else if equal to \fBios_base::hex\fP, formats like x or X with \fBios_base::uppercase\fP unset or \fBset\fP respectively. Otherwise, formats like d, ld, lld for signed and u, lu, llu for unsigned values. Note that if both oct and hex are \fBset\fP, neither will take effect.
.PP
If \fBios_base::showpos\fP is \fBset\fP, '+' is output before positive values. If \fBios_base::showbase\fP is \fBset\fP, '0' precedes octal values (except 0) and '0[xX]' precedes hex values.
.PP
Thousands separators are inserted according to \fBnumpunct::grouping()\fP and \fBnumpunct::thousands_sep()\fP. The decimal point character used is \fBnumpunct::decimal_point()\fP.
.PP
If io.width() is non-zero, enough \fIfill\fP characters are inserted to make the result at least that wide. If (io.flags() & \fBios_base::adjustfield\fP) == \fBios_base::left\fP, result is padded at the end. If \fBios_base::internal\fP, then padding occurs immediately after either a '+' or '-' or after '0x' or '0X'. Otherwise, padding occurs at the beginning.
.PP
\fBParameters:\fP
.RS 4
\fIs\fP Stream to write to. 
.br
\fIio\fP Source of \fBlocale\fP and flags. 
.br
\fIfill\fP Char_type to use for filling. 
.br
\fIv\fP Value to format and insert. 
.RE
.PP
\fBReturns:\fP
.RS 4
Iterator after writing. 
.RE
.PP

.PP
Definition at line 2336 of file locale_facets.h.
.PP
References std::num_put< _CharT, _OutIter >::do_put().
.SS "template<typename _CharT , typename _OutIter > \fBiter_type\fP \fBstd::num_put\fP< _CharT, _OutIter >::put (\fBiter_type\fP __s, \fBios_base\fP & __f, \fBchar_type\fP __fill, unsigned long __v) const\fC [inline]\fP"
.PP
Numeric formatting. 
.PP
Formats the integral value \fIv\fP and inserts it into a stream. It does so by calling \fBnum_put::do_put()\fP.
.PP
Formatting is affected by the flag settings in \fIio\fP.
.PP
The basic format is affected by the value of io.flags() & \fBios_base::basefield\fP. If equal to \fBios_base::oct\fP, formats like the printf o specifier. Else if equal to \fBios_base::hex\fP, formats like x or X with \fBios_base::uppercase\fP unset or \fBset\fP respectively. Otherwise, formats like d, ld, lld for signed and u, lu, llu for unsigned values. Note that if both oct and hex are \fBset\fP, neither will take effect.
.PP
If \fBios_base::showpos\fP is \fBset\fP, '+' is output before positive values. If \fBios_base::showbase\fP is \fBset\fP, '0' precedes octal values (except 0) and '0[xX]' precedes hex values.
.PP
Thousands separators are inserted according to \fBnumpunct::grouping()\fP and \fBnumpunct::thousands_sep()\fP. The decimal point character used is \fBnumpunct::decimal_point()\fP.
.PP
If io.width() is non-zero, enough \fIfill\fP characters are inserted to make the result at least that wide. If (io.flags() & \fBios_base::adjustfield\fP) == \fBios_base::left\fP, result is padded at the end. If \fBios_base::internal\fP, then padding occurs immediately after either a '+' or '-' or after '0x' or '0X'. Otherwise, padding occurs at the beginning.
.PP
\fBParameters:\fP
.RS 4
\fIs\fP Stream to write to. 
.br
\fIio\fP Source of \fBlocale\fP and flags. 
.br
\fIfill\fP Char_type to use for filling. 
.br
\fIv\fP Value to format and insert. 
.RE
.PP
\fBReturns:\fP
.RS 4
Iterator after writing. 
.RE
.PP

.PP
Definition at line 2330 of file locale_facets.h.
.PP
References std::num_put< _CharT, _OutIter >::do_put().
.SS "template<typename _CharT , typename _OutIter > \fBiter_type\fP \fBstd::num_put\fP< _CharT, _OutIter >::put (\fBiter_type\fP __s, \fBios_base\fP & __f, \fBchar_type\fP __fill, long __v) const\fC [inline]\fP"
.PP
Numeric formatting. 
.PP
Formats the integral value \fIv\fP and inserts it into a stream. It does so by calling \fBnum_put::do_put()\fP.
.PP
Formatting is affected by the flag settings in \fIio\fP.
.PP
The basic format is affected by the value of io.flags() & \fBios_base::basefield\fP. If equal to \fBios_base::oct\fP, formats like the printf o specifier. Else if equal to \fBios_base::hex\fP, formats like x or X with \fBios_base::uppercase\fP unset or \fBset\fP respectively. Otherwise, formats like d, ld, lld for signed and u, lu, llu for unsigned values. Note that if both oct and hex are \fBset\fP, neither will take effect.
.PP
If \fBios_base::showpos\fP is \fBset\fP, '+' is output before positive values. If \fBios_base::showbase\fP is \fBset\fP, '0' precedes octal values (except 0) and '0[xX]' precedes hex values.
.PP
Thousands separators are inserted according to \fBnumpunct::grouping()\fP and \fBnumpunct::thousands_sep()\fP. The decimal point character used is \fBnumpunct::decimal_point()\fP.
.PP
If io.width() is non-zero, enough \fIfill\fP characters are inserted to make the result at least that wide. If (io.flags() & \fBios_base::adjustfield\fP) == \fBios_base::left\fP, result is padded at the end. If \fBios_base::internal\fP, then padding occurs immediately after either a '+' or '-' or after '0x' or '0X'. Otherwise, padding occurs at the beginning.
.PP
\fBParameters:\fP
.RS 4
\fIs\fP Stream to write to. 
.br
\fIio\fP Source of \fBlocale\fP and flags. 
.br
\fIfill\fP Char_type to use for filling. 
.br
\fIv\fP Value to format and insert. 
.RE
.PP
\fBReturns:\fP
.RS 4
Iterator after writing. 
.RE
.PP

.PP
Definition at line 2326 of file locale_facets.h.
.PP
References std::num_put< _CharT, _OutIter >::do_put().
.SS "template<typename _CharT , typename _OutIter > \fBiter_type\fP \fBstd::num_put\fP< _CharT, _OutIter >::put (\fBiter_type\fP __s, \fBios_base\fP & __f, \fBchar_type\fP __fill, bool __v) const\fC [inline]\fP"
.PP
Numeric formatting. 
.PP
Formats the boolean \fIv\fP and inserts it into a stream. It does so by calling \fBnum_put::do_put()\fP.
.PP
If \fBios_base::boolalpha\fP is \fBset\fP, writes ctype<CharT>::truename() or ctype<CharT>::falsename(). Otherwise formats \fIv\fP as an int.
.PP
\fBParameters:\fP
.RS 4
\fIs\fP Stream to write to. 
.br
\fIio\fP Source of \fBlocale\fP and flags. 
.br
\fIfill\fP Char_type to use for filling. 
.br
\fIv\fP Value to format and insert. 
.RE
.PP
\fBReturns:\fP
.RS 4
Iterator after writing. 
.RE
.PP

.PP
Definition at line 2284 of file locale_facets.h.
.PP
References std::num_put< _CharT, _OutIter >::do_put().
.SH "Member Data Documentation"
.PP 
.SS "template<typename _CharT , typename _OutIter > \fBlocale::id\fP \fBstd::num_put\fP< _CharT, _OutIter >::\fBid\fP\fC [inline, static]\fP"
.PP
Numpunct facet id. 
.PP
Definition at line 2256 of file locale_facets.h.

.SH "Author"
.PP 
Generated automatically by Doxygen for libstdc++ from the source code.
