.TH "std::complex" 3 "21 Apr 2009" "libstdc++" \" -*- nroff -*-
.ad l
.nh
.SH NAME
std::complex \- 
.SH SYNOPSIS
.br
.PP
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef _Tp \fBvalue_type\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "const \fBcomplex\fP & \fB__rep\fP () const "
.br
.ti -1c
.RI "template<typename _Up > \fBcomplex\fP (const \fBcomplex\fP< _Up > &__z)"
.br
.ti -1c
.RI "\fBcomplex\fP (const _Tp &__r=_Tp(), const _Tp &__i=_Tp())"
.br
.ti -1c
.RI "void \fBimag\fP (_Tp __val)"
.br
.ti -1c
.RI "_Tp \fBimag\fP () const "
.br
.ti -1c
.RI "template<typename _Up > \fBcomplex\fP< _Tp > & \fBoperator*=\fP (const \fBcomplex\fP< _Up > &)"
.br
.ti -1c
.RI "\fBcomplex\fP< _Tp > & \fBoperator*=\fP (const _Tp &)"
.br
.ti -1c
.RI "template<typename _Up > \fBcomplex\fP< _Tp > & \fBoperator+=\fP (const \fBcomplex\fP< _Up > &)"
.br
.ti -1c
.RI "\fBcomplex\fP< _Tp > & \fBoperator+=\fP (const _Tp &__t)"
.br
.ti -1c
.RI "template<typename _Up > \fBcomplex\fP< _Tp > & \fBoperator-=\fP (const \fBcomplex\fP< _Up > &)"
.br
.ti -1c
.RI "\fBcomplex\fP< _Tp > & \fBoperator-=\fP (const _Tp &__t)"
.br
.ti -1c
.RI "template<typename _Up > \fBcomplex\fP< _Tp > & \fBoperator/=\fP (const \fBcomplex\fP< _Up > &)"
.br
.ti -1c
.RI "\fBcomplex\fP< _Tp > & \fBoperator/=\fP (const _Tp &)"
.br
.ti -1c
.RI "template<typename _Up > \fBcomplex\fP< _Tp > & \fBoperator=\fP (const \fBcomplex\fP< _Up > &)"
.br
.ti -1c
.RI "\fBcomplex\fP< _Tp > & \fBoperator=\fP (const _Tp &)"
.br
.ti -1c
.RI "void \fBreal\fP (_Tp __val)"
.br
.ti -1c
.RI "_Tp \fBreal\fP () const "
.br
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<typename _Tp> struct std::complex< _Tp >"
Template to represent \fBcomplex\fP numbers.
.PP
Specializations for float, double, and long double are part of the library. Results with any other type are not guaranteed.
.PP
\fBParameters:\fP
.RS 4
\fITp\fP Type of real and imaginary values. 
.RE
.PP

.PP
Definition at line 122 of file complex.
.SH "Member Typedef Documentation"
.PP 
.SS "template<typename _Tp> typedef _Tp \fBstd::complex\fP< _Tp >::\fBvalue_type\fP"
.PP
Value typedef. 
.PP
Definition at line 125 of file complex.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<typename _Tp> \fBstd::complex\fP< _Tp >::\fBcomplex\fP (const _Tp & __r = \fC_Tp()\fP, const _Tp & __i = \fC_Tp()\fP)\fC [inline]\fP"
.PP
Default constructor. First parameter is x, second parameter is y. Unspecified parameters default to 0. 
.PP
Definition at line 129 of file complex.
.SS "template<typename _Tp> template<typename _Up > \fBstd::complex\fP< _Tp >::\fBcomplex\fP (const \fBcomplex\fP< _Up > & __z)\fC [inline]\fP"
.PP
Copy constructor. 
.PP
Definition at line 136 of file complex.
.SH "Member Function Documentation"
.PP 
.SS "template<typename _Tp> \fBcomplex\fP<_Tp>& \fBstd::complex\fP< _Tp >::operator+= (const _Tp & __t)\fC [inline]\fP"
.PP
Add \fIt\fP to this \fBcomplex\fP number. 
.PP
Definition at line 179 of file complex.
.SS "template<typename _Tp> \fBcomplex\fP<_Tp>& \fBstd::complex\fP< _Tp >::operator-= (const _Tp & __t)\fC [inline]\fP"
.PP
Subtract \fIt\fP from this \fBcomplex\fP number. 
.PP
Definition at line 188 of file complex.

.SH "Author"
.PP 
Generated automatically by Doxygen for libstdc++ from the source code.
