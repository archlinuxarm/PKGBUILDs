.TH "__gnu_cxx::subtractive_rng" 3 "21 Apr 2009" "libstdc++" \" -*- nroff -*-
.ad l
.nh
.SH NAME
__gnu_cxx::subtractive_rng \- 
.SH SYNOPSIS
.br
.PP
Inherits \fBstd::unary_function<unsigned int, unsigned int>\fP.
.PP
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef _Arg \fBargument_type\fP"
.br
.ti -1c
.RI "typedef _Result \fBresult_type\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "void \fB_M_initialize\fP (unsigned int __seed)"
.br
.ti -1c
.RI "unsigned int \fBoperator()\fP (unsigned int __limit)"
.br
.ti -1c
.RI "\fBsubtractive_rng\fP ()"
.br
.ti -1c
.RI "\fBsubtractive_rng\fP (unsigned int __seed)"
.br
.in -1c
.SH "Detailed Description"
.PP 
The \fC\fBsubtractive_rng\fP\fP class is documented on \fCSGI's site\fP. Note that this code assumes that \fCint\fP is 32 bits. 
.PP
Definition at line 348 of file ext/functional.
.SH "Member Typedef Documentation"
.PP 
.SS "template<typename _Arg, typename _Result> typedef _Arg \fBstd::unary_function\fP< _Arg, _Result >::\fBargument_type\fP\fC [inherited]\fP"
.PP
\fCargument_type\fP is the type of the argument (no surprises here) 
.PP
Definition at line 102 of file stl_function.h.
.SS "template<typename _Arg, typename _Result> typedef _Result \fBstd::unary_function\fP< _Arg, _Result >::\fBresult_type\fP\fC [inherited]\fP"
.PP
\fCresult_type\fP is the return type 
.PP
Definition at line 105 of file stl_function.h.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "__gnu_cxx::subtractive_rng::subtractive_rng (unsigned int __seed)\fC [inline]\fP"
.PP
Ctor allowing you to initialize the seed. 
.PP
Definition at line 390 of file ext/functional.
.SS "__gnu_cxx::subtractive_rng::subtractive_rng ()\fC [inline]\fP"
.PP
Default ctor; initializes its state with some number you don't see. 
.PP
Definition at line 394 of file ext/functional.
.SH "Member Function Documentation"
.PP 
.SS "unsigned int __gnu_cxx::subtractive_rng::operator() (unsigned int __limit)\fC [inline]\fP"
.PP
Returns a number less than the argument. 
.PP
Definition at line 359 of file ext/functional.

.SH "Author"
.PP 
Generated automatically by Doxygen for libstdc++ from the source code.
