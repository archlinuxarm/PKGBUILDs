.TH "std::__parallel" 3 "21 Apr 2009" "libstdc++" \" -*- nroff -*-
.ad l
.nh
.SH NAME
std::__parallel \- GNU parallel code, replaces standard behavior with parallel behavior.  

.PP
.SH SYNOPSIS
.br
.PP
.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBc_rand_number\fP"
.br
.RI "\fIFunctor wrapper for std::rand(). \fP"
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "template<typename _IIter , typename _Tp , typename _BinaryOper > _Tp \fBaccumulate\fP (_IIter, _IIter, _Tp, _BinaryOper, \fB__gnu_parallel::_Parallelism\fP)"
.br
.ti -1c
.RI "template<typename _IIter , typename _Tp , typename _BinaryOper > _Tp \fBaccumulate\fP (_IIter, _IIter, _Tp, _BinaryOper, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename _IIter , typename _Tp , typename _BinaryOper > _Tp \fBaccumulate\fP (_IIter, _IIter, _Tp, _BinaryOper)"
.br
.ti -1c
.RI "template<typename _IIter , typename _Tp > _Tp \fBaccumulate\fP (_IIter, _IIter, _Tp, \fB__gnu_parallel::_Parallelism\fP)"
.br
.ti -1c
.RI "template<typename _IIter , typename _Tp > _Tp \fBaccumulate\fP (_IIter, _IIter, _Tp, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename _IIter , typename _Tp > _Tp \fBaccumulate\fP (_IIter, _IIter, _Tp)"
.br
.ti -1c
.RI "template<typename InputIterator , typename T , typename BinaryOperation > T \fBaccumulate\fP (InputIterator begin, InputIterator end, T init, BinaryOperation binary_op)"
.br
.ti -1c
.RI "template<typename InputIterator , typename T , typename BinaryOperation > T \fBaccumulate\fP (InputIterator begin, InputIterator end, T init, BinaryOperation binary_op, \fB__gnu_parallel::_Parallelism\fP parallelism_tag)"
.br
.ti -1c
.RI "template<typename InputIterator , typename T > T \fBaccumulate\fP (InputIterator begin, InputIterator end, T init)"
.br
.ti -1c
.RI "template<typename InputIterator , typename T > T \fBaccumulate\fP (InputIterator begin, InputIterator end, T init, \fB__gnu_parallel::_Parallelism\fP parallelism_tag)"
.br
.ti -1c
.RI "template<typename InputIterator , typename T , typename BinaryOperation > T \fBaccumulate\fP (InputIterator begin, InputIterator end, T init, BinaryOperation binary_op, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename InputIterator , typename T > T \fBaccumulate\fP (InputIterator begin, InputIterator end, T init, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename _RAIter , typename _Tp , typename _BinaryOper > _Tp \fBaccumulate_switch\fP (_RAIter, _RAIter, _Tp, _BinaryOper, \fBrandom_access_iterator_tag\fP, \fB__gnu_parallel::_Parallelism\fP parallelism=__gnu_parallel::parallel_unbalanced)"
.br
.ti -1c
.RI "template<typename _IIter , typename _Tp , typename _BinaryOper , typename _Tag > _Tp \fBaccumulate_switch\fP (_IIter, _IIter, _Tp, _BinaryOper, _Tag)"
.br
.ti -1c
.RI "template<typename _IIter , typename _Tp , typename _Tag > _Tp \fBaccumulate_switch\fP (_IIter, _IIter, _Tp, _Tag)"
.br
.ti -1c
.RI "template<typename _RandomAccessIterator , typename T , typename BinaryOperation > T \fBaccumulate_switch\fP (_RandomAccessIterator begin, _RandomAccessIterator end, T init, BinaryOperation binary_op, \fBrandom_access_iterator_tag\fP, \fB__gnu_parallel::_Parallelism\fP parallelism_tag=__gnu_parallel::parallel_unbalanced)"
.br
.ti -1c
.RI "template<typename InputIterator , typename T , typename BinaryOperation , typename IteratorTag > T \fBaccumulate_switch\fP (InputIterator begin, InputIterator end, T init, BinaryOperation binary_op, IteratorTag)"
.br
.ti -1c
.RI "template<typename InputIterator , typename T , typename IteratorTag > T \fBaccumulate_switch\fP (InputIterator begin, InputIterator end, T init, IteratorTag)"
.br
.ti -1c
.RI "template<typename _IIter , typename _OIter , typename _BinaryOper > _OIter \fBadjacent_difference\fP (_IIter, _IIter, _OIter, _BinaryOper, \fB__gnu_parallel::_Parallelism\fP)"
.br
.ti -1c
.RI "template<typename _IIter , typename _OIter > _OIter \fBadjacent_difference\fP (_IIter, _IIter, _OIter, \fB__gnu_parallel::_Parallelism\fP)"
.br
.ti -1c
.RI "template<typename _IIter , typename _OIter , typename _BinaryOper > _OIter \fBadjacent_difference\fP (_IIter, _IIter, _OIter, _BinaryOper, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename _IIter , typename _OIter > _OIter \fBadjacent_difference\fP (_IIter, _IIter, _OIter, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename _IIter , typename _OIter , typename _BinaryOper > _OIter \fBadjacent_difference\fP (_IIter, _IIter, _OIter, _BinaryOper)"
.br
.ti -1c
.RI "template<typename _IIter , typename _OIter > _OIter \fBadjacent_difference\fP (_IIter, _IIter, _OIter)"
.br
.ti -1c
.RI "template<typename InputIterator , typename OutputIterator , typename BinaryOperation > OutputIterator \fBadjacent_difference\fP (InputIterator begin, InputIterator end, OutputIterator result, BinaryOperation binary_op)"
.br
.ti -1c
.RI "template<typename InputIterator , typename OutputIterator , typename BinaryOperation > OutputIterator \fBadjacent_difference\fP (InputIterator begin, InputIterator end, OutputIterator result, BinaryOperation binary_op, \fB__gnu_parallel::_Parallelism\fP parallelism_tag)"
.br
.ti -1c
.RI "template<typename InputIterator , typename OutputIterator > OutputIterator \fBadjacent_difference\fP (InputIterator begin, InputIterator end, OutputIterator result)"
.br
.ti -1c
.RI "template<typename InputIterator , typename OutputIterator > OutputIterator \fBadjacent_difference\fP (InputIterator begin, InputIterator end, OutputIterator result, \fB__gnu_parallel::_Parallelism\fP parallelism_tag)"
.br
.ti -1c
.RI "template<typename InputIterator , typename OutputIterator , typename BinaryOperation > OutputIterator \fBadjacent_difference\fP (InputIterator begin, InputIterator end, OutputIterator result, BinaryOperation bin_op, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename InputIterator , typename OutputIterator > OutputIterator \fBadjacent_difference\fP (InputIterator begin, InputIterator end, OutputIterator result, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename _IIter , typename _OIter , typename _BinaryOper > _OIter \fBadjacent_difference_switch\fP (_IIter, _IIter, _OIter, _BinaryOper, \fBrandom_access_iterator_tag\fP, \fBrandom_access_iterator_tag\fP, \fB__gnu_parallel::_Parallelism\fP parallelism=__gnu_parallel::parallel_unbalanced)"
.br
.ti -1c
.RI "template<typename _IIter , typename _OIter , typename _BinaryOper , typename _Tag1 , typename _Tag2 > _OIter \fBadjacent_difference_switch\fP (_IIter, _IIter, _OIter, _BinaryOper, _Tag1, _Tag2)"
.br
.ti -1c
.RI "template<typename InputIterator , typename OutputIterator , typename BinaryOperation > OutputIterator \fBadjacent_difference_switch\fP (InputIterator begin, InputIterator end, OutputIterator result, BinaryOperation bin_op, \fBrandom_access_iterator_tag\fP, \fBrandom_access_iterator_tag\fP, \fB__gnu_parallel::_Parallelism\fP parallelism_tag=__gnu_parallel::parallel_balanced)"
.br
.ti -1c
.RI "template<typename InputIterator , typename OutputIterator , typename BinaryOperation , typename IteratorTag1 , typename IteratorTag2 > OutputIterator \fBadjacent_difference_switch\fP (InputIterator begin, InputIterator end, OutputIterator result, BinaryOperation bin_op, IteratorTag1, IteratorTag2)"
.br
.ti -1c
.RI "template<typename _FIter , typename _BiPredicate > _FIter \fBadjacent_find\fP (_FIter, _FIter, _BiPredicate, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename _FIter , typename _BiPredicate > _FIter \fBadjacent_find\fP (_FIter, _FIter, _BiPredicate)"
.br
.ti -1c
.RI "template<typename _FIter > _FIter \fBadjacent_find\fP (_FIter, _FIter, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename _FIter > _FIter \fBadjacent_find\fP (_FIter, _FIter)"
.br
.ti -1c
.RI "template<typename ForwardIterator , typename BinaryPredicate > ForwardIterator \fBadjacent_find\fP (ForwardIterator begin, ForwardIterator end, BinaryPredicate pred)"
.br
.ti -1c
.RI "template<typename ForwardIterator > ForwardIterator \fBadjacent_find\fP (ForwardIterator begin, ForwardIterator end)"
.br
.ti -1c
.RI "template<typename ForwardIterator , typename BinaryPredicate > ForwardIterator \fBadjacent_find\fP (ForwardIterator begin, ForwardIterator end, BinaryPredicate binary_pred, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename ForwardIterator > ForwardIterator \fBadjacent_find\fP (ForwardIterator begin, ForwardIterator end, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename _RAIter , typename _BiPredicate > _RAIter \fBadjacent_find_switch\fP (_RAIter, _RAIter, _BiPredicate, \fBrandom_access_iterator_tag\fP)"
.br
.ti -1c
.RI "template<typename _FIter , typename _BiPredicate , typename _IterTag > _FIter \fBadjacent_find_switch\fP (_FIter, _FIter, _BiPredicate, _IterTag)"
.br
.ti -1c
.RI "template<typename _RAIter > _RAIter \fBadjacent_find_switch\fP (_RAIter, _RAIter, \fBrandom_access_iterator_tag\fP)"
.br
.ti -1c
.RI "template<typename _FIter , typename _IterTag > _FIter \fBadjacent_find_switch\fP (_FIter, _FIter, _IterTag)"
.br
.ti -1c
.RI "template<typename RandomAccessIterator , typename BinaryPredicate > RandomAccessIterator \fBadjacent_find_switch\fP (RandomAccessIterator begin, RandomAccessIterator end, BinaryPredicate pred, \fBrandom_access_iterator_tag\fP)"
.br
.ti -1c
.RI "template<typename ForwardIterator , typename BinaryPredicate , typename IteratorTag > ForwardIterator \fBadjacent_find_switch\fP (ForwardIterator begin, ForwardIterator end, BinaryPredicate pred, IteratorTag)"
.br
.ti -1c
.RI "template<typename ForwardIterator , typename IteratorTag > ForwardIterator \fBadjacent_find_switch\fP (ForwardIterator begin, ForwardIterator end, IteratorTag)"
.br
.ti -1c
.RI "template<typename RandomAccessIterator > RandomAccessIterator \fBadjacent_find_switch\fP (RandomAccessIterator begin, RandomAccessIterator end, \fBrandom_access_iterator_tag\fP)"
.br
.ti -1c
.RI "template<typename _IIter , typename _Tp > \fBiterator_traits\fP< _IIter >::difference_type \fBcount\fP (_IIter, _IIter, const _Tp &, \fB__gnu_parallel::_Parallelism\fP)"
.br
.ti -1c
.RI "template<typename _IIter , typename _Tp > \fBiterator_traits\fP< _IIter >::difference_type \fBcount\fP (_IIter, _IIter, const _Tp &, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename _IIter , typename _Tp > \fBiterator_traits\fP< _IIter >::difference_type \fBcount\fP (_IIter, _IIter, const _Tp &)"
.br
.ti -1c
.RI "template<typename InputIterator , typename T > \fBiterator_traits\fP< InputIterator >::difference_type \fBcount\fP (InputIterator begin, InputIterator end, const T &value)"
.br
.ti -1c
.RI "template<typename InputIterator , typename T > \fBiterator_traits\fP< InputIterator >::difference_type \fBcount\fP (InputIterator begin, InputIterator end, const T &value, \fB__gnu_parallel::_Parallelism\fP parallelism_tag)"
.br
.ti -1c
.RI "template<typename InputIterator , typename T > \fBiterator_traits\fP< InputIterator >::difference_type \fBcount\fP (InputIterator begin, InputIterator end, const T &value, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename _IIter , typename _Predicate > \fBiterator_traits\fP< _IIter >::difference_type \fBcount_if\fP (_IIter, _IIter, _Predicate, \fB__gnu_parallel::_Parallelism\fP)"
.br
.ti -1c
.RI "template<typename _IIter , typename _Predicate > \fBiterator_traits\fP< _IIter >::difference_type \fBcount_if\fP (_IIter, _IIter, _Predicate, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename _IIter , typename _Predicate > \fBiterator_traits\fP< _IIter >::difference_type \fBcount_if\fP (_IIter, _IIter, _Predicate)"
.br
.ti -1c
.RI "template<typename InputIterator , typename Predicate > \fBiterator_traits\fP< InputIterator >::difference_type \fBcount_if\fP (InputIterator begin, InputIterator end, Predicate pred)"
.br
.ti -1c
.RI "template<typename InputIterator , typename Predicate > \fBiterator_traits\fP< InputIterator >::difference_type \fBcount_if\fP (InputIterator begin, InputIterator end, Predicate pred, \fB__gnu_parallel::_Parallelism\fP parallelism_tag)"
.br
.ti -1c
.RI "template<typename InputIterator , typename Predicate > \fBiterator_traits\fP< InputIterator >::difference_type \fBcount_if\fP (InputIterator begin, InputIterator end, Predicate pred, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename _RAIter , typename _Predicate > \fBiterator_traits\fP< _RAIter >::difference_type \fBcount_if_switch\fP (_RAIter, _RAIter, _Predicate, \fBrandom_access_iterator_tag\fP, \fB__gnu_parallel::_Parallelism\fP parallelism=__gnu_parallel::parallel_unbalanced)"
.br
.ti -1c
.RI "template<typename _IIter , typename _Predicate , typename _IterTag > \fBiterator_traits\fP< _IIter >::difference_type \fBcount_if_switch\fP (_IIter, _IIter, _Predicate, _IterTag)"
.br
.ti -1c
.RI "template<typename InputIterator , typename Predicate , typename IteratorTag > \fBiterator_traits\fP< InputIterator >::difference_type \fBcount_if_switch\fP (InputIterator begin, InputIterator end, Predicate pred, IteratorTag)"
.br
.ti -1c
.RI "template<typename RandomAccessIterator , typename Predicate > \fBiterator_traits\fP< RandomAccessIterator >::difference_type \fBcount_if_switch\fP (RandomAccessIterator begin, RandomAccessIterator end, Predicate pred, \fBrandom_access_iterator_tag\fP, \fB__gnu_parallel::_Parallelism\fP parallelism_tag=__gnu_parallel::parallel_unbalanced)"
.br
.ti -1c
.RI "template<typename _RAIter , typename _Tp > \fBiterator_traits\fP< _RAIter >::difference_type \fBcount_switch\fP (_RAIter, _RAIter, const _Tp &, \fBrandom_access_iterator_tag\fP, \fB__gnu_parallel::_Parallelism\fP parallelism=__gnu_parallel::parallel_unbalanced)"
.br
.ti -1c
.RI "template<typename _IIter , typename _Tp , typename _IterTag > \fBiterator_traits\fP< _IIter >::difference_type \fBcount_switch\fP (_IIter, _IIter, const _Tp &, _IterTag)"
.br
.ti -1c
.RI "template<typename InputIterator , typename T , typename IteratorTag > \fBiterator_traits\fP< InputIterator >::difference_type \fBcount_switch\fP (InputIterator begin, InputIterator end, const T &value, IteratorTag)"
.br
.ti -1c
.RI "template<typename RandomAccessIterator , typename T > \fBiterator_traits\fP< RandomAccessIterator >::difference_type \fBcount_switch\fP (RandomAccessIterator begin, RandomAccessIterator end, const T &value, \fBrandom_access_iterator_tag\fP, \fB__gnu_parallel::_Parallelism\fP parallelism_tag=__gnu_parallel::parallel_unbalanced)"
.br
.ti -1c
.RI "template<typename _IIter1 , typename _IIter2 , typename Predicate > bool \fBequal\fP (_IIter1, _IIter1, _IIter2, Predicate)"
.br
.ti -1c
.RI "template<typename _IIter1 , typename _IIter2 > bool \fBequal\fP (_IIter1, _IIter1, _IIter2)"
.br
.ti -1c
.RI "template<typename _IIter1 , typename _IIter2 , typename Predicate > bool \fBequal\fP (_IIter1, _IIter1, _IIter2, Predicate, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename _IIter1 , typename _IIter2 > bool \fBequal\fP (_IIter1, _IIter1, _IIter2, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename InputIterator1 , typename InputIterator2 , typename Predicate > bool \fBequal\fP (InputIterator1 begin1, InputIterator1 end1, InputIterator2 begin2, Predicate pred)"
.br
.ti -1c
.RI "template<typename InputIterator1 , typename InputIterator2 > bool \fBequal\fP (InputIterator1 begin1, InputIterator1 end1, InputIterator2 begin2)"
.br
.ti -1c
.RI "template<typename InputIterator1 , typename InputIterator2 , typename Predicate > bool \fBequal\fP (InputIterator1 begin1, InputIterator1 end1, InputIterator2 begin2, Predicate pred, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename InputIterator1 , typename InputIterator2 > bool \fBequal\fP (InputIterator1 begin1, InputIterator1 end1, InputIterator2 begin2, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename _IIter , typename _Tp > _IIter \fBfind\fP (_IIter, _IIter, const _Tp &val)"
.br
.ti -1c
.RI "template<typename _IIter , typename _Tp > _IIter \fBfind\fP (_IIter, _IIter, const _Tp &, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename InputIterator , typename T > InputIterator \fBfind\fP (InputIterator begin, InputIterator end, const T &val)"
.br
.ti -1c
.RI "template<typename InputIterator , typename T > InputIterator \fBfind\fP (InputIterator begin, InputIterator end, const T &val, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename _IIter , typename _FIter > _IIter \fBfind_first_of\fP (_IIter, _IIter, _FIter, _FIter)"
.br
.ti -1c
.RI "template<typename _IIter , typename _FIter , typename _BiPredicate > _IIter \fBfind_first_of\fP (_IIter, _IIter, _FIter, _FIter, _BiPredicate)"
.br
.ti -1c
.RI "template<typename _IIter , typename _FIter , typename _BiPredicate > _IIter \fBfind_first_of\fP (_IIter, _IIter, _FIter, _FIter, _BiPredicate, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename _IIter , typename _FIter > _IIter \fBfind_first_of\fP (_IIter, _IIter, _FIter, _FIter, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename InputIterator , typename ForwardIterator > InputIterator \fBfind_first_of\fP (InputIterator begin1, InputIterator end1, ForwardIterator begin2, ForwardIterator end2)"
.br
.ti -1c
.RI "template<typename InputIterator , typename ForwardIterator , typename BinaryPredicate > InputIterator \fBfind_first_of\fP (InputIterator begin1, InputIterator end1, ForwardIterator begin2, ForwardIterator end2, BinaryPredicate comp)"
.br
.ti -1c
.RI "template<typename InputIterator , typename ForwardIterator , typename BinaryPredicate > InputIterator \fBfind_first_of\fP (InputIterator begin1, InputIterator end1, ForwardIterator begin2, ForwardIterator end2, BinaryPredicate comp, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename InputIterator , typename ForwardIterator > InputIterator \fBfind_first_of\fP (InputIterator begin1, InputIterator end1, ForwardIterator begin2, ForwardIterator end2, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename _IIter , typename _FIter , typename _BiPredicate , typename _IterTag1 , typename _IterTag2 > _IIter \fBfind_first_of_switch\fP (_IIter, _IIter, _FIter, _FIter, _BiPredicate, _IterTag1, _IterTag2)"
.br
.ti -1c
.RI "template<typename _RAIter , typename _FIter , typename _BiPredicate , typename _IterTag > _RAIter \fBfind_first_of_switch\fP (_RAIter, _RAIter, _FIter, _FIter, _BiPredicate, \fBrandom_access_iterator_tag\fP, _IterTag)"
.br
.ti -1c
.RI "template<typename _IIter , typename _FIter , typename _IterTag1 , typename _IterTag2 > _IIter \fBfind_first_of_switch\fP (_IIter, _IIter, _FIter, _FIter, _IterTag1, _IterTag2)"
.br
.ti -1c
.RI "template<typename InputIterator , typename ForwardIterator , typename BinaryPredicate , typename IteratorTag1 , typename IteratorTag2 > InputIterator \fBfind_first_of_switch\fP (InputIterator begin1, InputIterator end1, ForwardIterator begin2, ForwardIterator end2, BinaryPredicate comp, IteratorTag1, IteratorTag2)"
.br
.ti -1c
.RI "template<typename RandomAccessIterator , typename ForwardIterator , typename BinaryPredicate , typename IteratorTag > RandomAccessIterator \fBfind_first_of_switch\fP (RandomAccessIterator begin1, RandomAccessIterator end1, ForwardIterator begin2, ForwardIterator end2, BinaryPredicate comp, \fBrandom_access_iterator_tag\fP, IteratorTag)"
.br
.ti -1c
.RI "template<typename InputIterator , typename ForwardIterator , typename IteratorTag1 , typename IteratorTag2 > InputIterator \fBfind_first_of_switch\fP (InputIterator begin1, InputIterator end1, ForwardIterator begin2, ForwardIterator end2, IteratorTag1, IteratorTag2)"
.br
.ti -1c
.RI "template<typename _IIter , typename _Predicate > _IIter \fBfind_if\fP (_IIter, _IIter, _Predicate)"
.br
.ti -1c
.RI "template<typename _IIter , typename _Predicate > _IIter \fBfind_if\fP (_IIter, _IIter, _Predicate, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename InputIterator , typename Predicate > InputIterator \fBfind_if\fP (InputIterator begin, InputIterator end, Predicate pred)"
.br
.ti -1c
.RI "template<typename InputIterator , typename Predicate > InputIterator \fBfind_if\fP (InputIterator begin, InputIterator end, Predicate pred, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename _RAIter , typename _Predicate > _RAIter \fBfind_if_switch\fP (_RAIter, _RAIter, _Predicate, \fBrandom_access_iterator_tag\fP)"
.br
.ti -1c
.RI "template<typename _IIter , typename _Predicate , typename _IterTag > _IIter \fBfind_if_switch\fP (_IIter, _IIter, _Predicate, _IterTag)"
.br
.ti -1c
.RI "template<typename RandomAccessIterator , typename Predicate > RandomAccessIterator \fBfind_if_switch\fP (RandomAccessIterator begin, RandomAccessIterator end, Predicate pred, \fBrandom_access_iterator_tag\fP)"
.br
.ti -1c
.RI "template<typename InputIterator , typename Predicate , typename IteratorTag > InputIterator \fBfind_if_switch\fP (InputIterator begin, InputIterator end, Predicate pred, IteratorTag)"
.br
.ti -1c
.RI "template<typename _RAIter , typename _Tp > _RAIter \fBfind_switch\fP (_RAIter, _RAIter, const _Tp &, \fBrandom_access_iterator_tag\fP)"
.br
.ti -1c
.RI "template<typename _IIter , typename _Tp , typename _IterTag > _IIter \fBfind_switch\fP (_IIter, _IIter, const _Tp &, _IterTag)"
.br
.ti -1c
.RI "template<typename RandomAccessIterator , typename T > RandomAccessIterator \fBfind_switch\fP (RandomAccessIterator begin, RandomAccessIterator end, const T &val, \fBrandom_access_iterator_tag\fP)"
.br
.ti -1c
.RI "template<typename InputIterator , typename T , typename IteratorTag > InputIterator \fBfind_switch\fP (InputIterator begin, InputIterator end, const T &val, IteratorTag)"
.br
.ti -1c
.RI "template<typename _Iterator , typename _Function > _Function \fBfor_each\fP (_Iterator, _Iterator, _Function, \fB__gnu_parallel::_Parallelism\fP)"
.br
.ti -1c
.RI "template<typename _IIter , typename _Function > _Function \fBfor_each\fP (_IIter, _IIter, _Function, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename _IIter , typename _Function > _Function \fBfor_each\fP (_IIter, _IIter, _Function)"
.br
.ti -1c
.RI "template<typename Iterator , typename Function > Function \fBfor_each\fP (Iterator begin, Iterator end, Function f)"
.br
.ti -1c
.RI "template<typename Iterator , typename Function > Function \fBfor_each\fP (Iterator begin, Iterator end, Function f, \fB__gnu_parallel::_Parallelism\fP parallelism_tag)"
.br
.ti -1c
.RI "template<typename InputIterator , typename Function > Function \fBfor_each\fP (InputIterator begin, InputIterator end, Function f, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename _RAIter , typename _Function > _Function \fBfor_each_switch\fP (_RAIter, _RAIter, _Function, \fBrandom_access_iterator_tag\fP, \fB__gnu_parallel::_Parallelism\fP parallelism=__gnu_parallel::parallel_balanced)"
.br
.ti -1c
.RI "template<typename _IIter , typename _Function , typename _IterTag > _Function \fBfor_each_switch\fP (_IIter, _IIter, _Function, _IterTag)"
.br
.ti -1c
.RI "template<typename RandomAccessIterator , typename Function > Function \fBfor_each_switch\fP (RandomAccessIterator begin, RandomAccessIterator end, Function f, \fBrandom_access_iterator_tag\fP, \fB__gnu_parallel::_Parallelism\fP parallelism_tag=__gnu_parallel::parallel_balanced)"
.br
.ti -1c
.RI "template<typename InputIterator , typename Function , typename IteratorTag > Function \fBfor_each_switch\fP (InputIterator begin, InputIterator end, Function f, IteratorTag)"
.br
.ti -1c
.RI "template<typename _FIter , typename _Generator > void \fBgenerate\fP (_FIter, _FIter, _Generator, \fB__gnu_parallel::_Parallelism\fP)"
.br
.ti -1c
.RI "template<typename _FIter , typename _Generator > void \fBgenerate\fP (_FIter, _FIter, _Generator, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename _FIter , typename _Generator > void \fBgenerate\fP (_FIter, _FIter, _Generator)"
.br
.ti -1c
.RI "template<typename ForwardIterator , typename Generator > void \fBgenerate\fP (ForwardIterator begin, ForwardIterator end, Generator gen)"
.br
.ti -1c
.RI "template<typename ForwardIterator , typename Generator > void \fBgenerate\fP (ForwardIterator begin, ForwardIterator end, Generator gen, \fB__gnu_parallel::_Parallelism\fP parallelism_tag)"
.br
.ti -1c
.RI "template<typename ForwardIterator , typename Generator > void \fBgenerate\fP (ForwardIterator begin, ForwardIterator end, Generator gen, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename _OIter , typename _Size , typename _Generator > _OIter \fBgenerate_n\fP (_OIter, _Size, _Generator, \fB__gnu_parallel::_Parallelism\fP)"
.br
.ti -1c
.RI "template<typename _OIter , typename _Size , typename _Generator > _OIter \fBgenerate_n\fP (_OIter, _Size, _Generator, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename _OIter , typename _Size , typename _Generator > _OIter \fBgenerate_n\fP (_OIter, _Size, _Generator)"
.br
.ti -1c
.RI "template<typename OutputIterator , typename Size , typename Generator > OutputIterator \fBgenerate_n\fP (OutputIterator begin, Size n, Generator gen)"
.br
.ti -1c
.RI "template<typename OutputIterator , typename Size , typename Generator > OutputIterator \fBgenerate_n\fP (OutputIterator begin, Size n, Generator gen, \fB__gnu_parallel::_Parallelism\fP parallelism_tag)"
.br
.ti -1c
.RI "template<typename OutputIterator , typename Size , typename Generator > OutputIterator \fBgenerate_n\fP (OutputIterator begin, Size n, Generator gen, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename _RAIter , typename _Size , typename _Generator > _RAIter \fBgenerate_n_switch\fP (_RAIter, _Size, _Generator, \fBrandom_access_iterator_tag\fP, \fB__gnu_parallel::_Parallelism\fP parallelism=__gnu_parallel::parallel_balanced)"
.br
.ti -1c
.RI "template<typename _OIter , typename _Size , typename _Generator , typename _IterTag > _OIter \fBgenerate_n_switch\fP (_OIter, _Size, _Generator, _IterTag)"
.br
.ti -1c
.RI "template<typename RandomAccessIterator , typename Size , typename Generator > RandomAccessIterator \fBgenerate_n_switch\fP (RandomAccessIterator begin, Size n, Generator gen, \fBrandom_access_iterator_tag\fP, \fB__gnu_parallel::_Parallelism\fP parallelism_tag=__gnu_parallel::parallel_balanced)"
.br
.ti -1c
.RI "template<typename OutputIterator , typename Size , typename Generator , typename IteratorTag > OutputIterator \fBgenerate_n_switch\fP (OutputIterator begin, Size n, Generator gen, IteratorTag)"
.br
.ti -1c
.RI "template<typename _RAIter , typename _Generator > void \fBgenerate_switch\fP (_RAIter, _RAIter, _Generator, \fBrandom_access_iterator_tag\fP, \fB__gnu_parallel::_Parallelism\fP parallelism=__gnu_parallel::parallel_balanced)"
.br
.ti -1c
.RI "template<typename _FIter , typename _Generator , typename _IterTag > void \fBgenerate_switch\fP (_FIter, _FIter, _Generator, _IterTag)"
.br
.ti -1c
.RI "template<typename RandomAccessIterator , typename Generator > void \fBgenerate_switch\fP (RandomAccessIterator begin, RandomAccessIterator end, Generator gen, \fBrandom_access_iterator_tag\fP, \fB__gnu_parallel::_Parallelism\fP parallelism_tag=__gnu_parallel::parallel_balanced)"
.br
.ti -1c
.RI "template<typename ForwardIterator , typename Generator , typename IteratorTag > void \fBgenerate_switch\fP (ForwardIterator begin, ForwardIterator end, Generator gen, IteratorTag)"
.br
.ti -1c
.RI "template<typename _IIter1 , typename _IIter2 , typename _Tp , typename BinaryFunction1 , typename BinaryFunction2 > _Tp \fBinner_product\fP (_IIter1, _IIter1, _IIter2, _Tp, BinaryFunction1, BinaryFunction2, \fB__gnu_parallel::_Parallelism\fP)"
.br
.ti -1c
.RI "template<typename _IIter1 , typename _IIter2 , typename _Tp , typename _BinaryFunction1 , typename _BinaryFunction2 > _Tp \fBinner_product\fP (_IIter1, _IIter1, _IIter2, _Tp, _BinaryFunction1, _BinaryFunction2, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename _IIter1 , typename _IIter2 , typename _Tp , typename _BinaryFunction1 , typename _BinaryFunction2 > _Tp \fBinner_product\fP (_IIter1, _IIter1, _IIter2, _Tp, _BinaryFunction1, _BinaryFunction2)"
.br
.ti -1c
.RI "template<typename _IIter1 , typename _IIter2 , typename _Tp > _Tp \fBinner_product\fP (_IIter1, _IIter1, _IIter2, _Tp, \fB__gnu_parallel::_Parallelism\fP)"
.br
.ti -1c
.RI "template<typename _IIter1 , typename _IIter2 , typename _Tp > _Tp \fBinner_product\fP (_IIter1, _IIter1, _IIter2, _Tp, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename _IIter1 , typename _IIter2 , typename _Tp > _Tp \fBinner_product\fP (_IIter1, _IIter1, _IIter2, _Tp)"
.br
.ti -1c
.RI "template<typename InputIterator1 , typename InputIterator2 , typename T > T \fBinner_product\fP (InputIterator1 first1, InputIterator1 last1, InputIterator2 first2, T init)"
.br
.ti -1c
.RI "template<typename InputIterator1 , typename InputIterator2 , typename T > T \fBinner_product\fP (InputIterator1 first1, InputIterator1 last1, InputIterator2 first2, T init, \fB__gnu_parallel::_Parallelism\fP parallelism_tag)"
.br
.ti -1c
.RI "template<typename InputIterator1 , typename InputIterator2 , typename T , typename BinaryFunction1 , typename BinaryFunction2 > T \fBinner_product\fP (InputIterator1 first1, InputIterator1 last1, InputIterator2 first2, T init, BinaryFunction1 binary_op1, BinaryFunction2 binary_op2)"
.br
.ti -1c
.RI "template<typename InputIterator1 , typename InputIterator2 , typename T , typename BinaryFunction1 , typename BinaryFunction2 > T \fBinner_product\fP (InputIterator1 first1, InputIterator1 last1, InputIterator2 first2, T init, BinaryFunction1 binary_op1, BinaryFunction2 binary_op2, \fB__gnu_parallel::_Parallelism\fP parallelism_tag)"
.br
.ti -1c
.RI "template<typename InputIterator1 , typename InputIterator2 , typename T , typename BinaryFunction1 , typename BinaryFunction2 > T \fBinner_product\fP (InputIterator1 first1, InputIterator1 last1, InputIterator2 first2, T init, BinaryFunction1 binary_op1, BinaryFunction2 binary_op2, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename InputIterator1 , typename InputIterator2 , typename T > T \fBinner_product\fP (InputIterator1 first1, InputIterator1 last1, InputIterator2 first2, T init, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename _IIter1 , typename _IIter2 , typename _Tp , typename _BinaryFunction1 , typename _BinaryFunction2 , typename _Tag1 , typename _Tag2 > _Tp \fBinner_product_switch\fP (_IIter1, _IIter1, _IIter2, _Tp, _BinaryFunction1, _BinaryFunction2, _Tag1, _Tag2)"
.br
.ti -1c
.RI "template<typename _RAIter1 , typename _RAIter2 , typename _Tp , typename BinaryFunction1 , typename BinaryFunction2 > _Tp \fBinner_product_switch\fP (_RAIter1, _RAIter1, _RAIter2, _Tp, BinaryFunction1, BinaryFunction2, \fBrandom_access_iterator_tag\fP, \fBrandom_access_iterator_tag\fP, \fB__gnu_parallel::_Parallelism\fP=__gnu_parallel::parallel_unbalanced)"
.br
.ti -1c
.RI "template<typename InputIterator1 , typename InputIterator2 , typename T , typename BinaryFunction1 , typename BinaryFunction2 , typename IteratorTag1 , typename IteratorTag2 > T \fBinner_product_switch\fP (InputIterator1 first1, InputIterator1 last1, InputIterator2 first2, T init, BinaryFunction1 binary_op1, BinaryFunction2 binary_op2, IteratorTag1, IteratorTag2)"
.br
.ti -1c
.RI "template<typename RandomAccessIterator1 , typename RandomAccessIterator2 , typename T , typename BinaryFunction1 , typename BinaryFunction2 > T \fBinner_product_switch\fP (RandomAccessIterator1 first1, RandomAccessIterator1 last1, RandomAccessIterator2 first2, T init, BinaryFunction1 binary_op1, BinaryFunction2 binary_op2, \fBrandom_access_iterator_tag\fP, \fBrandom_access_iterator_tag\fP, \fB__gnu_parallel::_Parallelism\fP parallelism_tag=__gnu_parallel::parallel_unbalanced)"
.br
.ti -1c
.RI "template<typename _IIter1 , typename _IIter2 , typename _Predicate > bool \fBlexicographical_compare\fP (_IIter1, _IIter1, _IIter2, _IIter2, _Predicate)"
.br
.ti -1c
.RI "template<typename _IIter1 , typename _IIter2 > bool \fBlexicographical_compare\fP (_IIter1, _IIter1, _IIter2, _IIter2)"
.br
.ti -1c
.RI "template<typename _IIter1 , typename _IIter2 , typename _Predicate > bool \fBlexicographical_compare\fP (_IIter1, _IIter1, _IIter2, _IIter2, _Predicate, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename _IIter1 , typename _IIter2 > bool \fBlexicographical_compare\fP (_IIter1, _IIter1, _IIter2, _IIter2, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename InputIterator1 , typename InputIterator2 , typename Predicate > bool \fBlexicographical_compare\fP (InputIterator1 begin1, InputIterator1 end1, InputIterator2 begin2, InputIterator2 end2, Predicate pred)"
.br
.ti -1c
.RI "template<typename InputIterator1 , typename InputIterator2 > bool \fBlexicographical_compare\fP (InputIterator1 begin1, InputIterator1 end1, InputIterator2 begin2, InputIterator2 end2)"
.br
.ti -1c
.RI "template<typename InputIterator1 , typename InputIterator2 , typename Predicate > bool \fBlexicographical_compare\fP (InputIterator1 begin1, InputIterator1 end1, InputIterator2 begin2, InputIterator2 end2, Predicate pred, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename InputIterator1 , typename InputIterator2 > bool \fBlexicographical_compare\fP (InputIterator1 begin1, InputIterator1 end1, InputIterator2 begin2, InputIterator2 end2, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename _RAIter1 , typename _RAIter2 , typename _Predicate > bool \fBlexicographical_compare_switch\fP (_RAIter1, _RAIter1, _RAIter2, _RAIter2, _Predicate, \fBrandom_access_iterator_tag\fP, \fBrandom_access_iterator_tag\fP)"
.br
.ti -1c
.RI "template<typename _IIter1 , typename _IIter2 , typename _Predicate , typename _IterTag1 , typename _IterTag2 > bool \fBlexicographical_compare_switch\fP (_IIter1, _IIter1, _IIter2, _IIter2, _Predicate, _IterTag1, _IterTag2)"
.br
.ti -1c
.RI "template<typename RandomAccessIterator1 , typename RandomAccessIterator2 , typename Predicate > bool \fBlexicographical_compare_switch\fP (RandomAccessIterator1 begin1, RandomAccessIterator1 end1, RandomAccessIterator2 begin2, RandomAccessIterator2 end2, Predicate pred, \fBrandom_access_iterator_tag\fP, \fBrandom_access_iterator_tag\fP)"
.br
.ti -1c
.RI "template<typename InputIterator1 , typename InputIterator2 , typename Predicate , typename IteratorTag1 , typename IteratorTag2 > bool \fBlexicographical_compare_switch\fP (InputIterator1 begin1, InputIterator1 end1, InputIterator2 begin2, InputIterator2 end2, Predicate pred, IteratorTag1, IteratorTag2)"
.br
.ti -1c
.RI "template<typename _FIter , typename _Compare > _FIter \fBmax_element\fP (_FIter, _FIter, _Compare, \fB__gnu_parallel::_Parallelism\fP)"
.br
.ti -1c
.RI "template<typename _FIter , typename _Compare > _FIter \fBmax_element\fP (_FIter, _FIter, _Compare, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename _FIter , typename _Compare > _FIter \fBmax_element\fP (_FIter, _FIter, _Compare)"
.br
.ti -1c
.RI "template<typename _FIter > _FIter \fBmax_element\fP (_FIter, _FIter, \fB__gnu_parallel::_Parallelism\fP)"
.br
.ti -1c
.RI "template<typename _FIter > _FIter \fBmax_element\fP (_FIter, _FIter, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename _FIter > _FIter \fBmax_element\fP (_FIter, _FIter)"
.br
.ti -1c
.RI "template<typename ForwardIterator , typename Comparator > ForwardIterator \fBmax_element\fP (ForwardIterator begin, ForwardIterator end, Comparator comp)"
.br
.ti -1c
.RI "template<typename ForwardIterator , typename Comparator > ForwardIterator \fBmax_element\fP (ForwardIterator begin, ForwardIterator end, Comparator comp, \fB__gnu_parallel::_Parallelism\fP parallelism_tag)"
.br
.ti -1c
.RI "template<typename ForwardIterator > ForwardIterator \fBmax_element\fP (ForwardIterator begin, ForwardIterator end)"
.br
.ti -1c
.RI "template<typename ForwardIterator > ForwardIterator \fBmax_element\fP (ForwardIterator begin, ForwardIterator end, \fB__gnu_parallel::_Parallelism\fP parallelism_tag)"
.br
.ti -1c
.RI "template<typename ForwardIterator , typename Comparator > ForwardIterator \fBmax_element\fP (ForwardIterator begin, ForwardIterator end, Comparator comp, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename ForwardIterator > ForwardIterator \fBmax_element\fP (ForwardIterator begin, ForwardIterator end, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename _RAIter , typename _Compare > _RAIter \fBmax_element_switch\fP (_RAIter, _RAIter, _Compare, \fBrandom_access_iterator_tag\fP, \fB__gnu_parallel::_Parallelism\fP parallelism=__gnu_parallel::parallel_balanced)"
.br
.ti -1c
.RI "template<typename _FIter , typename _Compare , typename _IterTag > _FIter \fBmax_element_switch\fP (_FIter, _FIter, _Compare, _IterTag)"
.br
.ti -1c
.RI "template<typename RandomAccessIterator , typename Comparator > RandomAccessIterator \fBmax_element_switch\fP (RandomAccessIterator begin, RandomAccessIterator end, Comparator comp, \fBrandom_access_iterator_tag\fP, \fB__gnu_parallel::_Parallelism\fP parallelism_tag=__gnu_parallel::parallel_balanced)"
.br
.ti -1c
.RI "template<typename ForwardIterator , typename Comparator , typename IteratorTag > ForwardIterator \fBmax_element_switch\fP (ForwardIterator begin, ForwardIterator end, Comparator comp, IteratorTag)"
.br
.ti -1c
.RI "template<typename _IIter1 , typename _IIter2 , typename _OIter > _OIter \fBmerge\fP (_IIter1, _IIter1, _IIter2, _IIter2, _OIter)"
.br
.ti -1c
.RI "template<typename _IIter1 , typename _IIter2 , typename _OIter , typename _Compare > _OIter \fBmerge\fP (_IIter1, _IIter1, _IIter2, _IIter2, _OIter, _Compare)"
.br
.ti -1c
.RI "template<typename _IIter1 , typename _IIter2 , typename _OIter , typename _Compare > _OIter \fBmerge\fP (_IIter1, _IIter1, _IIter2, _IIter2, _OIter, _Compare, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename _IIter1 , typename _IIter2 , typename _OIter > _OIter \fBmerge\fP (_IIter1, _IIter1, _IIter2, _IIter2, _OIter, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename InputIterator1 , typename InputIterator2 , typename OutputIterator > OutputIterator \fBmerge\fP (InputIterator1 begin1, InputIterator1 end1, InputIterator2 begin2, InputIterator2 end2, OutputIterator result)"
.br
.ti -1c
.RI "template<typename InputIterator1 , typename InputIterator2 , typename OutputIterator , typename Comparator > OutputIterator \fBmerge\fP (InputIterator1 begin1, InputIterator1 end1, InputIterator2 begin2, InputIterator2 end2, OutputIterator result, Comparator comp)"
.br
.ti -1c
.RI "template<typename InputIterator1 , typename InputIterator2 , typename OutputIterator , typename Comparator > OutputIterator \fBmerge\fP (InputIterator1 begin1, InputIterator1 end1, InputIterator2 begin2, InputIterator2 end2, OutputIterator result, Comparator comp, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename InputIterator1 , typename InputIterator2 , typename OutputIterator > OutputIterator \fBmerge\fP (InputIterator1 begin1, InputIterator1 end1, InputIterator2 begin2, InputIterator2 end2, OutputIterator result, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename _IIter1 , typename _IIter2 , typename _OIter , typename _Compare > _OIter \fBmerge_switch\fP (_IIter1, _IIter1, _IIter2, _IIter2, _OIter, _Compare, \fBrandom_access_iterator_tag\fP, \fBrandom_access_iterator_tag\fP, \fBrandom_access_iterator_tag\fP)"
.br
.ti -1c
.RI "template<typename _IIter1 , typename _IIter2 , typename _OIter , typename _Compare , typename _IterTag1 , typename _IterTag2 , typename _IterTag3 > _OIter \fBmerge_switch\fP (_IIter1, _IIter1, _IIter2, _IIter2, _OIter, _Compare, _IterTag1, _IterTag2, _IterTag3)"
.br
.ti -1c
.RI "template<typename InputIterator1 , typename InputIterator2 , typename OutputIterator , typename Comparator > OutputIterator \fBmerge_switch\fP (InputIterator1 begin1, InputIterator1 end1, InputIterator2 begin2, InputIterator2 end2, OutputIterator result, Comparator comp, \fBrandom_access_iterator_tag\fP, \fBrandom_access_iterator_tag\fP, \fBrandom_access_iterator_tag\fP)"
.br
.ti -1c
.RI "template<typename InputIterator1 , typename InputIterator2 , typename OutputIterator , typename Comparator , typename IteratorTag1 , typename IteratorTag2 , typename IteratorTag3 > OutputIterator \fBmerge_switch\fP (InputIterator1 begin1, InputIterator1 end1, InputIterator2 begin2, InputIterator2 end2, OutputIterator result, Comparator comp, IteratorTag1, IteratorTag2, IteratorTag3)"
.br
.ti -1c
.RI "template<typename _FIter , typename _Compare > _FIter \fBmin_element\fP (_FIter, _FIter, _Compare, \fB__gnu_parallel::_Parallelism\fP)"
.br
.ti -1c
.RI "template<typename _FIter , typename _Compare > _FIter \fBmin_element\fP (_FIter, _FIter, _Compare, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename _FIter , typename _Compare > _FIter \fBmin_element\fP (_FIter, _FIter, _Compare)"
.br
.ti -1c
.RI "template<typename _FIter > _FIter \fBmin_element\fP (_FIter, _FIter, \fB__gnu_parallel::_Parallelism\fP parallelism_tag)"
.br
.ti -1c
.RI "template<typename _FIter > _FIter \fBmin_element\fP (_FIter, _FIter, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename _FIter > _FIter \fBmin_element\fP (_FIter, _FIter)"
.br
.ti -1c
.RI "template<typename ForwardIterator , typename Comparator > ForwardIterator \fBmin_element\fP (ForwardIterator begin, ForwardIterator end, Comparator comp)"
.br
.ti -1c
.RI "template<typename ForwardIterator , typename Comparator > ForwardIterator \fBmin_element\fP (ForwardIterator begin, ForwardIterator end, Comparator comp, \fB__gnu_parallel::_Parallelism\fP parallelism_tag)"
.br
.ti -1c
.RI "template<typename ForwardIterator > ForwardIterator \fBmin_element\fP (ForwardIterator begin, ForwardIterator end)"
.br
.ti -1c
.RI "template<typename ForwardIterator > ForwardIterator \fBmin_element\fP (ForwardIterator begin, ForwardIterator end, \fB__gnu_parallel::_Parallelism\fP parallelism_tag)"
.br
.ti -1c
.RI "template<typename ForwardIterator , typename Comparator > ForwardIterator \fBmin_element\fP (ForwardIterator begin, ForwardIterator end, Comparator comp, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename ForwardIterator > ForwardIterator \fBmin_element\fP (ForwardIterator begin, ForwardIterator end, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename _RAIter , typename _Compare > _RAIter \fBmin_element_switch\fP (_RAIter, _RAIter, _Compare, \fBrandom_access_iterator_tag\fP, \fB__gnu_parallel::_Parallelism\fP parallelism=__gnu_parallel::parallel_balanced)"
.br
.ti -1c
.RI "template<typename _FIter , typename _Compare , typename _IterTag > _FIter \fBmin_element_switch\fP (_FIter, _FIter, _Compare, _IterTag)"
.br
.ti -1c
.RI "template<typename RandomAccessIterator , typename Comparator > RandomAccessIterator \fBmin_element_switch\fP (RandomAccessIterator begin, RandomAccessIterator end, Comparator comp, \fBrandom_access_iterator_tag\fP, \fB__gnu_parallel::_Parallelism\fP parallelism_tag=__gnu_parallel::parallel_balanced)"
.br
.ti -1c
.RI "template<typename ForwardIterator , typename Comparator , typename IteratorTag > ForwardIterator \fBmin_element_switch\fP (ForwardIterator begin, ForwardIterator end, Comparator comp, IteratorTag)"
.br
.ti -1c
.RI "template<typename _IIter1 , typename _IIter2 , typename _Predicate > \fBpair\fP< _IIter1, _IIter2 > \fBmismatch\fP (_IIter1, _IIter1, _IIter2, _Predicate)"
.br
.ti -1c
.RI "template<typename _IIter1 , typename _IIter2 > \fBpair\fP< _IIter1, _IIter2 > \fBmismatch\fP (_IIter1, _IIter1, _IIter2)"
.br
.ti -1c
.RI "template<typename _IIter1 , typename _IIter2 , typename _Predicate > \fBpair\fP< _IIter1, _IIter2 > \fBmismatch\fP (_IIter1, _IIter1, _IIter2, _Predicate, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename _IIter1 , typename _IIter2 > \fBpair\fP< _IIter1, _IIter2 > \fBmismatch\fP (_IIter1, _IIter1, _IIter2, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename InputIterator1 , typename InputIterator2 , typename Predicate > \fBpair\fP< InputIterator1, InputIterator2 > \fBmismatch\fP (InputIterator1 begin1, InputIterator1 end1, InputIterator2 begin2, Predicate pred)"
.br
.ti -1c
.RI "template<typename InputIterator1 , typename InputIterator2 > \fBpair\fP< InputIterator1, InputIterator2 > \fBmismatch\fP (InputIterator1 begin1, InputIterator1 end1, InputIterator2 begin2)"
.br
.ti -1c
.RI "template<typename InputIterator1 , typename InputIterator2 , typename Predicate > \fBpair\fP< InputIterator1, InputIterator2 > \fBmismatch\fP (InputIterator1 begin1, InputIterator1 end1, InputIterator2 begin2, Predicate pred, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename InputIterator1 , typename InputIterator2 > \fBpair\fP< InputIterator1, InputIterator2 > \fBmismatch\fP (InputIterator1 begin1, InputIterator1 end1, InputIterator2 begin2, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename _RAIter1 , typename _RAIter2 , typename _Predicate > \fBpair\fP< _RAIter1, _RAIter2 > \fBmismatch_switch\fP (_RAIter1, _RAIter1, _RAIter2, _Predicate, \fBrandom_access_iterator_tag\fP, \fBrandom_access_iterator_tag\fP)"
.br
.ti -1c
.RI "template<typename _IIter1 , typename _IIter2 , typename _Predicate , typename _IterTag1 , typename _IterTag2 > \fBpair\fP< _IIter1, _IIter2 > \fBmismatch_switch\fP (_IIter1, _IIter1, _IIter2, _Predicate, _IterTag1, _IterTag2)"
.br
.ti -1c
.RI "template<typename RandomAccessIterator1 , typename RandomAccessIterator2 , typename Predicate > \fBpair\fP< RandomAccessIterator1, RandomAccessIterator2 > \fBmismatch_switch\fP (RandomAccessIterator1 begin1, RandomAccessIterator1 end1, RandomAccessIterator2 begin2, Predicate pred, \fBrandom_access_iterator_tag\fP, \fBrandom_access_iterator_tag\fP)"
.br
.ti -1c
.RI "template<typename InputIterator1 , typename InputIterator2 , typename Predicate , typename IteratorTag1 , typename IteratorTag2 > \fBpair\fP< InputIterator1, InputIterator2 > \fBmismatch_switch\fP (InputIterator1 begin1, InputIterator1 end1, InputIterator2 begin2, Predicate pred, IteratorTag1, IteratorTag2)"
.br
.ti -1c
.RI "template<typename _RAIter > void \fBnth_element\fP (_RAIter, _RAIter, _RAIter)"
.br
.ti -1c
.RI "template<typename _RAIter , typename _Compare > void \fBnth_element\fP (_RAIter, _RAIter, _RAIter, _Compare)"
.br
.ti -1c
.RI "template<typename _RAIter , typename _Compare > void \fBnth_element\fP (_RAIter, _RAIter, _RAIter, _Compare, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename _RAIter > void \fBnth_element\fP (_RAIter, _RAIter, _RAIter, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename RandomAccessIterator > void \fBnth_element\fP (RandomAccessIterator begin, RandomAccessIterator nth, RandomAccessIterator end)"
.br
.ti -1c
.RI "template<typename RandomAccessIterator , typename Comparator > void \fBnth_element\fP (RandomAccessIterator begin, RandomAccessIterator nth, RandomAccessIterator end, Comparator comp)"
.br
.ti -1c
.RI "template<typename RandomAccessIterator , typename Comparator > void \fBnth_element\fP (RandomAccessIterator begin, RandomAccessIterator nth, RandomAccessIterator end, Comparator comp, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename RandomAccessIterator > void \fBnth_element\fP (RandomAccessIterator begin, RandomAccessIterator nth, RandomAccessIterator end, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename _RAIter > void \fBpartial_sort\fP (_RAIter, _RAIter, _RAIter)"
.br
.ti -1c
.RI "template<typename _RAIter , typename _Compare > void \fBpartial_sort\fP (_RAIter, _RAIter, _RAIter, _Compare)"
.br
.ti -1c
.RI "template<typename _RAIter > void \fBpartial_sort\fP (_RAIter, _RAIter, _RAIter, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename _RAIter , typename _Compare > void \fBpartial_sort\fP (_RAIter, _RAIter, _RAIter, _Compare, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename RandomAccessIterator > void \fBpartial_sort\fP (RandomAccessIterator begin, RandomAccessIterator middle, RandomAccessIterator end)"
.br
.ti -1c
.RI "template<typename RandomAccessIterator , typename _Compare > void \fBpartial_sort\fP (RandomAccessIterator begin, RandomAccessIterator middle, RandomAccessIterator end, _Compare comp)"
.br
.ti -1c
.RI "template<typename RandomAccessIterator > void \fBpartial_sort\fP (RandomAccessIterator begin, RandomAccessIterator middle, RandomAccessIterator end, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename RandomAccessIterator , typename _Compare > void \fBpartial_sort\fP (RandomAccessIterator begin, RandomAccessIterator middle, RandomAccessIterator end, _Compare comp, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename _IIter , typename _OIter , typename _BinaryOper > _OIter \fBpartial_sum\fP (_IIter, _IIter, _OIter, _BinaryOper)"
.br
.ti -1c
.RI "template<typename _IIter , typename _OIter > _OIter \fBpartial_sum\fP (_IIter, _IIter, _OIter result)"
.br
.ti -1c
.RI "template<typename _IIter , typename _OIter , typename _BinaryOper > _OIter \fBpartial_sum\fP (_IIter, _IIter, _OIter, _BinaryOper, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename _IIter , typename _OIter > _OIter \fBpartial_sum\fP (_IIter, _IIter, _OIter, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename InputIterator , typename OutputIterator , typename BinaryOperation > OutputIterator \fBpartial_sum\fP (InputIterator begin, InputIterator end, OutputIterator result, BinaryOperation binary_op)"
.br
.ti -1c
.RI "template<typename InputIterator , typename OutputIterator > OutputIterator \fBpartial_sum\fP (InputIterator begin, InputIterator end, OutputIterator result)"
.br
.ti -1c
.RI "template<typename InputIterator , typename OutputIterator , typename BinaryOperation > OutputIterator \fBpartial_sum\fP (InputIterator begin, InputIterator end, OutputIterator result, BinaryOperation bin_op, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename InputIterator , typename OutputIterator > OutputIterator \fBpartial_sum\fP (InputIterator begin, InputIterator end, OutputIterator result, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename _IIter , typename _OIter , typename _BinaryOper > _OIter \fBpartial_sum_switch\fP (_IIter, _IIter, _OIter, _BinaryOper, \fBrandom_access_iterator_tag\fP, \fBrandom_access_iterator_tag\fP)"
.br
.ti -1c
.RI "template<typename _IIter , typename _OIter , typename _BinaryOper , typename _Tag1 , typename _Tag2 > _OIter \fBpartial_sum_switch\fP (_IIter, _IIter, _OIter, _BinaryOper, _Tag1, _Tag2)"
.br
.ti -1c
.RI "template<typename InputIterator , typename OutputIterator , typename BinaryOperation > OutputIterator \fBpartial_sum_switch\fP (InputIterator begin, InputIterator end, OutputIterator result, BinaryOperation bin_op, \fBrandom_access_iterator_tag\fP, \fBrandom_access_iterator_tag\fP)"
.br
.ti -1c
.RI "template<typename InputIterator , typename OutputIterator , typename BinaryOperation , typename IteratorTag1 , typename IteratorTag2 > OutputIterator \fBpartial_sum_switch\fP (InputIterator begin, InputIterator end, OutputIterator result, BinaryOperation bin_op, IteratorTag1, IteratorTag2)"
.br
.ti -1c
.RI "template<typename _FIter , typename Predicate > _FIter \fBpartition\fP (_FIter, _FIter, Predicate)"
.br
.ti -1c
.RI "template<typename _FIter , typename Predicate > _FIter \fBpartition\fP (_FIter, _FIter, Predicate, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename ForwardIterator , typename Predicate > ForwardIterator \fBpartition\fP (ForwardIterator begin, ForwardIterator end, Predicate pred)"
.br
.ti -1c
.RI "template<typename ForwardIterator , typename Predicate > ForwardIterator \fBpartition\fP (ForwardIterator begin, ForwardIterator end, Predicate pred, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename _RAIter , typename Predicate > _RAIter \fBpartition_switch\fP (_RAIter, _RAIter, Predicate, \fBrandom_access_iterator_tag\fP)"
.br
.ti -1c
.RI "template<typename _FIter , typename Predicate , typename _IterTag > _FIter \fBpartition_switch\fP (_FIter, _FIter, Predicate, _IterTag)"
.br
.ti -1c
.RI "template<typename RandomAccessIterator , typename Predicate > RandomAccessIterator \fBpartition_switch\fP (RandomAccessIterator begin, RandomAccessIterator end, Predicate pred, \fBrandom_access_iterator_tag\fP)"
.br
.ti -1c
.RI "template<typename ForwardIterator , typename Predicate , typename IteratorTag > ForwardIterator \fBpartition_switch\fP (ForwardIterator begin, ForwardIterator end, Predicate pred, IteratorTag)"
.br
.ti -1c
.RI "template<typename _RAIter , typename _RandomNumberGenerator > void \fBrandom_shuffle\fP (_RAIter, _RAIter, _RandomNumberGenerator &)"
.br
.ti -1c
.RI "template<typename _RAIter > void \fBrandom_shuffle\fP (_RAIter, _RAIter)"
.br
.ti -1c
.RI "template<typename _RAIter , typename _RandomNumberGenerator > void \fBrandom_shuffle\fP (_RAIter, _RAIter, _RandomNumberGenerator &, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename _RAIter > void \fBrandom_shuffle\fP (_RAIter, _RAIter, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename RandomAccessIterator , typename RandomNumberGenerator > void \fBrandom_shuffle\fP (RandomAccessIterator begin, RandomAccessIterator end, RandomNumberGenerator &rand)"
.br
.ti -1c
.RI "template<typename RandomAccessIterator > void \fBrandom_shuffle\fP (RandomAccessIterator begin, RandomAccessIterator end)"
.br
.ti -1c
.RI "template<typename RandomAccessIterator , typename RandomNumberGenerator > void \fBrandom_shuffle\fP (RandomAccessIterator begin, RandomAccessIterator end, RandomNumberGenerator &rand, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename RandomAccessIterator > void \fBrandom_shuffle\fP (RandomAccessIterator begin, RandomAccessIterator end, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename _FIter , typename _Tp > void \fBreplace\fP (_FIter, _FIter, const _Tp &, const _Tp &, \fB__gnu_parallel::_Parallelism\fP)"
.br
.ti -1c
.RI "template<typename _FIter , typename _Tp > void \fBreplace\fP (_FIter, _FIter, const _Tp &, const _Tp &, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename _FIter , typename _Tp > void \fBreplace\fP (_FIter, _FIter, const _Tp &, const _Tp &)"
.br
.ti -1c
.RI "template<typename ForwardIterator , typename T > void \fBreplace\fP (ForwardIterator begin, ForwardIterator end, const T &old_value, const T &new_value)"
.br
.ti -1c
.RI "template<typename ForwardIterator , typename T > void \fBreplace\fP (ForwardIterator begin, ForwardIterator end, const T &old_value, const T &new_value, \fB__gnu_parallel::_Parallelism\fP parallelism_tag)"
.br
.ti -1c
.RI "template<typename ForwardIterator , typename T > void \fBreplace\fP (ForwardIterator begin, ForwardIterator end, const T &old_value, const T &new_value, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename _FIter , typename _Predicate , typename _Tp > void \fBreplace_if\fP (_FIter, _FIter, _Predicate, const _Tp &, \fB__gnu_parallel::_Parallelism\fP)"
.br
.ti -1c
.RI "template<typename _FIter , typename _Predicate , typename _Tp > void \fBreplace_if\fP (_FIter, _FIter, _Predicate, const _Tp &, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename _FIter , typename _Predicate , typename _Tp > void \fBreplace_if\fP (_FIter, _FIter, _Predicate, const _Tp &)"
.br
.ti -1c
.RI "template<typename ForwardIterator , typename Predicate , typename T > void \fBreplace_if\fP (ForwardIterator begin, ForwardIterator end, Predicate pred, const T &new_value)"
.br
.ti -1c
.RI "template<typename ForwardIterator , typename Predicate , typename T > void \fBreplace_if\fP (ForwardIterator begin, ForwardIterator end, Predicate pred, const T &new_value, \fB__gnu_parallel::_Parallelism\fP parallelism_tag)"
.br
.ti -1c
.RI "template<typename ForwardIterator , typename Predicate , typename T > void \fBreplace_if\fP (ForwardIterator begin, ForwardIterator end, Predicate pred, const T &new_value, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename _RAIter , typename _Predicate , typename _Tp > void \fBreplace_if_switch\fP (_RAIter, _RAIter, _Predicate, const _Tp &, \fBrandom_access_iterator_tag\fP, \fB__gnu_parallel::_Parallelism\fP)"
.br
.ti -1c
.RI "template<typename _FIter , typename _Predicate , typename _Tp , typename _IterTag > void \fBreplace_if_switch\fP (_FIter, _FIter, _Predicate, const _Tp &, _IterTag)"
.br
.ti -1c
.RI "template<typename RandomAccessIterator , typename Predicate , typename T > void \fBreplace_if_switch\fP (RandomAccessIterator begin, RandomAccessIterator end, Predicate pred, const T &new_value, \fBrandom_access_iterator_tag\fP, \fB__gnu_parallel::_Parallelism\fP parallelism_tag=__gnu_parallel::parallel_balanced)"
.br
.ti -1c
.RI "template<typename ForwardIterator , typename Predicate , typename T , typename IteratorTag > void \fBreplace_if_switch\fP (ForwardIterator begin, ForwardIterator end, Predicate pred, const T &new_value, IteratorTag)"
.br
.ti -1c
.RI "template<typename _RAIter , typename _Tp > void \fBreplace_switch\fP (_RAIter, _RAIter, const _Tp &, const _Tp &, \fBrandom_access_iterator_tag\fP, \fB__gnu_parallel::_Parallelism\fP)"
.br
.ti -1c
.RI "template<typename _FIter , typename _Tp , typename _IterTag > void \fBreplace_switch\fP (_FIter, _FIter, const _Tp &, const _Tp &, _IterTag)"
.br
.ti -1c
.RI "template<typename RandomAccessIterator , typename T > void \fBreplace_switch\fP (RandomAccessIterator begin, RandomAccessIterator end, const T &old_value, const T &new_value, \fBrandom_access_iterator_tag\fP, \fB__gnu_parallel::_Parallelism\fP parallelism_tag=__gnu_parallel::parallel_balanced)"
.br
.ti -1c
.RI "template<typename ForwardIterator , typename T , typename IteratorTag > void \fBreplace_switch\fP (ForwardIterator begin, ForwardIterator end, const T &old_value, const T &new_value, IteratorTag)"
.br
.ti -1c
.RI "template<typename _FIter1 , typename _FIter2 , typename _BiPredicate > _FIter1 \fBsearch\fP (_FIter1, _FIter1, _FIter2, _FIter2, _BiPredicate)"
.br
.ti -1c
.RI "template<typename _FIter1 , typename _FIter2 , typename _BiPredicate > _FIter1 \fBsearch\fP (_FIter1, _FIter1, _FIter2, _FIter2, _BiPredicate, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename _FIter1 , typename _FIter2 > _FIter1 \fBsearch\fP (_FIter1, _FIter1, _FIter2, _FIter2)"
.br
.ti -1c
.RI "template<typename _FIter1 , typename _FIter2 > _FIter1 \fBsearch\fP (_FIter1, _FIter1, _FIter2, _FIter2, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename ForwardIterator1 , typename ForwardIterator2 , typename BinaryPredicate > ForwardIterator1 \fBsearch\fP (ForwardIterator1 begin1, ForwardIterator1 end1, ForwardIterator2 begin2, ForwardIterator2 end2, BinaryPredicate pred)"
.br
.ti -1c
.RI "template<typename ForwardIterator1 , typename ForwardIterator2 , typename BinaryPredicate > ForwardIterator1 \fBsearch\fP (ForwardIterator1 begin1, ForwardIterator1 end1, ForwardIterator2 begin2, ForwardIterator2 end2, BinaryPredicate pred, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename ForwardIterator1 , typename ForwardIterator2 > ForwardIterator1 \fBsearch\fP (ForwardIterator1 begin1, ForwardIterator1 end1, ForwardIterator2 begin2, ForwardIterator2 end2)"
.br
.ti -1c
.RI "template<typename ForwardIterator1 , typename ForwardIterator2 > ForwardIterator1 \fBsearch\fP (ForwardIterator1 begin1, ForwardIterator1 end1, ForwardIterator2 begin2, ForwardIterator2 end2, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename _FIter , typename _Integer , typename _Tp , typename _BiPredicate > _FIter \fBsearch_n\fP (_FIter, _FIter, _Integer, const _Tp &, _BiPredicate)"
.br
.ti -1c
.RI "template<typename _FIter , typename _Integer , typename _Tp > _FIter \fBsearch_n\fP (_FIter, _FIter, _Integer, const _Tp &)"
.br
.ti -1c
.RI "template<typename _FIter , typename _Integer , typename _Tp , typename _BiPredicate > _FIter \fBsearch_n\fP (_FIter, _FIter, _Integer, const _Tp &, _BiPredicate, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename _FIter , typename _Integer , typename _Tp > _FIter \fBsearch_n\fP (_FIter, _FIter, _Integer, const _Tp &, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename ForwardIterator , typename Integer , typename T , typename BinaryPredicate > ForwardIterator \fBsearch_n\fP (ForwardIterator begin, ForwardIterator end, Integer count, const T &val, BinaryPredicate binary_pred)"
.br
.ti -1c
.RI "template<typename ForwardIterator , typename Integer , typename T > ForwardIterator \fBsearch_n\fP (ForwardIterator begin, ForwardIterator end, Integer count, const T &val)"
.br
.ti -1c
.RI "template<typename ForwardIterator , typename Integer , typename T , typename BinaryPredicate > ForwardIterator \fBsearch_n\fP (ForwardIterator begin, ForwardIterator end, Integer count, const T &val, BinaryPredicate binary_pred, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename ForwardIterator , typename Integer , typename T > ForwardIterator \fBsearch_n\fP (ForwardIterator begin, ForwardIterator end, Integer count, const T &val, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename _FIter , typename _Integer , typename _Tp , typename _BiPredicate , typename _IterTag > _FIter \fBsearch_n_switch\fP (_FIter, _FIter, _Integer, const _Tp &, _BiPredicate, _IterTag)"
.br
.ti -1c
.RI "template<typename _RAIter , typename _Integer , typename _Tp , typename _BiPredicate > _RAIter \fBsearch_n_switch\fP (_RAIter, _RAIter, _Integer, const _Tp &, _BiPredicate, \fBrandom_access_iterator_tag\fP)"
.br
.ti -1c
.RI "template<typename ForwardIterator , typename Integer , typename T , typename BinaryPredicate , typename IteratorTag > ForwardIterator \fBsearch_n_switch\fP (ForwardIterator begin, ForwardIterator end, Integer count, const T &val, BinaryPredicate binary_pred, IteratorTag)"
.br
.ti -1c
.RI "template<typename RandomAccessIterator , typename Integer , typename T , typename BinaryPredicate > RandomAccessIterator \fBsearch_n_switch\fP (RandomAccessIterator begin, RandomAccessIterator end, Integer count, const T &val, BinaryPredicate binary_pred, \fBrandom_access_iterator_tag\fP)"
.br
.ti -1c
.RI "template<typename _FIter1 , typename _FIter2 , typename _BiPredicate , typename _IterTag1 , typename _IterTag2 > _FIter1 \fBsearch_switch\fP (_FIter1, _FIter1, _FIter2, _FIter2, _BiPredicate, _IterTag1, _IterTag2)"
.br
.ti -1c
.RI "template<typename _RAIter1 , typename _RAIter2 , typename _BiPredicate > _RAIter1 \fBsearch_switch\fP (_RAIter1, _RAIter1, _RAIter2, _RAIter2, _BiPredicate, \fBrandom_access_iterator_tag\fP, \fBrandom_access_iterator_tag\fP)"
.br
.ti -1c
.RI "template<typename _FIter1 , typename _FIter2 , typename _IterTag1 , typename _IterTag2 > _FIter1 \fBsearch_switch\fP (_FIter1, _FIter1, _FIter2, _FIter2, _IterTag1, _IterTag2)"
.br
.ti -1c
.RI "template<typename _RAIter1 , typename _RAIter2 > _RAIter1 \fBsearch_switch\fP (_RAIter1, _RAIter1, _RAIter2, _RAIter2, \fBrandom_access_iterator_tag\fP, \fBrandom_access_iterator_tag\fP)"
.br
.ti -1c
.RI "template<typename ForwardIterator1 , typename ForwardIterator2 , typename BinaryPredicate , typename IteratorTag1 , typename IteratorTag2 > ForwardIterator1 \fBsearch_switch\fP (ForwardIterator1 begin1, ForwardIterator1 end1, ForwardIterator2 begin2, ForwardIterator2 end2, BinaryPredicate pred, IteratorTag1, IteratorTag2)"
.br
.ti -1c
.RI "template<typename RandomAccessIterator1 , typename RandomAccessIterator2 , typename BinaryPredicate > RandomAccessIterator1 \fBsearch_switch\fP (RandomAccessIterator1 begin1, RandomAccessIterator1 end1, RandomAccessIterator2 begin2, RandomAccessIterator2 end2, BinaryPredicate pred, \fBrandom_access_iterator_tag\fP, \fBrandom_access_iterator_tag\fP)"
.br
.ti -1c
.RI "template<typename ForwardIterator1 , typename ForwardIterator2 , typename IteratorTag1 , typename IteratorTag2 > ForwardIterator1 \fBsearch_switch\fP (ForwardIterator1 begin1, ForwardIterator1 end1, ForwardIterator2 begin2, ForwardIterator2 end2, IteratorTag1, IteratorTag2)"
.br
.ti -1c
.RI "template<typename RandomAccessIterator1 , typename RandomAccessIterator2 > RandomAccessIterator1 \fBsearch_switch\fP (RandomAccessIterator1 begin1, RandomAccessIterator1 end1, RandomAccessIterator2 begin2, RandomAccessIterator2 end2, \fBrandom_access_iterator_tag\fP, \fBrandom_access_iterator_tag\fP)"
.br
.ti -1c
.RI "template<typename _IIter1 , typename _IIter2 , typename _OIter , typename _Predicate > _OIter \fBset_difference\fP (_IIter1, _IIter1, _IIter2, _IIter2, _OIter, _Predicate)"
.br
.ti -1c
.RI "template<typename _IIter1 , typename _IIter2 , typename _OIter > _OIter \fBset_difference\fP (_IIter1, _IIter1, _IIter2, _IIter2, _OIter)"
.br
.ti -1c
.RI "template<typename _IIter1 , typename _IIter2 , typename _OIter , typename _Predicate > _OIter \fBset_difference\fP (_IIter1, _IIter1, _IIter2, _IIter2, _OIter, _Predicate, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename _IIter1 , typename _IIter2 , typename _OIter > _OIter \fBset_difference\fP (_IIter1, _IIter1, _IIter2, _IIter2, _OIter, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename InputIterator1 , typename InputIterator2 , typename OutputIterator , typename Predicate > OutputIterator \fBset_difference\fP (InputIterator1 begin1, InputIterator1 end1, InputIterator2 begin2, InputIterator2 end2, OutputIterator out, Predicate pred)"
.br
.ti -1c
.RI "template<typename InputIterator1 , typename InputIterator2 , typename OutputIterator > OutputIterator \fBset_difference\fP (InputIterator1 begin1, InputIterator1 end1, InputIterator2 begin2, InputIterator2 end2, OutputIterator out)"
.br
.ti -1c
.RI "template<typename InputIterator1 , typename InputIterator2 , typename OutputIterator , typename Predicate > OutputIterator \fBset_difference\fP (InputIterator1 begin1, InputIterator1 end1, InputIterator2 begin2, InputIterator2 end2, OutputIterator out, Predicate pred, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename InputIterator1 , typename InputIterator2 , typename OutputIterator > OutputIterator \fBset_difference\fP (InputIterator1 begin1, InputIterator1 end1, InputIterator2 begin2, InputIterator2 end2, OutputIterator out, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename _RAIter1 , typename _RAIter2 , typename _Output_RAIter , typename _Predicate > _Output_RAIter \fBset_difference_switch\fP (_RAIter1, _RAIter1, _RAIter2, _RAIter2, _Output_RAIter, _Predicate, \fBrandom_access_iterator_tag\fP, \fBrandom_access_iterator_tag\fP, \fBrandom_access_iterator_tag\fP)"
.br
.ti -1c
.RI "template<typename _IIter1 , typename _IIter2 , typename _Predicate , typename _OIter , typename _IterTag1 , typename _IterTag2 , typename _IterTag3 > _OIter \fBset_difference_switch\fP (_IIter1, _IIter1, _IIter2, _IIter2, _OIter, _Predicate, _IterTag1, _IterTag2, _IterTag3)"
.br
.ti -1c
.RI "template<typename RandomAccessIterator1 , typename RandomAccessIterator2 , typename OutputRandomAccessIterator , typename Predicate > OutputRandomAccessIterator \fBset_difference_switch\fP (RandomAccessIterator1 begin1, RandomAccessIterator1 end1, RandomAccessIterator2 begin2, RandomAccessIterator2 end2, OutputRandomAccessIterator result, Predicate pred, \fBrandom_access_iterator_tag\fP, \fBrandom_access_iterator_tag\fP, \fBrandom_access_iterator_tag\fP)"
.br
.ti -1c
.RI "template<typename InputIterator1 , typename InputIterator2 , typename Predicate , typename OutputIterator , typename IteratorTag1 , typename IteratorTag2 , typename IteratorTag3 > OutputIterator \fBset_difference_switch\fP (InputIterator1 begin1, InputIterator1 end1, InputIterator2 begin2, InputIterator2 end2, OutputIterator result, Predicate pred, IteratorTag1, IteratorTag2, IteratorTag3)"
.br
.ti -1c
.RI "template<typename _IIter1 , typename _IIter2 , typename _OIter , typename _Predicate > _OIter \fBset_intersection\fP (_IIter1, _IIter1, _IIter2, _IIter2, _OIter, _Predicate)"
.br
.ti -1c
.RI "template<typename _IIter1 , typename _IIter2 , typename _OIter > _OIter \fBset_intersection\fP (_IIter1, _IIter1, _IIter2, _IIter2, _OIter)"
.br
.ti -1c
.RI "template<typename _IIter1 , typename _IIter2 , typename _OIter , typename _Predicate > _OIter \fBset_intersection\fP (_IIter1, _IIter1, _IIter2, _IIter2, _OIter, _Predicate, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename _IIter1 , typename _IIter2 , typename _OIter > _OIter \fBset_intersection\fP (_IIter1, _IIter1, _IIter2, _IIter2, _OIter, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename InputIterator1 , typename InputIterator2 , typename OutputIterator , typename Predicate > OutputIterator \fBset_intersection\fP (InputIterator1 begin1, InputIterator1 end1, InputIterator2 begin2, InputIterator2 end2, OutputIterator out, Predicate pred)"
.br
.ti -1c
.RI "template<typename InputIterator1 , typename InputIterator2 , typename OutputIterator > OutputIterator \fBset_intersection\fP (InputIterator1 begin1, InputIterator1 end1, InputIterator2 begin2, InputIterator2 end2, OutputIterator out)"
.br
.ti -1c
.RI "template<typename InputIterator1 , typename InputIterator2 , typename OutputIterator , typename Predicate > OutputIterator \fBset_intersection\fP (InputIterator1 begin1, InputIterator1 end1, InputIterator2 begin2, InputIterator2 end2, OutputIterator out, Predicate pred, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename InputIterator1 , typename InputIterator2 , typename OutputIterator > OutputIterator \fBset_intersection\fP (InputIterator1 begin1, InputIterator1 end1, InputIterator2 begin2, InputIterator2 end2, OutputIterator out, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename _RAIter1 , typename _RAIter2 , typename _Output_RAIter , typename _Predicate > _Output_RAIter \fBset_intersection_switch\fP (_RAIter1, _RAIter1, _RAIter2, _RAIter2, _Output_RAIter, _Predicate, \fBrandom_access_iterator_tag\fP, \fBrandom_access_iterator_tag\fP, \fBrandom_access_iterator_tag\fP)"
.br
.ti -1c
.RI "template<typename _IIter1 , typename _IIter2 , typename _Predicate , typename _OIter , typename _IterTag1 , typename _IterTag2 , typename _IterTag3 > _OIter \fBset_intersection_switch\fP (_IIter1, _IIter1, _IIter2, _IIter2, _OIter, _Predicate, _IterTag1, _IterTag2, _IterTag3)"
.br
.ti -1c
.RI "template<typename RandomAccessIterator1 , typename RandomAccessIterator2 , typename OutputRandomAccessIterator , typename Predicate > OutputRandomAccessIterator \fBset_intersection_switch\fP (RandomAccessIterator1 begin1, RandomAccessIterator1 end1, RandomAccessIterator2 begin2, RandomAccessIterator2 end2, OutputRandomAccessIterator result, Predicate pred, \fBrandom_access_iterator_tag\fP, \fBrandom_access_iterator_tag\fP, \fBrandom_access_iterator_tag\fP)"
.br
.ti -1c
.RI "template<typename InputIterator1 , typename InputIterator2 , typename Predicate , typename OutputIterator , typename IteratorTag1 , typename IteratorTag2 , typename IteratorTag3 > OutputIterator \fBset_intersection_switch\fP (InputIterator1 begin1, InputIterator1 end1, InputIterator2 begin2, InputIterator2 end2, OutputIterator result, Predicate pred, IteratorTag1, IteratorTag2, IteratorTag3)"
.br
.ti -1c
.RI "template<typename _IIter1 , typename _IIter2 , typename _OIter , typename _Predicate > _OIter \fBset_symmetric_difference\fP (_IIter1, _IIter1, _IIter2, _IIter2, _OIter, _Predicate)"
.br
.ti -1c
.RI "template<typename _IIter1 , typename _IIter2 , typename _OIter > _OIter \fBset_symmetric_difference\fP (_IIter1, _IIter1, _IIter2, _IIter2, _OIter)"
.br
.ti -1c
.RI "template<typename _IIter1 , typename _IIter2 , typename _OIter , typename _Predicate > _OIter \fBset_symmetric_difference\fP (_IIter1, _IIter1, _IIter2, _IIter2, _OIter, _Predicate, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename _IIter1 , typename _IIter2 , typename _OIter > _OIter \fBset_symmetric_difference\fP (_IIter1, _IIter1, _IIter2, _IIter2, _OIter, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename InputIterator1 , typename InputIterator2 , typename OutputIterator , typename Predicate > OutputIterator \fBset_symmetric_difference\fP (InputIterator1 begin1, InputIterator1 end1, InputIterator2 begin2, InputIterator2 end2, OutputIterator out, Predicate pred)"
.br
.ti -1c
.RI "template<typename InputIterator1 , typename InputIterator2 , typename OutputIterator > OutputIterator \fBset_symmetric_difference\fP (InputIterator1 begin1, InputIterator1 end1, InputIterator2 begin2, InputIterator2 end2, OutputIterator out)"
.br
.ti -1c
.RI "template<typename InputIterator1 , typename InputIterator2 , typename OutputIterator , typename Predicate > OutputIterator \fBset_symmetric_difference\fP (InputIterator1 begin1, InputIterator1 end1, InputIterator2 begin2, InputIterator2 end2, OutputIterator out, Predicate pred, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename InputIterator1 , typename InputIterator2 , typename OutputIterator > OutputIterator \fBset_symmetric_difference\fP (InputIterator1 begin1, InputIterator1 end1, InputIterator2 begin2, InputIterator2 end2, OutputIterator out, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename _RAIter1 , typename _RAIter2 , typename _Output_RAIter , typename _Predicate > _Output_RAIter \fBset_symmetric_difference_switch\fP (_RAIter1, _RAIter1, _RAIter2, _RAIter2, _Output_RAIter, _Predicate, \fBrandom_access_iterator_tag\fP, \fBrandom_access_iterator_tag\fP, \fBrandom_access_iterator_tag\fP)"
.br
.ti -1c
.RI "template<typename _IIter1 , typename _IIter2 , typename _Predicate , typename _OIter , typename _IterTag1 , typename _IterTag2 , typename _IterTag3 > _OIter \fBset_symmetric_difference_switch\fP (_IIter1, _IIter1, _IIter2, _IIter2, _OIter, _Predicate, _IterTag1, _IterTag2, _IterTag3)"
.br
.ti -1c
.RI "template<typename RandomAccessIterator1 , typename RandomAccessIterator2 , typename OutputRandomAccessIterator , typename Predicate > OutputRandomAccessIterator \fBset_symmetric_difference_switch\fP (RandomAccessIterator1 begin1, RandomAccessIterator1 end1, RandomAccessIterator2 begin2, RandomAccessIterator2 end2, OutputRandomAccessIterator result, Predicate pred, \fBrandom_access_iterator_tag\fP, \fBrandom_access_iterator_tag\fP, \fBrandom_access_iterator_tag\fP)"
.br
.ti -1c
.RI "template<typename InputIterator1 , typename InputIterator2 , typename Predicate , typename OutputIterator , typename IteratorTag1 , typename IteratorTag2 , typename IteratorTag3 > OutputIterator \fBset_symmetric_difference_switch\fP (InputIterator1 begin1, InputIterator1 end1, InputIterator2 begin2, InputIterator2 end2, OutputIterator result, Predicate pred, IteratorTag1, IteratorTag2, IteratorTag3)"
.br
.ti -1c
.RI "template<typename _IIter1 , typename _IIter2 , typename _OIter , typename _Predicate > _OIter \fBset_union\fP (_IIter1, _IIter1, _IIter2, _IIter2, _OIter, _Predicate)"
.br
.ti -1c
.RI "template<typename _IIter1 , typename _IIter2 , typename _OIter > _OIter \fBset_union\fP (_IIter1, _IIter1, _IIter2, _IIter2, _OIter)"
.br
.ti -1c
.RI "template<typename _IIter1 , typename _IIter2 , typename _OIter , typename Predicate > _OIter \fBset_union\fP (_IIter1, _IIter1, _IIter2, _IIter2, _OIter, Predicate, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename _IIter1 , typename _IIter2 , typename _OIter > _OIter \fBset_union\fP (_IIter1, _IIter1, _IIter2, _IIter2, _OIter, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename InputIterator1 , typename InputIterator2 , typename OutputIterator , typename Predicate > OutputIterator \fBset_union\fP (InputIterator1 begin1, InputIterator1 end1, InputIterator2 begin2, InputIterator2 end2, OutputIterator out, Predicate pred)"
.br
.ti -1c
.RI "template<typename InputIterator1 , typename InputIterator2 , typename OutputIterator > OutputIterator \fBset_union\fP (InputIterator1 begin1, InputIterator1 end1, InputIterator2 begin2, InputIterator2 end2, OutputIterator out)"
.br
.ti -1c
.RI "template<typename InputIterator1 , typename InputIterator2 , typename OutputIterator , typename Predicate > OutputIterator \fBset_union\fP (InputIterator1 begin1, InputIterator1 end1, InputIterator2 begin2, InputIterator2 end2, OutputIterator out, Predicate pred, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename InputIterator1 , typename InputIterator2 , typename OutputIterator > OutputIterator \fBset_union\fP (InputIterator1 begin1, InputIterator1 end1, InputIterator2 begin2, InputIterator2 end2, OutputIterator out, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename _RAIter1 , typename _RAIter2 , typename _Output_RAIter , typename _Predicate > _Output_RAIter \fBset_union_switch\fP (_RAIter1, _RAIter1, _RAIter2, _RAIter2, _Output_RAIter, _Predicate, \fBrandom_access_iterator_tag\fP, \fBrandom_access_iterator_tag\fP, \fBrandom_access_iterator_tag\fP)"
.br
.ti -1c
.RI "template<typename _IIter1 , typename _IIter2 , typename _Predicate , typename _OIter , typename _IterTag1 , typename _IterTag2 , typename _IterTag3 > _OIter \fBset_union_switch\fP (_IIter1, _IIter1, _IIter2, _IIter2, _OIter, _Predicate, _IterTag1, _IterTag2, _IterTag3)"
.br
.ti -1c
.RI "template<typename RandomAccessIterator1 , typename RandomAccessIterator2 , typename OutputRandomAccessIterator , typename Predicate > OutputRandomAccessIterator \fBset_union_switch\fP (RandomAccessIterator1 begin1, RandomAccessIterator1 end1, RandomAccessIterator2 begin2, RandomAccessIterator2 end2, OutputRandomAccessIterator result, Predicate pred, \fBrandom_access_iterator_tag\fP, \fBrandom_access_iterator_tag\fP, \fBrandom_access_iterator_tag\fP)"
.br
.ti -1c
.RI "template<typename InputIterator1 , typename InputIterator2 , typename Predicate , typename OutputIterator , typename IteratorTag1 , typename IteratorTag2 , typename IteratorTag3 > OutputIterator \fBset_union_switch\fP (InputIterator1 begin1, InputIterator1 end1, InputIterator2 begin2, InputIterator2 end2, OutputIterator result, Predicate pred, IteratorTag1, IteratorTag2, IteratorTag3)"
.br
.ti -1c
.RI "template<typename _RAIter , typename _Compare > void \fBsort\fP (_RAIter, _RAIter, _Compare)"
.br
.ti -1c
.RI "template<typename _RAIter > void \fBsort\fP (_RAIter, _RAIter)"
.br
.ti -1c
.RI "template<typename _RAIter , typename _Compare > void \fBsort\fP (_RAIter, _RAIter, _Compare, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename _RAIter > void \fBsort\fP (_RAIter, _RAIter, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename RandomAccessIterator , typename Comparator > void \fBsort\fP (RandomAccessIterator begin, RandomAccessIterator end, Comparator comp)"
.br
.ti -1c
.RI "template<typename RandomAccessIterator > void \fBsort\fP (RandomAccessIterator begin, RandomAccessIterator end, \fB__gnu_parallel::balanced_quicksort_tag\fP parallelism)"
.br
.ti -1c
.RI "template<typename RandomAccessIterator > void \fBsort\fP (RandomAccessIterator begin, RandomAccessIterator end, \fB__gnu_parallel::quicksort_tag\fP parallelism)"
.br
.ti -1c
.RI "template<typename RandomAccessIterator > void \fBsort\fP (RandomAccessIterator begin, RandomAccessIterator end, \fB__gnu_parallel::multiway_mergesort_exact_tag\fP parallelism)"
.br
.ti -1c
.RI "template<typename RandomAccessIterator > void \fBsort\fP (RandomAccessIterator begin, RandomAccessIterator end, \fB__gnu_parallel::multiway_mergesort_sampling_tag\fP parallelism)"
.br
.ti -1c
.RI "template<typename RandomAccessIterator > void \fBsort\fP (RandomAccessIterator begin, RandomAccessIterator end, \fB__gnu_parallel::multiway_mergesort_tag\fP parallelism)"
.br
.ti -1c
.RI "template<typename RandomAccessIterator > void \fBsort\fP (RandomAccessIterator begin, RandomAccessIterator end, \fB__gnu_parallel::parallel_tag\fP parallelism)"
.br
.ti -1c
.RI "template<typename RandomAccessIterator > void \fBsort\fP (RandomAccessIterator begin, RandomAccessIterator end, \fB__gnu_parallel::default_parallel_tag\fP parallelism)"
.br
.ti -1c
.RI "template<typename RandomAccessIterator > void \fBsort\fP (RandomAccessIterator begin, RandomAccessIterator end)"
.br
.ti -1c
.RI "template<typename RandomAccessIterator , typename Comparator , typename Parallelism > void \fBsort\fP (RandomAccessIterator begin, RandomAccessIterator end, Comparator comp, Parallelism parallelism)"
.br
.ti -1c
.RI "template<typename RandomAccessIterator , typename Comparator > void \fBsort\fP (RandomAccessIterator begin, RandomAccessIterator end, Comparator comp, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename RandomAccessIterator > void \fBsort\fP (RandomAccessIterator begin, RandomAccessIterator end, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename _RAIter , typename _Compare > void \fBstable_sort\fP (_RAIter, _RAIter, _Compare)"
.br
.ti -1c
.RI "template<typename _RAIter > void \fBstable_sort\fP (_RAIter, _RAIter)"
.br
.ti -1c
.RI "template<typename _RAIter , typename _Compare > void \fBstable_sort\fP (_RAIter, _RAIter, _Compare, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename _RAIter > void \fBstable_sort\fP (_RAIter, _RAIter, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename RandomAccessIterator , typename Comparator > void \fBstable_sort\fP (RandomAccessIterator begin, RandomAccessIterator end, Comparator comp)"
.br
.ti -1c
.RI "template<typename RandomAccessIterator > void \fBstable_sort\fP (RandomAccessIterator begin, RandomAccessIterator end, \fB__gnu_parallel::balanced_quicksort_tag\fP parallelism)"
.br
.ti -1c
.RI "template<typename RandomAccessIterator > void \fBstable_sort\fP (RandomAccessIterator begin, RandomAccessIterator end, \fB__gnu_parallel::quicksort_tag\fP parallelism)"
.br
.ti -1c
.RI "template<typename RandomAccessIterator > void \fBstable_sort\fP (RandomAccessIterator begin, RandomAccessIterator end, \fB__gnu_parallel::multiway_mergesort_tag\fP parallelism)"
.br
.ti -1c
.RI "template<typename RandomAccessIterator > void \fBstable_sort\fP (RandomAccessIterator begin, RandomAccessIterator end, \fB__gnu_parallel::parallel_tag\fP parallelism)"
.br
.ti -1c
.RI "template<typename RandomAccessIterator > void \fBstable_sort\fP (RandomAccessIterator begin, RandomAccessIterator end, \fB__gnu_parallel::default_parallel_tag\fP parallelism)"
.br
.ti -1c
.RI "template<typename RandomAccessIterator > void \fBstable_sort\fP (RandomAccessIterator begin, RandomAccessIterator end)"
.br
.ti -1c
.RI "template<typename RandomAccessIterator , typename Comparator , typename Parallelism > void \fBstable_sort\fP (RandomAccessIterator begin, RandomAccessIterator end, Comparator comp, Parallelism parallelism)"
.br
.ti -1c
.RI "template<typename RandomAccessIterator , typename Comparator > void \fBstable_sort\fP (RandomAccessIterator begin, RandomAccessIterator end, Comparator comp, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename RandomAccessIterator > void \fBstable_sort\fP (RandomAccessIterator begin, RandomAccessIterator end, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename _IIter1 , typename _IIter2 , typename _OIter , typename _BiOperation > _OIter \fBtransform\fP (_IIter1, _IIter1, _IIter2, _OIter, _BiOperation, \fB__gnu_parallel::_Parallelism\fP)"
.br
.ti -1c
.RI "template<typename _IIter1 , typename _IIter2 , typename _OIter , typename _BiOperation > _OIter \fBtransform\fP (_IIter1, _IIter1, _IIter2, _OIter, _BiOperation, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename _IIter1 , typename _IIter2 , typename _OIter , typename _BiOperation > _OIter \fBtransform\fP (_IIter1, _IIter1, _IIter2, _OIter, _BiOperation)"
.br
.ti -1c
.RI "template<typename _IIter , typename _OIter , typename UnaryOperation > _OIter \fBtransform\fP (_IIter, _IIter, _OIter, UnaryOperation, \fB__gnu_parallel::_Parallelism\fP)"
.br
.ti -1c
.RI "template<typename _IIter , typename _OIter , typename UnaryOperation > _OIter \fBtransform\fP (_IIter, _IIter, _OIter, UnaryOperation, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename _IIter , typename _OIter , typename UnaryOperation > _OIter \fBtransform\fP (_IIter, _IIter, _OIter, UnaryOperation)"
.br
.ti -1c
.RI "template<typename InputIterator1 , typename InputIterator2 , typename OutputIterator , typename BinaryOperation > OutputIterator \fBtransform\fP (InputIterator1 begin1, InputIterator1 end1, InputIterator2 begin2, OutputIterator result, BinaryOperation binary_op)"
.br
.ti -1c
.RI "template<typename InputIterator1 , typename InputIterator2 , typename OutputIterator , typename BinaryOperation > OutputIterator \fBtransform\fP (InputIterator1 begin1, InputIterator1 end1, InputIterator2 begin2, OutputIterator result, BinaryOperation binary_op, \fB__gnu_parallel::_Parallelism\fP parallelism_tag)"
.br
.ti -1c
.RI "template<typename InputIterator1 , typename InputIterator2 , typename OutputIterator , typename BinaryOperation > OutputIterator \fBtransform\fP (InputIterator1 begin1, InputIterator1 end1, InputIterator2 begin2, OutputIterator result, BinaryOperation binary_op, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename InputIterator , typename OutputIterator , typename UnaryOperation > OutputIterator \fBtransform\fP (InputIterator begin, InputIterator end, OutputIterator result, UnaryOperation unary_op)"
.br
.ti -1c
.RI "template<typename InputIterator , typename OutputIterator , typename UnaryOperation > OutputIterator \fBtransform\fP (InputIterator begin, InputIterator end, OutputIterator result, UnaryOperation unary_op, \fB__gnu_parallel::_Parallelism\fP parallelism_tag)"
.br
.ti -1c
.RI "template<typename InputIterator , typename OutputIterator , typename UnaryOperation > OutputIterator \fBtransform\fP (InputIterator begin, InputIterator end, OutputIterator result, UnaryOperation unary_op, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename _RAIIter , typename _RAOIter , typename UnaryOperation > _RAOIter \fBtransform1_switch\fP (_RAIIter, _RAIIter, _RAOIter, UnaryOperation, \fBrandom_access_iterator_tag\fP, \fBrandom_access_iterator_tag\fP, \fB__gnu_parallel::_Parallelism\fP parallelism=__gnu_parallel::parallel_balanced)"
.br
.ti -1c
.RI "template<typename _IIter , typename _OIter , typename UnaryOperation , typename _IterTag1 , typename _IterTag2 > _OIter \fBtransform1_switch\fP (_IIter, _IIter, _OIter, UnaryOperation, _IterTag1, _IterTag2)"
.br
.ti -1c
.RI "template<typename RandomAccessIterator1 , typename RandomAccessIterator2 , typename UnaryOperation , typename IteratorTag1 , typename IteratorTag2 > RandomAccessIterator2 \fBtransform1_switch\fP (RandomAccessIterator1 begin, RandomAccessIterator1 end, RandomAccessIterator2 result, UnaryOperation unary_op, IteratorTag1, IteratorTag2)"
.br
.ti -1c
.RI "template<typename RandomAccessIterator1 , typename RandomAccessIterator2 , typename UnaryOperation > RandomAccessIterator2 \fBtransform1_switch\fP (RandomAccessIterator1 begin, RandomAccessIterator1 end, RandomAccessIterator2 result, UnaryOperation unary_op, \fBrandom_access_iterator_tag\fP, \fBrandom_access_iterator_tag\fP, \fB__gnu_parallel::_Parallelism\fP parallelism_tag=__gnu_parallel::parallel_balanced)"
.br
.ti -1c
.RI "template<typename _IIter1 , typename _IIter2 , typename _OIter , typename _BiOperation , typename _Tag1 , typename _Tag2 , typename _Tag3 > _OIter \fBtransform2_switch\fP (_IIter1, _IIter1, _IIter2, _OIter, _BiOperation, _Tag1, _Tag2, _Tag3)"
.br
.ti -1c
.RI "template<typename _RAIter1 , typename _RAIter2 , typename _RAIter3 , typename _BiOperation > _RAIter3 \fBtransform2_switch\fP (_RAIter1, _RAIter1, _RAIter2, _RAIter3, _BiOperation, \fBrandom_access_iterator_tag\fP, \fBrandom_access_iterator_tag\fP, \fBrandom_access_iterator_tag\fP, \fB__gnu_parallel::_Parallelism\fP parallelism=__gnu_parallel::parallel_balanced)"
.br
.ti -1c
.RI "template<typename InputIterator1 , typename InputIterator2 , typename OutputIterator , typename BinaryOperation , typename tag1 , typename tag2 , typename tag3 > OutputIterator \fBtransform2_switch\fP (InputIterator1 begin1, InputIterator1 end1, InputIterator2 begin2, OutputIterator result, BinaryOperation binary_op, tag1, tag2, tag3)"
.br
.ti -1c
.RI "template<typename RandomAccessIterator1 , typename RandomAccessIterator2 , typename RandomAccessIterator3 , typename BinaryOperation > RandomAccessIterator3 \fBtransform2_switch\fP (RandomAccessIterator1 begin1, RandomAccessIterator1 end1, RandomAccessIterator2 begin2, RandomAccessIterator3 result, BinaryOperation binary_op, \fBrandom_access_iterator_tag\fP, \fBrandom_access_iterator_tag\fP, \fBrandom_access_iterator_tag\fP, \fB__gnu_parallel::_Parallelism\fP parallelism_tag=__gnu_parallel::parallel_balanced)"
.br
.ti -1c
.RI "template<typename _IIter , typename _OIter , typename _Predicate > _OIter \fBunique_copy\fP (_IIter, _IIter, _OIter, _Predicate)"
.br
.ti -1c
.RI "template<typename _IIter , typename _OIter > _OIter \fBunique_copy\fP (_IIter, _IIter, _OIter)"
.br
.ti -1c
.RI "template<typename _IIter , typename _OIter , typename _Predicate > _OIter \fBunique_copy\fP (_IIter, _IIter, _OIter, _Predicate, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename _IIter , typename _OIter > _OIter \fBunique_copy\fP (_IIter, _IIter, _OIter, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename InputIterator , typename OutputIterator , typename Predicate > OutputIterator \fBunique_copy\fP (InputIterator begin1, InputIterator end1, OutputIterator out, Predicate pred)"
.br
.ti -1c
.RI "template<typename InputIterator , typename OutputIterator > OutputIterator \fBunique_copy\fP (InputIterator begin1, InputIterator end1, OutputIterator out)"
.br
.ti -1c
.RI "template<typename InputIterator , typename OutputIterator , typename Predicate > OutputIterator \fBunique_copy\fP (InputIterator begin1, InputIterator end1, OutputIterator out, Predicate pred, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename InputIterator , typename OutputIterator > OutputIterator \fBunique_copy\fP (InputIterator begin1, InputIterator end1, OutputIterator out, \fB__gnu_parallel::sequential_tag\fP)"
.br
.ti -1c
.RI "template<typename _RAIter , typename _RandomAccess_OIter , typename _Predicate > _RandomAccess_OIter \fBunique_copy_switch\fP (_RAIter, _RAIter, _RandomAccess_OIter, _Predicate, \fBrandom_access_iterator_tag\fP, \fBrandom_access_iterator_tag\fP)"
.br
.ti -1c
.RI "template<typename _IIter , typename _OIter , typename _Predicate , typename _IterTag1 , typename _IterTag2 > _OIter \fBunique_copy_switch\fP (_IIter, _IIter, _OIter, _Predicate, _IterTag1, _IterTag2)"
.br
.ti -1c
.RI "template<typename RandomAccessIterator , typename RandomAccessOutputIterator , typename Predicate > RandomAccessOutputIterator \fBunique_copy_switch\fP (RandomAccessIterator begin, RandomAccessIterator last, RandomAccessOutputIterator out, Predicate pred, \fBrandom_access_iterator_tag\fP, \fBrandom_access_iterator_tag\fP)"
.br
.ti -1c
.RI "template<typename InputIterator , typename OutputIterator , typename Predicate , typename IteratorTag1 , typename IteratorTag2 > OutputIterator \fBunique_copy_switch\fP (InputIterator begin, InputIterator last, OutputIterator out, Predicate pred, IteratorTag1, IteratorTag2)"
.br
.in -1c
.SH "Detailed Description"
.PP 
GNU parallel code, replaces standard behavior with parallel behavior. 
.PP
.SH "Author"
.PP 
Generated automatically by Doxygen for libstdc++ from the source code.
