.TH "__gnu_cxx::_Caster" 3 "21 Apr 2009" "libstdc++" \" -*- nroff -*-
.ad l
.nh
.SH NAME
__gnu_cxx::_Caster \- 
.SH SYNOPSIS
.br
.PP
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef _ToType::element_type * \fBtype\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<typename _ToType> struct __gnu_cxx::_Caster< _ToType >"
These functions are here to allow containers to support non standard pointer types. For normal pointers, these resolve to the use of the standard cast operation. For other types the functions will perform the apprpriate cast to/from the custom pointer class so long as that class meets the following conditions: 1) has a typedef element_type which names tehe type it points to. 2) has a get() const method which returns element_type*. 3) has a constructor which can take one element_type* argument. This type supports the semantics of the pointer cast operators (below.) 
.PP
Definition at line 45 of file cast.h.

.SH "Author"
.PP 
Generated automatically by Doxygen for libstdc++ from the source code.
