.TH "std::raw_storage_iterator" 3 "21 Apr 2009" "libstdc++" \" -*- nroff -*-
.ad l
.nh
.SH NAME
std::raw_storage_iterator \- 
.SH SYNOPSIS
.br
.PP
Inherits \fBiterator< output_iterator_tag, void, void, void, void >\fP.
.PP
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef void \fBdifference_type\fP"
.br
.ti -1c
.RI "typedef \fBoutput_iterator_tag\fP \fBiterator_category\fP"
.br
.ti -1c
.RI "typedef void \fBpointer\fP"
.br
.ti -1c
.RI "typedef void \fBreference\fP"
.br
.ti -1c
.RI "typedef void \fBvalue_type\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBraw_storage_iterator\fP & \fBoperator*\fP ()"
.br
.ti -1c
.RI "\fBraw_storage_iterator\fP< _OutputIterator, _Tp > \fBoperator++\fP (int)"
.br
.ti -1c
.RI "\fBraw_storage_iterator\fP< _OutputIterator, _Tp > & \fBoperator++\fP ()"
.br
.ti -1c
.RI "\fBraw_storage_iterator\fP & \fBoperator=\fP (const _Tp &__element)"
.br
.ti -1c
.RI "\fBraw_storage_iterator\fP (_OutputIterator __x)"
.br
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "_OutputIterator \fB_M_iter\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<class _OutputIterator, class _Tp> class std::raw_storage_iterator< _OutputIterator, _Tp >"
This \fBiterator\fP class lets algorithms store their results into uninitialized memory. 
.PP
Definition at line 67 of file stl_raw_storage_iter.h.
.SH "Member Typedef Documentation"
.PP 
.SS "typedef void  \fBstd::iterator\fP< \fBoutput_iterator_tag\fP , void , void , void , void  >::\fBdifference_type\fP\fC [inherited]\fP"
.PP
Distance between iterators is represented as this type. 
.PP
Definition at line 111 of file stl_iterator_base_types.h.
.SS "typedef \fBoutput_iterator_tag\fP  \fBstd::iterator\fP< \fBoutput_iterator_tag\fP , void , void , void , void  >::\fBiterator_category\fP\fC [inherited]\fP"
.PP
One of the \fBtag types\fP. 
.PP
Definition at line 107 of file stl_iterator_base_types.h.
.SS "typedef void  \fBstd::iterator\fP< \fBoutput_iterator_tag\fP , void , void , void , void  >::\fBpointer\fP\fC [inherited]\fP"
.PP
This type represents a pointer-to-value_type. 
.PP
Definition at line 113 of file stl_iterator_base_types.h.
.SS "typedef void  \fBstd::iterator\fP< \fBoutput_iterator_tag\fP , void , void , void , void  >::\fBreference\fP\fC [inherited]\fP"
.PP
This type represents a reference-to-value_type. 
.PP
Definition at line 115 of file stl_iterator_base_types.h.
.SS "typedef void  \fBstd::iterator\fP< \fBoutput_iterator_tag\fP , void , void , void , void  >::\fBvalue_type\fP\fC [inherited]\fP"
.PP
The type 'pointed to' by the iterator. 
.PP
Definition at line 109 of file stl_iterator_base_types.h.

.SH "Author"
.PP 
Generated automatically by Doxygen for libstdc++ from the source code.
