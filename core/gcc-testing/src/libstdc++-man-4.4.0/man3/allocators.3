.TH "Allocators" 3 "21 Apr 2009" "libstdc++" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Allocators \- 
.SS "Classes"

.in +1c
.ti -1c
.RI "class \fB__gnu_cxx::__mt_alloc< _Tp, _Poolp >\fP"
.br
.RI "\fIThis is a fixed size (power of 2) allocator which - when compiled with thread support - will maintain one freelist per size per thread plus a 'global' one. Steps are taken to limit the per thread freelist sizes (by returning excess back to the 'global' list).
.PP
Further details: http://gcc.gnu.org/onlinedocs/libstdc++/manual/bk01pt12ch32.html. \fP"
.ti -1c
.RI "class \fB__gnu_cxx::__pool_alloc< _Tp >\fP"
.br
.RI "\fIAllocator using a memory pool with a single lock. \fP"
.ti -1c
.RI "class \fB__gnu_cxx::_ExtPtr_allocator< _Tp >\fP"
.br
.RI "\fIAn example allocator which uses a non-standard pointer type.
.PP
This allocator specifies that containers use a 'relative pointer' as it's pointer type. (See \fBext/pointer.h\fP) Memory allocation in this example is still performed using \fBstd::allocator\fP. \fP"
.ti -1c
.RI "class \fB__gnu_cxx::array_allocator< _Tp, _Array >\fP"
.br
.RI "\fIAn allocator that uses previously allocated memory. This memory can be externally, globally, or otherwise allocated. \fP"
.ti -1c
.RI "class \fB__gnu_cxx::bitmap_allocator< _Tp >\fP"
.br
.RI "\fIBitmap Allocator, primary template. \fP"
.ti -1c
.RI "class \fB__gnu_cxx::debug_allocator< _Alloc >\fP"
.br
.RI "\fIA meta-allocator with debugging bits, as per [20.4].
.PP
This is precisely the allocator defined in the C++ Standard.
.IP "\(bu" 2
all allocation calls operator new
.IP "\(bu" 2
all deallocation calls operator delete. 
.PP
\fP"
.ti -1c
.RI "class \fB__gnu_cxx::malloc_allocator< _Tp >\fP"
.br
.RI "\fIAn allocator that uses malloc.
.PP
This is precisely the allocator defined in the C++ Standard.
.IP "\(bu" 2
all allocation calls malloc
.IP "\(bu" 2
all deallocation calls free. 
.PP
\fP"
.ti -1c
.RI "class \fB__gnu_cxx::new_allocator< _Tp >\fP"
.br
.RI "\fIAn allocator that uses global new, as per [20.4].
.PP
This is precisely the allocator defined in the C++ Standard.
.IP "\(bu" 2
all allocation calls operator new
.IP "\(bu" 2
all deallocation calls operator delete. 
.PP
\fP"
.ti -1c
.RI "class \fB__gnu_cxx::throw_allocator< T >\fP"
.br
.RI "\fIAllocator class with logging and exception control. \fP"
.ti -1c
.RI "class \fBstd::allocator< _Tp >\fP"
.br
.RI "\fIThe 'standard' \fBallocator\fP, as per [20.4].
.PP
Further details: http://gcc.gnu.org/onlinedocs/libstdc++/manual/bk01pt04ch11.html. \fP"
.in -1c
.SH "Detailed Description"
.PP 
Classes encapsulating memory operations. 
.SH "Author"
.PP 
Generated automatically by Doxygen for libstdc++ from the source code.
