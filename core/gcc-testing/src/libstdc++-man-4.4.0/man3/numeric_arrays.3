.TH "Numeric Arrays" 3 "21 Apr 2009" "libstdc++" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Numeric Arrays \- 
.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBstd::gslice\fP"
.br
.RI "\fIClass defining multi-dimensional subset of an \fBarray\fP. \fP"
.ti -1c
.RI "class \fBstd::gslice_array< _Tp >\fP"
.br
.RI "\fIReference to multi-dimensional subset of an \fBarray\fP. \fP"
.ti -1c
.RI "class \fBstd::indirect_array< _Tp >\fP"
.br
.RI "\fIReference to arbitrary subset of an \fBarray\fP. \fP"
.ti -1c
.RI "class \fBstd::mask_array< _Tp >\fP"
.br
.RI "\fIReference to selected subset of an \fBarray\fP. \fP"
.ti -1c
.RI "class \fBstd::slice\fP"
.br
.RI "\fIClass defining one-dimensional subset of an \fBarray\fP. \fP"
.ti -1c
.RI "class \fBstd::slice_array< _Tp >\fP"
.br
.RI "\fIReference to one-dimensional subset of an \fBarray\fP. \fP"
.ti -1c
.RI "class \fBstd::valarray< _Tp >\fP"
.br
.RI "\fISmart \fBarray\fP designed to support numeric processing. \fP"
.in -1c
.SS "Defines"

.in +1c
.ti -1c
.RI "#define \fB_DEFINE_BINARY_OPERATOR\fP(_Op, _Name)"
.br
.ti -1c
.RI "#define \fB_DEFINE_VALARRAY_AUGMENTED_ASSIGNMENT\fP(_Op, _Name)"
.br
.ti -1c
.RI "#define \fB_DEFINE_VALARRAY_EXPR_AUGMENTED_ASSIGNMENT\fP(_Op, _Name)"
.br
.ti -1c
.RI "#define \fB_DEFINE_VALARRAY_OPERATOR\fP(_Op, _Name)"
.br
.ti -1c
.RI "#define \fB_DEFINE_VALARRAY_OPERATOR\fP(_Op, _Name)"
.br
.ti -1c
.RI "#define \fB_DEFINE_VALARRAY_OPERATOR\fP(_Op, _Name)"
.br
.ti -1c
.RI "#define \fB_DEFINE_VALARRAY_OPERATOR\fP(_Op, _Name)"
.br
.ti -1c
.RI "#define \fB_DEFINE_VALARRAY_UNARY_OPERATOR\fP(_Op, _Name)"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "_Expr< _RefFunClos< _ValArray, _Tp >, _Tp > \fBstd::valarray::apply\fP (_Tp func(const _Tp &)) const "
.br
.ti -1c
.RI "_Expr< _ValFunClos< _ValArray, _Tp >, _Tp > \fBstd::valarray::apply\fP (_Tp func(_Tp)) const "
.br
.ti -1c
.RI "valarray< _Tp > \fBstd::valarray::cshift\fP (int) const "
.br
.ti -1c
.RI "\fBstd::gslice::gslice\fP (const gslice &)"
.br
.ti -1c
.RI "\fBstd::gslice::gslice\fP (size_t, const valarray< size_t > &, const valarray< size_t > &)"
.br
.ti -1c
.RI "\fBstd::gslice::gslice\fP ()"
.br
.ti -1c
.RI "\fBstd::gslice_array::gslice_array\fP (const gslice_array &)"
.br
.ti -1c
.RI "\fBstd::indirect_array::indirect_array\fP (const indirect_array &)"
.br
.ti -1c
.RI "\fBstd::mask_array::mask_array\fP (const mask_array &)"
.br
.ti -1c
.RI "_Tp \fBstd::valarray::max\fP () const "
.br
.ti -1c
.RI "_Tp \fBstd::valarray::min\fP () const "
.br
.ti -1c
.RI "_UnaryOp< __logical_not >::_Rt \fBstd::valarray::operator!\fP () const "
.br
.ti -1c
.RI "template<typename _Tp > _Expr< _BinClos< __not_equal_to, _Constant, _ValArray, _Tp, _Tp >, typename __fun< __not_equal_to, _Tp >::result_type > \fBstd::operator!=\fP (const _Tp &__t, const valarray< _Tp > &__v)"
.br
.ti -1c
.RI "template<typename _Tp > _Expr< _BinClos< __not_equal_to, _ValArray, _Constant, _Tp, _Tp >, typename __fun< __not_equal_to, _Tp >::result_type > \fBstd::operator!=\fP (const valarray< _Tp > &__v, const _Tp &__t)"
.br
.ti -1c
.RI "template<typename _Tp > _Expr< _BinClos< __not_equal_to, _ValArray, _ValArray, _Tp, _Tp >, typename __fun< __not_equal_to, _Tp >::result_type > \fBstd::operator!=\fP (const valarray< _Tp > &__v, const valarray< _Tp > &__w)"
.br
.ti -1c
.RI "template<typename _Tp > _Expr< _BinClos< __modulus, _Constant, _ValArray, _Tp, _Tp >, typename __fun< __modulus, _Tp >::result_type > \fBstd::operator%\fP (const _Tp &__t, const valarray< _Tp > &__v)"
.br
.ti -1c
.RI "template<typename _Tp > _Expr< _BinClos< __modulus, _ValArray, _Constant, _Tp, _Tp >, typename __fun< __modulus, _Tp >::result_type > \fBstd::operator%\fP (const valarray< _Tp > &__v, const _Tp &__t)"
.br
.ti -1c
.RI "template<typename _Tp > _Expr< _BinClos< __modulus, _ValArray, _ValArray, _Tp, _Tp >, typename __fun< __modulus, _Tp >::result_type > \fBstd::operator%\fP (const valarray< _Tp > &__v, const valarray< _Tp > &__w)"
.br
.ti -1c
.RI "template<class _Dom > void \fBstd::slice_array::operator%=\fP (const _Expr< _Dom, _Tp > &) const "
.br
.ti -1c
.RI "void \fBstd::slice_array::operator%=\fP (const valarray< _Tp > &) const "
.br
.ti -1c
.RI "template<class _Dom > void \fBstd::mask_array::operator%=\fP (const _Expr< _Dom, _Tp > &) const "
.br
.ti -1c
.RI "void \fBstd::mask_array::operator%=\fP (const valarray< _Tp > &) const "
.br
.ti -1c
.RI "template<class _Dom > void \fBstd::indirect_array::operator%=\fP (const _Expr< _Dom, _Tp > &) const "
.br
.ti -1c
.RI "void \fBstd::indirect_array::operator%=\fP (const valarray< _Tp > &) const "
.br
.ti -1c
.RI "template<class _Dom > void \fBstd::gslice_array::operator%=\fP (const _Expr< _Dom, _Tp > &) const "
.br
.ti -1c
.RI "void \fBstd::gslice_array::operator%=\fP (const valarray< _Tp > &) const "
.br
.ti -1c
.RI "template<class _Dom > valarray< _Tp > & \fBstd::valarray::operator%=\fP (const _Expr< _Dom, _Tp > &)"
.br
.ti -1c
.RI "valarray< _Tp > & \fBstd::valarray::operator%=\fP (const valarray< _Tp > &)"
.br
.ti -1c
.RI "valarray< _Tp > & \fBstd::valarray::operator%=\fP (const _Tp &)"
.br
.ti -1c
.RI "template<typename _Tp > _Expr< _BinClos< __bitwise_and, _Constant, _ValArray, _Tp, _Tp >, typename __fun< __bitwise_and, _Tp >::result_type > \fBstd::operator&\fP (const _Tp &__t, const valarray< _Tp > &__v)"
.br
.ti -1c
.RI "template<typename _Tp > _Expr< _BinClos< __bitwise_and, _ValArray, _Constant, _Tp, _Tp >, typename __fun< __bitwise_and, _Tp >::result_type > \fBstd::operator&\fP (const valarray< _Tp > &__v, const _Tp &__t)"
.br
.ti -1c
.RI "template<typename _Tp > _Expr< _BinClos< __bitwise_and, _ValArray, _ValArray, _Tp, _Tp >, typename __fun< __bitwise_and, _Tp >::result_type > \fBstd::operator&\fP (const valarray< _Tp > &__v, const valarray< _Tp > &__w)"
.br
.ti -1c
.RI "template<typename _Tp > _Expr< _BinClos< __logical_and, _Constant, _ValArray, _Tp, _Tp >, typename __fun< __logical_and, _Tp >::result_type > \fBstd::operator&&\fP (const _Tp &__t, const valarray< _Tp > &__v)"
.br
.ti -1c
.RI "template<typename _Tp > _Expr< _BinClos< __logical_and, _ValArray, _Constant, _Tp, _Tp >, typename __fun< __logical_and, _Tp >::result_type > \fBstd::operator&&\fP (const valarray< _Tp > &__v, const _Tp &__t)"
.br
.ti -1c
.RI "template<typename _Tp > _Expr< _BinClos< __logical_and, _ValArray, _ValArray, _Tp, _Tp >, typename __fun< __logical_and, _Tp >::result_type > \fBstd::operator&&\fP (const valarray< _Tp > &__v, const valarray< _Tp > &__w)"
.br
.ti -1c
.RI "template<class _Dom > void \fBstd::slice_array::operator&=\fP (const _Expr< _Dom, _Tp > &) const "
.br
.ti -1c
.RI "void \fBstd::slice_array::operator&=\fP (const valarray< _Tp > &) const "
.br
.ti -1c
.RI "template<class _Dom > void \fBstd::mask_array::operator&=\fP (const _Expr< _Dom, _Tp > &) const "
.br
.ti -1c
.RI "void \fBstd::mask_array::operator&=\fP (const valarray< _Tp > &) const "
.br
.ti -1c
.RI "template<class _Dom > void \fBstd::indirect_array::operator&=\fP (const _Expr< _Dom, _Tp > &) const "
.br
.ti -1c
.RI "void \fBstd::indirect_array::operator&=\fP (const valarray< _Tp > &) const "
.br
.ti -1c
.RI "template<class _Dom > void \fBstd::gslice_array::operator&=\fP (const _Expr< _Dom, _Tp > &) const "
.br
.ti -1c
.RI "void \fBstd::gslice_array::operator&=\fP (const valarray< _Tp > &) const "
.br
.ti -1c
.RI "template<class _Dom > valarray< _Tp > & \fBstd::valarray::operator&=\fP (const _Expr< _Dom, _Tp > &)"
.br
.ti -1c
.RI "valarray< _Tp > & \fBstd::valarray::operator&=\fP (const valarray< _Tp > &)"
.br
.ti -1c
.RI "valarray< _Tp > & \fBstd::valarray::operator&=\fP (const _Tp &)"
.br
.ti -1c
.RI "template<typename _Tp > _Expr< _BinClos< __multiplies, _Constant, _ValArray, _Tp, _Tp >, typename __fun< __multiplies, _Tp >::result_type > \fBstd::operator*\fP (const _Tp &__t, const valarray< _Tp > &__v)"
.br
.ti -1c
.RI "template<typename _Tp > _Expr< _BinClos< __multiplies, _ValArray, _Constant, _Tp, _Tp >, typename __fun< __multiplies, _Tp >::result_type > \fBstd::operator*\fP (const valarray< _Tp > &__v, const _Tp &__t)"
.br
.ti -1c
.RI "template<typename _Tp > _Expr< _BinClos< __multiplies, _ValArray, _ValArray, _Tp, _Tp >, typename __fun< __multiplies, _Tp >::result_type > \fBstd::operator*\fP (const valarray< _Tp > &__v, const valarray< _Tp > &__w)"
.br
.ti -1c
.RI "template<class _Dom > void \fBstd::slice_array::operator*=\fP (const _Expr< _Dom, _Tp > &) const "
.br
.ti -1c
.RI "void \fBstd::slice_array::operator*=\fP (const valarray< _Tp > &) const "
.br
.ti -1c
.RI "template<class _Dom > void \fBstd::mask_array::operator*=\fP (const _Expr< _Dom, _Tp > &) const "
.br
.ti -1c
.RI "void \fBstd::mask_array::operator*=\fP (const valarray< _Tp > &) const "
.br
.ti -1c
.RI "template<class _Dom > void \fBstd::indirect_array::operator*=\fP (const _Expr< _Dom, _Tp > &) const "
.br
.ti -1c
.RI "void \fBstd::indirect_array::operator*=\fP (const valarray< _Tp > &) const "
.br
.ti -1c
.RI "template<class _Dom > void \fBstd::gslice_array::operator*=\fP (const _Expr< _Dom, _Tp > &) const "
.br
.ti -1c
.RI "void \fBstd::gslice_array::operator*=\fP (const valarray< _Tp > &) const "
.br
.ti -1c
.RI "template<class _Dom > valarray< _Tp > & \fBstd::valarray::operator*=\fP (const _Expr< _Dom, _Tp > &)"
.br
.ti -1c
.RI "valarray< _Tp > & \fBstd::valarray::operator*=\fP (const valarray< _Tp > &)"
.br
.ti -1c
.RI "valarray< _Tp > & \fBstd::valarray::operator*=\fP (const _Tp &)"
.br
.ti -1c
.RI "_UnaryOp< __unary_plus >::_Rt \fBstd::valarray::operator+\fP () const "
.br
.ti -1c
.RI "template<typename _Tp > _Expr< _BinClos< __plus, _Constant, _ValArray, _Tp, _Tp >, typename __fun< __plus, _Tp >::result_type > \fBstd::operator+\fP (const _Tp &__t, const valarray< _Tp > &__v)"
.br
.ti -1c
.RI "template<typename _Tp > _Expr< _BinClos< __plus, _ValArray, _Constant, _Tp, _Tp >, typename __fun< __plus, _Tp >::result_type > \fBstd::operator+\fP (const valarray< _Tp > &__v, const _Tp &__t)"
.br
.ti -1c
.RI "template<typename _Tp > _Expr< _BinClos< __plus, _ValArray, _ValArray, _Tp, _Tp >, typename __fun< __plus, _Tp >::result_type > \fBstd::operator+\fP (const valarray< _Tp > &__v, const valarray< _Tp > &__w)"
.br
.ti -1c
.RI "template<class _Dom > void \fBstd::slice_array::operator+=\fP (const _Expr< _Dom, _Tp > &) const "
.br
.ti -1c
.RI "void \fBstd::slice_array::operator+=\fP (const valarray< _Tp > &) const "
.br
.ti -1c
.RI "template<class _Dom > void \fBstd::mask_array::operator+=\fP (const _Expr< _Dom, _Tp > &) const "
.br
.ti -1c
.RI "void \fBstd::mask_array::operator+=\fP (const valarray< _Tp > &) const "
.br
.ti -1c
.RI "template<class _Dom > void \fBstd::indirect_array::operator+=\fP (const _Expr< _Dom, _Tp > &) const "
.br
.ti -1c
.RI "void \fBstd::indirect_array::operator+=\fP (const valarray< _Tp > &) const "
.br
.ti -1c
.RI "template<class _Dom > void \fBstd::gslice_array::operator+=\fP (const _Expr< _Dom, _Tp > &) const "
.br
.ti -1c
.RI "void \fBstd::gslice_array::operator+=\fP (const valarray< _Tp > &) const "
.br
.ti -1c
.RI "template<class _Dom > valarray< _Tp > & \fBstd::valarray::operator+=\fP (const _Expr< _Dom, _Tp > &)"
.br
.ti -1c
.RI "valarray< _Tp > & \fBstd::valarray::operator+=\fP (const valarray< _Tp > &)"
.br
.ti -1c
.RI "valarray< _Tp > & \fBstd::valarray::operator+=\fP (const _Tp &)"
.br
.ti -1c
.RI "_UnaryOp< __negate >::_Rt \fBstd::valarray::operator-\fP () const "
.br
.ti -1c
.RI "template<typename _Tp > _Expr< _BinClos< __minus, _Constant, _ValArray, _Tp, _Tp >, typename __fun< __minus, _Tp >::result_type > \fBstd::operator-\fP (const _Tp &__t, const valarray< _Tp > &__v)"
.br
.ti -1c
.RI "template<typename _Tp > _Expr< _BinClos< __minus, _ValArray, _Constant, _Tp, _Tp >, typename __fun< __minus, _Tp >::result_type > \fBstd::operator-\fP (const valarray< _Tp > &__v, const _Tp &__t)"
.br
.ti -1c
.RI "template<typename _Tp > _Expr< _BinClos< __minus, _ValArray, _ValArray, _Tp, _Tp >, typename __fun< __minus, _Tp >::result_type > \fBstd::operator-\fP (const valarray< _Tp > &__v, const valarray< _Tp > &__w)"
.br
.ti -1c
.RI "template<class _Dom > void \fBstd::slice_array::operator-=\fP (const _Expr< _Dom, _Tp > &) const "
.br
.ti -1c
.RI "void \fBstd::slice_array::operator-=\fP (const valarray< _Tp > &) const "
.br
.ti -1c
.RI "template<class _Dom > void \fBstd::mask_array::operator-=\fP (const _Expr< _Dom, _Tp > &) const "
.br
.ti -1c
.RI "void \fBstd::mask_array::operator-=\fP (const valarray< _Tp > &) const "
.br
.ti -1c
.RI "template<class _Dom > void \fBstd::indirect_array::operator-=\fP (const _Expr< _Dom, _Tp > &) const "
.br
.ti -1c
.RI "void \fBstd::indirect_array::operator-=\fP (const valarray< _Tp > &) const "
.br
.ti -1c
.RI "template<class _Dom > void \fBstd::gslice_array::operator-=\fP (const _Expr< _Dom, _Tp > &) const "
.br
.ti -1c
.RI "void \fBstd::gslice_array::operator-=\fP (const valarray< _Tp > &) const "
.br
.ti -1c
.RI "template<class _Dom > valarray< _Tp > & \fBstd::valarray::operator-=\fP (const _Expr< _Dom, _Tp > &)"
.br
.ti -1c
.RI "valarray< _Tp > & \fBstd::valarray::operator-=\fP (const valarray< _Tp > &)"
.br
.ti -1c
.RI "valarray< _Tp > & \fBstd::valarray::operator-=\fP (const _Tp &)"
.br
.ti -1c
.RI "template<typename _Tp > _Expr< _BinClos< __divides, _Constant, _ValArray, _Tp, _Tp >, typename __fun< __divides, _Tp >::result_type > \fBstd::operator/\fP (const _Tp &__t, const valarray< _Tp > &__v)"
.br
.ti -1c
.RI "template<typename _Tp > _Expr< _BinClos< __divides, _ValArray, _Constant, _Tp, _Tp >, typename __fun< __divides, _Tp >::result_type > \fBstd::operator/\fP (const valarray< _Tp > &__v, const _Tp &__t)"
.br
.ti -1c
.RI "template<typename _Tp > _Expr< _BinClos< __divides, _ValArray, _ValArray, _Tp, _Tp >, typename __fun< __divides, _Tp >::result_type > \fBstd::operator/\fP (const valarray< _Tp > &__v, const valarray< _Tp > &__w)"
.br
.ti -1c
.RI "template<class _Dom > void \fBstd::slice_array::operator/=\fP (const _Expr< _Dom, _Tp > &) const "
.br
.ti -1c
.RI "void \fBstd::slice_array::operator/=\fP (const valarray< _Tp > &) const "
.br
.ti -1c
.RI "template<class _Dom > void \fBstd::mask_array::operator/=\fP (const _Expr< _Dom, _Tp > &) const "
.br
.ti -1c
.RI "void \fBstd::mask_array::operator/=\fP (const valarray< _Tp > &) const "
.br
.ti -1c
.RI "template<class _Dom > void \fBstd::indirect_array::operator/=\fP (const _Expr< _Dom, _Tp > &) const "
.br
.ti -1c
.RI "void \fBstd::indirect_array::operator/=\fP (const valarray< _Tp > &) const "
.br
.ti -1c
.RI "template<class _Dom > void \fBstd::gslice_array::operator/=\fP (const _Expr< _Dom, _Tp > &) const "
.br
.ti -1c
.RI "void \fBstd::gslice_array::operator/=\fP (const valarray< _Tp > &) const "
.br
.ti -1c
.RI "template<class _Dom > valarray< _Tp > & \fBstd::valarray::operator/=\fP (const _Expr< _Dom, _Tp > &)"
.br
.ti -1c
.RI "valarray< _Tp > & \fBstd::valarray::operator/=\fP (const valarray< _Tp > &)"
.br
.ti -1c
.RI "valarray< _Tp > & \fBstd::valarray::operator/=\fP (const _Tp &)"
.br
.ti -1c
.RI "template<typename _Tp > _Expr< _BinClos< __less, _Constant, _ValArray, _Tp, _Tp >, typename __fun< __less, _Tp >::result_type > \fBstd::operator<\fP (const _Tp &__t, const valarray< _Tp > &__v)"
.br
.ti -1c
.RI "template<typename _Tp > _Expr< _BinClos< __less, _ValArray, _Constant, _Tp, _Tp >, typename __fun< __less, _Tp >::result_type > \fBstd::operator<\fP (const valarray< _Tp > &__v, const _Tp &__t)"
.br
.ti -1c
.RI "template<typename _Tp > _Expr< _BinClos< __less, _ValArray, _ValArray, _Tp, _Tp >, typename __fun< __less, _Tp >::result_type > \fBstd::operator<\fP (const valarray< _Tp > &__v, const valarray< _Tp > &__w)"
.br
.ti -1c
.RI "template<typename _Tp > _Expr< _BinClos< __shift_left, _Constant, _ValArray, _Tp, _Tp >, typename __fun< __shift_left, _Tp >::result_type > \fBstd::operator<<\fP (const _Tp &__t, const valarray< _Tp > &__v)"
.br
.ti -1c
.RI "template<typename _Tp > _Expr< _BinClos< __shift_left, _ValArray, _Constant, _Tp, _Tp >, typename __fun< __shift_left, _Tp >::result_type > \fBstd::operator<<\fP (const valarray< _Tp > &__v, const _Tp &__t)"
.br
.ti -1c
.RI "template<typename _Tp > _Expr< _BinClos< __shift_left, _ValArray, _ValArray, _Tp, _Tp >, typename __fun< __shift_left, _Tp >::result_type > \fBstd::operator<<\fP (const valarray< _Tp > &__v, const valarray< _Tp > &__w)"
.br
.ti -1c
.RI "template<class _Dom > void \fBstd::slice_array::operator<<=\fP (const _Expr< _Dom, _Tp > &) const "
.br
.ti -1c
.RI "void \fBstd::slice_array::operator<<=\fP (const valarray< _Tp > &) const "
.br
.ti -1c
.RI "template<class _Dom > void \fBstd::mask_array::operator<<=\fP (const _Expr< _Dom, _Tp > &) const "
.br
.ti -1c
.RI "void \fBstd::mask_array::operator<<=\fP (const valarray< _Tp > &) const "
.br
.ti -1c
.RI "template<class _Dom > void \fBstd::indirect_array::operator<<=\fP (const _Expr< _Dom, _Tp > &) const "
.br
.ti -1c
.RI "void \fBstd::indirect_array::operator<<=\fP (const valarray< _Tp > &) const "
.br
.ti -1c
.RI "template<class _Dom > void \fBstd::gslice_array::operator<<=\fP (const _Expr< _Dom, _Tp > &) const "
.br
.ti -1c
.RI "void \fBstd::gslice_array::operator<<=\fP (const valarray< _Tp > &) const "
.br
.ti -1c
.RI "template<class _Dom > valarray< _Tp > & \fBstd::valarray::operator<<=\fP (const _Expr< _Dom, _Tp > &)"
.br
.ti -1c
.RI "valarray< _Tp > & \fBstd::valarray::operator<<=\fP (const valarray< _Tp > &)"
.br
.ti -1c
.RI "valarray< _Tp > & \fBstd::valarray::operator<<=\fP (const _Tp &)"
.br
.ti -1c
.RI "template<typename _Tp > _Expr< _BinClos< __less_equal, _Constant, _ValArray, _Tp, _Tp >, typename __fun< __less_equal, _Tp >::result_type > \fBstd::operator<=\fP (const _Tp &__t, const valarray< _Tp > &__v)"
.br
.ti -1c
.RI "template<typename _Tp > _Expr< _BinClos< __less_equal, _ValArray, _Constant, _Tp, _Tp >, typename __fun< __less_equal, _Tp >::result_type > \fBstd::operator<=\fP (const valarray< _Tp > &__v, const _Tp &__t)"
.br
.ti -1c
.RI "template<typename _Tp > _Expr< _BinClos< __less_equal, _ValArray, _ValArray, _Tp, _Tp >, typename __fun< __less_equal, _Tp >::result_type > \fBstd::operator<=\fP (const valarray< _Tp > &__v, const valarray< _Tp > &__w)"
.br
.ti -1c
.RI "template<class _Dom > void \fBstd::slice_array::operator=\fP (const _Expr< _Dom, _Tp > &) const "
.br
.ti -1c
.RI "void \fBstd::slice_array::operator=\fP (const valarray< _Tp > &) const "
.br
.ti -1c
.RI "void \fBstd::slice_array::operator=\fP (const _Tp &) const "
.br
.ti -1c
.RI "slice_array & \fBstd::slice_array::operator=\fP (const slice_array &)"
.br
.ti -1c
.RI "template<class _Ex > void \fBstd::mask_array::operator=\fP (const _Expr< _Ex, _Tp > &__e) const "
.br
.ti -1c
.RI "void \fBstd::mask_array::operator=\fP (const valarray< _Tp > &) const "
.br
.ti -1c
.RI "void \fBstd::mask_array::operator=\fP (const _Tp &) const "
.br
.ti -1c
.RI "mask_array & \fBstd::mask_array::operator=\fP (const mask_array &)"
.br
.ti -1c
.RI "template<class _Dom > void \fBstd::indirect_array::operator=\fP (const _Expr< _Dom, _Tp > &) const "
.br
.ti -1c
.RI "void \fBstd::indirect_array::operator=\fP (const valarray< _Tp > &) const "
.br
.ti -1c
.RI "void \fBstd::indirect_array::operator=\fP (const _Tp &) const "
.br
.ti -1c
.RI "indirect_array & \fBstd::indirect_array::operator=\fP (const indirect_array &)"
.br
.ti -1c
.RI "template<class _Dom > void \fBstd::gslice_array::operator=\fP (const _Expr< _Dom, _Tp > &) const "
.br
.ti -1c
.RI "void \fBstd::gslice_array::operator=\fP (const valarray< _Tp > &) const "
.br
.ti -1c
.RI "void \fBstd::gslice_array::operator=\fP (const _Tp &) const "
.br
.ti -1c
.RI "gslice_array & \fBstd::gslice_array::operator=\fP (const gslice_array &)"
.br
.ti -1c
.RI "gslice & \fBstd::gslice::operator=\fP (const gslice &)"
.br
.ti -1c
.RI "template<class _Dom > valarray< _Tp > & \fBstd::valarray::operator=\fP (const _Expr< _Dom, _Tp > &)"
.br
.ti -1c
.RI "valarray< _Tp > & \fBstd::valarray::operator=\fP (const indirect_array< _Tp > &)"
.br
.ti -1c
.RI "valarray< _Tp > & \fBstd::valarray::operator=\fP (const mask_array< _Tp > &)"
.br
.ti -1c
.RI "valarray< _Tp > & \fBstd::valarray::operator=\fP (const gslice_array< _Tp > &)"
.br
.ti -1c
.RI "valarray< _Tp > & \fBstd::valarray::operator=\fP (const slice_array< _Tp > &)"
.br
.ti -1c
.RI "valarray< _Tp > & \fBstd::valarray::operator=\fP (const _Tp &)"
.br
.ti -1c
.RI "valarray & \fBstd::valarray::operator=\fP (initializer_list< _Tp >)"
.br
.ti -1c
.RI "valarray< _Tp > & \fBstd::valarray::operator=\fP (const valarray< _Tp > &)"
.br
.ti -1c
.RI "template<typename _Tp > _Expr< _BinClos< __equal_to, _Constant, _ValArray, _Tp, _Tp >, typename __fun< __equal_to, _Tp >::result_type > \fBstd::operator==\fP (const _Tp &__t, const valarray< _Tp > &__v)"
.br
.ti -1c
.RI "template<typename _Tp > _Expr< _BinClos< __equal_to, _ValArray, _Constant, _Tp, _Tp >, typename __fun< __equal_to, _Tp >::result_type > \fBstd::operator==\fP (const valarray< _Tp > &__v, const _Tp &__t)"
.br
.ti -1c
.RI "template<typename _Tp > _Expr< _BinClos< __equal_to, _ValArray, _ValArray, _Tp, _Tp >, typename __fun< __equal_to, _Tp >::result_type > \fBstd::operator==\fP (const valarray< _Tp > &__v, const valarray< _Tp > &__w)"
.br
.ti -1c
.RI "template<typename _Tp > _Expr< _BinClos< __greater, _Constant, _ValArray, _Tp, _Tp >, typename __fun< __greater, _Tp >::result_type > \fBstd::operator>\fP (const _Tp &__t, const valarray< _Tp > &__v)"
.br
.ti -1c
.RI "template<typename _Tp > _Expr< _BinClos< __greater, _ValArray, _Constant, _Tp, _Tp >, typename __fun< __greater, _Tp >::result_type > \fBstd::operator>\fP (const valarray< _Tp > &__v, const _Tp &__t)"
.br
.ti -1c
.RI "template<typename _Tp > _Expr< _BinClos< __greater, _ValArray, _ValArray, _Tp, _Tp >, typename __fun< __greater, _Tp >::result_type > \fBstd::operator>\fP (const valarray< _Tp > &__v, const valarray< _Tp > &__w)"
.br
.ti -1c
.RI "template<typename _Tp > _Expr< _BinClos< __greater_equal, _Constant, _ValArray, _Tp, _Tp >, typename __fun< __greater_equal, _Tp >::result_type > \fBstd::operator>=\fP (const _Tp &__t, const valarray< _Tp > &__v)"
.br
.ti -1c
.RI "template<typename _Tp > _Expr< _BinClos< __greater_equal, _ValArray, _Constant, _Tp, _Tp >, typename __fun< __greater_equal, _Tp >::result_type > \fBstd::operator>=\fP (const valarray< _Tp > &__v, const _Tp &__t)"
.br
.ti -1c
.RI "template<typename _Tp > _Expr< _BinClos< __greater_equal, _ValArray, _ValArray, _Tp, _Tp >, typename __fun< __greater_equal, _Tp >::result_type > \fBstd::operator>=\fP (const valarray< _Tp > &__v, const valarray< _Tp > &__w)"
.br
.ti -1c
.RI "template<typename _Tp > _Expr< _BinClos< __shift_right, _Constant, _ValArray, _Tp, _Tp >, typename __fun< __shift_right, _Tp >::result_type > \fBstd::operator>>\fP (const _Tp &__t, const valarray< _Tp > &__v)"
.br
.ti -1c
.RI "template<typename _Tp > _Expr< _BinClos< __shift_right, _ValArray, _Constant, _Tp, _Tp >, typename __fun< __shift_right, _Tp >::result_type > \fBstd::operator>>\fP (const valarray< _Tp > &__v, const _Tp &__t)"
.br
.ti -1c
.RI "template<typename _Tp > _Expr< _BinClos< __shift_right, _ValArray, _ValArray, _Tp, _Tp >, typename __fun< __shift_right, _Tp >::result_type > \fBstd::operator>>\fP (const valarray< _Tp > &__v, const valarray< _Tp > &__w)"
.br
.ti -1c
.RI "template<class _Dom > void \fBstd::slice_array::operator>>=\fP (const _Expr< _Dom, _Tp > &) const "
.br
.ti -1c
.RI "void \fBstd::slice_array::operator>>=\fP (const valarray< _Tp > &) const "
.br
.ti -1c
.RI "template<class _Dom > void \fBstd::mask_array::operator>>=\fP (const _Expr< _Dom, _Tp > &) const "
.br
.ti -1c
.RI "void \fBstd::mask_array::operator>>=\fP (const valarray< _Tp > &) const "
.br
.ti -1c
.RI "template<class _Dom > void \fBstd::indirect_array::operator>>=\fP (const _Expr< _Dom, _Tp > &) const "
.br
.ti -1c
.RI "void \fBstd::indirect_array::operator>>=\fP (const valarray< _Tp > &) const "
.br
.ti -1c
.RI "template<class _Dom > void \fBstd::gslice_array::operator>>=\fP (const _Expr< _Dom, _Tp > &) const "
.br
.ti -1c
.RI "void \fBstd::gslice_array::operator>>=\fP (const valarray< _Tp > &) const "
.br
.ti -1c
.RI "template<class _Dom > valarray< _Tp > & \fBstd::valarray::operator>>=\fP (const _Expr< _Dom, _Tp > &)"
.br
.ti -1c
.RI "valarray< _Tp > & \fBstd::valarray::operator>>=\fP (const valarray< _Tp > &)"
.br
.ti -1c
.RI "valarray< _Tp > & \fBstd::valarray::operator>>=\fP (const _Tp &)"
.br
.ti -1c
.RI "indirect_array< _Tp > \fBstd::valarray::operator[]\fP (const valarray< size_t > &)"
.br
.ti -1c
.RI "_Expr< _IClos< _ValArray, _Tp >, _Tp > \fBstd::valarray::operator[]\fP (const valarray< size_t > &) const "
.br
.ti -1c
.RI "mask_array< _Tp > \fBstd::valarray::operator[]\fP (const valarray< bool > &)"
.br
.ti -1c
.RI "valarray< _Tp > \fBstd::valarray::operator[]\fP (const valarray< bool > &) const "
.br
.ti -1c
.RI "gslice_array< _Tp > \fBstd::valarray::operator[]\fP (const gslice &)"
.br
.ti -1c
.RI "_Expr< _GClos< _ValArray, _Tp >, _Tp > \fBstd::valarray::operator[]\fP (const gslice &) const "
.br
.ti -1c
.RI "slice_array< _Tp > \fBstd::valarray::operator[]\fP (slice)"
.br
.ti -1c
.RI "_Expr< _SClos< _ValArray, _Tp >, _Tp > \fBstd::valarray::operator[]\fP (slice) const "
.br
.ti -1c
.RI "_Tp & \fBstd::valarray::operator[]\fP (size_t)"
.br
.ti -1c
.RI "const _Tp & \fBstd::valarray::operator[]\fP (size_t) const "
.br
.ti -1c
.RI "template<typename _Tp > _Expr< _BinClos< __bitwise_xor, _Constant, _ValArray, _Tp, _Tp >, typename __fun< __bitwise_xor, _Tp >::result_type > \fBstd::operator^\fP (const _Tp &__t, const valarray< _Tp > &__v)"
.br
.ti -1c
.RI "template<typename _Tp > _Expr< _BinClos< __bitwise_xor, _ValArray, _Constant, _Tp, _Tp >, typename __fun< __bitwise_xor, _Tp >::result_type > \fBstd::operator^\fP (const valarray< _Tp > &__v, const _Tp &__t)"
.br
.ti -1c
.RI "template<typename _Tp > _Expr< _BinClos< __bitwise_xor, _ValArray, _ValArray, _Tp, _Tp >, typename __fun< __bitwise_xor, _Tp >::result_type > \fBstd::operator^\fP (const valarray< _Tp > &__v, const valarray< _Tp > &__w)"
.br
.ti -1c
.RI "template<class _Dom > void \fBstd::slice_array::operator^=\fP (const _Expr< _Dom, _Tp > &) const "
.br
.ti -1c
.RI "void \fBstd::slice_array::operator^=\fP (const valarray< _Tp > &) const "
.br
.ti -1c
.RI "template<class _Dom > void \fBstd::mask_array::operator^=\fP (const _Expr< _Dom, _Tp > &) const "
.br
.ti -1c
.RI "void \fBstd::mask_array::operator^=\fP (const valarray< _Tp > &) const "
.br
.ti -1c
.RI "template<class _Dom > void \fBstd::indirect_array::operator^=\fP (const _Expr< _Dom, _Tp > &) const "
.br
.ti -1c
.RI "void \fBstd::indirect_array::operator^=\fP (const valarray< _Tp > &) const "
.br
.ti -1c
.RI "template<class _Dom > void \fBstd::gslice_array::operator^=\fP (const _Expr< _Dom, _Tp > &) const "
.br
.ti -1c
.RI "void \fBstd::gslice_array::operator^=\fP (const valarray< _Tp > &) const "
.br
.ti -1c
.RI "template<class _Dom > valarray< _Tp > & \fBstd::valarray::operator^=\fP (const _Expr< _Dom, _Tp > &)"
.br
.ti -1c
.RI "valarray< _Tp > & \fBstd::valarray::operator^=\fP (const valarray< _Tp > &)"
.br
.ti -1c
.RI "valarray< _Tp > & \fBstd::valarray::operator^=\fP (const _Tp &)"
.br
.ti -1c
.RI "template<typename _Tp > _Expr< _BinClos< __bitwise_or, _Constant, _ValArray, _Tp, _Tp >, typename __fun< __bitwise_or, _Tp >::result_type > \fBstd::operator|\fP (const _Tp &__t, const valarray< _Tp > &__v)"
.br
.ti -1c
.RI "template<typename _Tp > _Expr< _BinClos< __bitwise_or, _ValArray, _Constant, _Tp, _Tp >, typename __fun< __bitwise_or, _Tp >::result_type > \fBstd::operator|\fP (const valarray< _Tp > &__v, const _Tp &__t)"
.br
.ti -1c
.RI "template<typename _Tp > _Expr< _BinClos< __bitwise_or, _ValArray, _ValArray, _Tp, _Tp >, typename __fun< __bitwise_or, _Tp >::result_type > \fBstd::operator|\fP (const valarray< _Tp > &__v, const valarray< _Tp > &__w)"
.br
.ti -1c
.RI "template<class _Dom > void \fBstd::slice_array::operator|=\fP (const _Expr< _Dom, _Tp > &) const "
.br
.ti -1c
.RI "void \fBstd::slice_array::operator|=\fP (const valarray< _Tp > &) const "
.br
.ti -1c
.RI "template<class _Dom > void \fBstd::mask_array::operator|=\fP (const _Expr< _Dom, _Tp > &) const "
.br
.ti -1c
.RI "void \fBstd::mask_array::operator|=\fP (const valarray< _Tp > &) const "
.br
.ti -1c
.RI "template<class _Dom > void \fBstd::indirect_array::operator|=\fP (const _Expr< _Dom, _Tp > &) const "
.br
.ti -1c
.RI "void \fBstd::indirect_array::operator|=\fP (const valarray< _Tp > &) const "
.br
.ti -1c
.RI "template<class _Dom > void \fBstd::gslice_array::operator|=\fP (const _Expr< _Dom, _Tp > &) const "
.br
.ti -1c
.RI "void \fBstd::gslice_array::operator|=\fP (const valarray< _Tp > &) const "
.br
.ti -1c
.RI "template<class _Dom > valarray< _Tp > & \fBstd::valarray::operator|=\fP (const _Expr< _Dom, _Tp > &)"
.br
.ti -1c
.RI "valarray< _Tp > & \fBstd::valarray::operator|=\fP (const valarray< _Tp > &)"
.br
.ti -1c
.RI "valarray< _Tp > & \fBstd::valarray::operator|=\fP (const _Tp &)"
.br
.ti -1c
.RI "template<typename _Tp > _Expr< _BinClos< __logical_or, _Constant, _ValArray, _Tp, _Tp >, typename __fun< __logical_or, _Tp >::result_type > \fBstd::operator||\fP (const _Tp &__t, const valarray< _Tp > &__v)"
.br
.ti -1c
.RI "template<typename _Tp > _Expr< _BinClos< __logical_or, _ValArray, _Constant, _Tp, _Tp >, typename __fun< __logical_or, _Tp >::result_type > \fBstd::operator||\fP (const valarray< _Tp > &__v, const _Tp &__t)"
.br
.ti -1c
.RI "template<typename _Tp > _Expr< _BinClos< __logical_or, _ValArray, _ValArray, _Tp, _Tp >, typename __fun< __logical_or, _Tp >::result_type > \fBstd::operator||\fP (const valarray< _Tp > &__v, const valarray< _Tp > &__w)"
.br
.ti -1c
.RI "_UnaryOp< __bitwise_not >::_Rt \fBstd::valarray::operator~\fP () const "
.br
.ti -1c
.RI "void \fBstd::valarray::resize\fP (size_t __size, _Tp __c=_Tp())"
.br
.ti -1c
.RI "valarray< _Tp > \fBstd::valarray::shift\fP (int) const "
.br
.ti -1c
.RI "size_t \fBstd::slice::size\fP () const "
.br
.ti -1c
.RI "valarray< size_t > \fBstd::gslice::size\fP () const "
.br
.ti -1c
.RI "size_t \fBstd::valarray::size\fP () const "
.br
.ti -1c
.RI "\fBstd::slice::slice\fP (size_t, size_t, size_t)"
.br
.ti -1c
.RI "\fBstd::slice::slice\fP ()"
.br
.ti -1c
.RI "\fBstd::slice_array::slice_array\fP (const slice_array &)"
.br
.ti -1c
.RI "size_t \fBstd::slice::start\fP () const "
.br
.ti -1c
.RI "size_t \fBstd::gslice::start\fP () const "
.br
.ti -1c
.RI "size_t \fBstd::slice::stride\fP () const "
.br
.ti -1c
.RI "valarray< size_t > \fBstd::gslice::stride\fP () const "
.br
.ti -1c
.RI "_Tp \fBstd::valarray::sum\fP () const "
.br
.ti -1c
.RI "template<class _Dom > \fBstd::valarray::valarray\fP (const _Expr< _Dom, _Tp > &__e)"
.br
.ti -1c
.RI "\fBstd::valarray::valarray\fP (initializer_list< _Tp >)"
.br
.ti -1c
.RI "\fBstd::valarray::valarray\fP (const indirect_array< _Tp > &)"
.br
.ti -1c
.RI "\fBstd::valarray::valarray\fP (const mask_array< _Tp > &)"
.br
.ti -1c
.RI "\fBstd::valarray::valarray\fP (const gslice_array< _Tp > &)"
.br
.ti -1c
.RI "\fBstd::valarray::valarray\fP (const slice_array< _Tp > &)"
.br
.ti -1c
.RI "\fBstd::valarray::valarray\fP (const valarray &)"
.br
.ti -1c
.RI "template<typename _Tp> \fBstd::valarray::valarray\fP (const _Tp *__restrict__ __p, size_t __n)"
.br
.ti -1c
.RI "\fBstd::valarray::valarray\fP (const _Tp &, size_t)"
.br
.ti -1c
.RI "\fBstd::valarray::valarray\fP (size_t)"
.br
.ti -1c
.RI "\fBstd::valarray::valarray\fP ()"
.br
.ti -1c
.RI "\fBstd::gslice::~gslice\fP ()"
.br
.in -1c
.SH "Detailed Description"
.PP 
Classes and functions for representing and manipulating arrays of elements. 
.SH "Function Documentation"
.PP 
.SS "template<class _Tp> _Expr< _RefFunClos< _ValArray, _Tp >, _Tp > \fBstd::valarray\fP< _Tp >::apply (_Tp  funcconst _Tp &) const\fC [inline, inherited]\fP"
.PP
Apply a function to the \fBarray\fP. 
.PP
Returns a new \fBvalarray\fP with elements assigned to the result of applying func to the corresponding element of this \fBarray\fP. The new \fBarray\fP has the same size as this one.
.PP
\fBParameters:\fP
.RS 4
\fIfunc\fP Function of const Tp& returning Tp to apply. 
.RE
.PP
\fBReturns:\fP
.RS 4
New \fBvalarray\fP with transformed elements. 
.RE
.PP

.PP
Definition at line 951 of file valarray.
.SS "template<class _Tp> _Expr< _ValFunClos< _ValArray, _Tp >, _Tp > \fBstd::valarray\fP< _Tp >::apply (_Tp  func_Tp) const\fC [inline, inherited]\fP"
.PP
Apply a function to the \fBarray\fP. 
.PP
Returns a new \fBvalarray\fP with elements assigned to the result of applying func to the corresponding element of this \fBarray\fP. The new \fBarray\fP has the same size as this one.
.PP
\fBParameters:\fP
.RS 4
\fIfunc\fP Function of Tp returning Tp to apply. 
.RE
.PP
\fBReturns:\fP
.RS 4
New \fBvalarray\fP with transformed elements. 
.RE
.PP

.PP
Definition at line 943 of file valarray.
.SS "template<class _Tp > valarray< _Tp > \fBstd::valarray\fP< _Tp >::cshift (int __n) const\fC [inline, inherited]\fP"
.PP
Return a rotated \fBarray\fP. 
.PP
A new \fBvalarray\fP is constructed as a copy of this \fBarray\fP with elements in shifted positions. For an element with index i, the new position is (i - n) % \fBsize()\fP. The new \fBvalarray\fP has the same size as the current one. Elements that are shifted beyond the \fBarray\fP bounds are shifted into the other end of the \fBarray\fP. No elements are lost.
.PP
Positive arguments shift toward index 0, wrapping around the top. Negative arguments shift towards the top, wrapping around to 0.
.PP
\fBParameters:\fP
.RS 4
\fIn\fP Number of element positions to rotate. 
.RE
.PP
\fBReturns:\fP
.RS 4
New \fBvalarray\fP with elements in shifted positions. 
.RE
.PP

.PP
Definition at line 869 of file valarray.
.PP
References std::valarray< _Tp >::_M_data, and std::valarray< _Tp >::_M_size.
.SS "std::gslice::gslice (const \fBgslice\fP & __g)\fC [inline, inherited]\fP"
.PP
Copy constructor. 
.PP
Definition at line 156 of file gslice.h.
.SS "std::gslice::gslice (size_t __o, const \fBvalarray\fP< size_t > & __l, const \fBvalarray\fP< size_t > & __s)\fC [inline, inherited]\fP"
.PP
Construct a \fBslice\fP. 
.PP
Constructs a \fBslice\fP with as many dimensions as the length of the \fIl\fP and \fIs\fP arrays.
.PP
\fBParameters:\fP
.RS 4
\fIo\fP Offset in \fBarray\fP of first element. 
.br
\fIl\fP Array of dimension lengths. 
.br
\fIs\fP Array of dimension strides between \fBarray\fP elements. 
.RE
.PP

.PP
Definition at line 151 of file gslice.h.
.SS "std::gslice::gslice ()\fC [inline, inherited]\fP"
.PP
Construct an empty \fBslice\fP. 
.PP
Definition at line 147 of file gslice.h.
.SS "template<typename _Tp > \fBstd::gslice_array\fP< _Tp >::gslice_array (const \fBgslice_array\fP< _Tp > & __a)\fC [inline, inherited]\fP"
.PP
Copy constructor. Both slices refer to the same underlying \fBarray\fP. 
.PP
Definition at line 142 of file gslice_array.h.
.SS "template<typename _Tp > \fBstd::indirect_array\fP< _Tp >::indirect_array (const \fBindirect_array\fP< _Tp > & __a)\fC [inline, inherited]\fP"
.PP
Copy constructor. Both slices refer to the same underlying \fBarray\fP. 
.PP
Definition at line 142 of file indirect_array.h.
.SS "template<typename _Tp > \fBstd::mask_array\fP< _Tp >::mask_array (const \fBmask_array\fP< _Tp > & a)\fC [inline, inherited]\fP"
.PP
Copy constructor. Both slices refer to the same underlying \fBarray\fP. 
.PP
Definition at line 138 of file mask_array.h.
.SS "template<typename _Tp > _Tp \fBstd::valarray\fP< _Tp >::max () const\fC [inline, inherited]\fP"
.PP
Return the maximum element using operator<(). 
.PP
Definition at line 935 of file valarray.
.PP
References std::max_element().
.SS "template<typename _Tp > _Tp \fBstd::valarray\fP< _Tp >::min () const\fC [inline, inherited]\fP"
.PP
Return the minimum element using operator<(). 
.PP
Definition at line 927 of file valarray.
.PP
References std::min_element().
.SS "template<typename _Tp > valarray< _Tp >::template _UnaryOp< __logical_not >::_Rt \fBstd::valarray\fP< _Tp >::operator! () const\fC [inline, inherited]\fP"
.PP
Return a new \fBvalarray\fP by applying unary ! to each element. 
.PP
Definition at line 970 of file valarray.
.SS "template<typename _Tp > void \fBstd::slice_array\fP< _Tp >::operator%= (const \fBvalarray\fP< _Tp > & __v) const\fC [inline, inherited]\fP"
.PP
Modulo \fBslice\fP elements by corresponding elements of \fIv\fP. 
.PP
Definition at line 257 of file slice_array.h.
.SS "template<typename _Tp > void \fBstd::mask_array\fP< _Tp >::operator%= (const \fBvalarray\fP< _Tp > & __v) const\fC [inline, inherited]\fP"
.PP
Modulo \fBslice\fP elements by corresponding elements of \fIv\fP. 
.PP
Definition at line 191 of file mask_array.h.
.SS "template<typename _Tp > void \fBstd::indirect_array\fP< _Tp >::operator%= (const \fBvalarray\fP< _Tp > & __v) const\fC [inline, inherited]\fP"
.PP
Modulo \fBslice\fP elements by corresponding elements of \fIv\fP. 
.PP
Definition at line 195 of file indirect_array.h.
.SS "template<typename _Tp > void \fBstd::gslice_array\fP< _Tp >::operator%= (const \fBvalarray\fP< _Tp > & __v) const\fC [inline, inherited]\fP"
.PP
Modulo \fBslice\fP elements by corresponding elements of \fIv\fP. 
.PP
Definition at line 201 of file gslice_array.h.
.SS "template<class _Tp> valarray< _Tp > & \fBstd::valarray\fP< _Tp >::operator%= (const \fBvalarray\fP< _Tp > & __v)\fC [inline, inherited]\fP"
.PP
Modulo elements of \fBarray\fP by corresponding elements of \fIv\fP. 
.PP
Definition at line 997 of file valarray.
.SS "template<class _Tp> valarray< _Tp > & \fBstd::valarray\fP< _Tp >::operator%= (const _Tp & __t)\fC [inline, inherited]\fP"
.PP
Set each element e of \fBarray\fP to e % \fIt\fP. 
.PP
Definition at line 997 of file valarray.
.SS "template<typename _Tp > void \fBstd::slice_array\fP< _Tp >::operator&= (const \fBvalarray\fP< _Tp > & __v) const\fC [inline, inherited]\fP"
.PP
Logical and \fBslice\fP elements with corresponding elements of \fIv\fP. 
.PP
Definition at line 261 of file slice_array.h.
.SS "template<typename _Tp > void \fBstd::mask_array\fP< _Tp >::operator&= (const \fBvalarray\fP< _Tp > & __v) const\fC [inline, inherited]\fP"
.PP
Logical and \fBslice\fP elements with corresponding elements of \fIv\fP. 
.PP
Definition at line 195 of file mask_array.h.
.SS "template<typename _Tp > void \fBstd::indirect_array\fP< _Tp >::operator&= (const \fBvalarray\fP< _Tp > & __v) const\fC [inline, inherited]\fP"
.PP
Logical and \fBslice\fP elements with corresponding elements of \fIv\fP. 
.PP
Definition at line 199 of file indirect_array.h.
.SS "template<typename _Tp > void \fBstd::gslice_array\fP< _Tp >::operator&= (const \fBvalarray\fP< _Tp > & __v) const\fC [inline, inherited]\fP"
.PP
Logical and \fBslice\fP elements with corresponding elements of \fIv\fP. 
.PP
Definition at line 205 of file gslice_array.h.
.SS "template<class _Tp> valarray< _Tp > & \fBstd::valarray\fP< _Tp >::operator&= (const \fBvalarray\fP< _Tp > & __v)\fC [inline, inherited]\fP"
.PP
Logical and corresponding elements of \fIv\fP with elements of \fBarray\fP. 
.PP
Definition at line 999 of file valarray.
.SS "template<class _Tp> valarray< _Tp > & \fBstd::valarray\fP< _Tp >::operator&= (const _Tp & __t)\fC [inline, inherited]\fP"
.PP
Set each element e of \fBarray\fP to e & \fIt\fP. 
.PP
Definition at line 999 of file valarray.
.SS "template<typename _Tp > void \fBstd::slice_array\fP< _Tp >::operator*= (const \fBvalarray\fP< _Tp > & __v) const\fC [inline, inherited]\fP"
.PP
Multiply \fBslice\fP elements by corresponding elements of \fIv\fP. 
.PP
Definition at line 255 of file slice_array.h.
.SS "template<typename _Tp > void \fBstd::mask_array\fP< _Tp >::operator*= (const \fBvalarray\fP< _Tp > & __v) const\fC [inline, inherited]\fP"
.PP
Multiply \fBslice\fP elements by corresponding elements of \fIv\fP. 
.PP
Definition at line 189 of file mask_array.h.
.SS "template<typename _Tp > void \fBstd::indirect_array\fP< _Tp >::operator*= (const \fBvalarray\fP< _Tp > & __v) const\fC [inline, inherited]\fP"
.PP
Multiply \fBslice\fP elements by corresponding elements of \fIv\fP. 
.PP
Definition at line 193 of file indirect_array.h.
.SS "template<typename _Tp > void \fBstd::gslice_array\fP< _Tp >::operator*= (const \fBvalarray\fP< _Tp > & __v) const\fC [inline, inherited]\fP"
.PP
Multiply \fBslice\fP elements by corresponding elements of \fIv\fP. 
.PP
Definition at line 199 of file gslice_array.h.
.SS "template<class _Tp> valarray< _Tp > & \fBstd::valarray\fP< _Tp >::operator*= (const \fBvalarray\fP< _Tp > & __v)\fC [inline, inherited]\fP"
.PP
Multiply elements of \fBarray\fP by corresponding elements of \fIv\fP. 
.PP
Definition at line 995 of file valarray.
.SS "template<class _Tp> valarray< _Tp > & \fBstd::valarray\fP< _Tp >::operator*= (const _Tp & __t)\fC [inline, inherited]\fP"
.PP
Multiply each element of \fBarray\fP by \fIt\fP. 
.PP
Definition at line 995 of file valarray.
.SS "template<typename _Tp > valarray< _Tp >::template _UnaryOp< __unary_plus >::_Rt \fBstd::valarray\fP< _Tp >::operator+ () const\fC [inline, inherited]\fP"
.PP
Return a new \fBvalarray\fP by applying unary + to each element. 
.PP
Definition at line 967 of file valarray.
.SS "template<typename _Tp > void \fBstd::slice_array\fP< _Tp >::operator+= (const \fBvalarray\fP< _Tp > & __v) const\fC [inline, inherited]\fP"
.PP
Add corresponding elements of \fIv\fP to \fBslice\fP elements. 
.PP
Definition at line 258 of file slice_array.h.
.SS "template<typename _Tp > void \fBstd::mask_array\fP< _Tp >::operator+= (const \fBvalarray\fP< _Tp > & __v) const\fC [inline, inherited]\fP"
.PP
Add corresponding elements of \fIv\fP to \fBslice\fP elements. 
.PP
Definition at line 192 of file mask_array.h.
.SS "template<typename _Tp > void \fBstd::indirect_array\fP< _Tp >::operator+= (const \fBvalarray\fP< _Tp > & __v) const\fC [inline, inherited]\fP"
.PP
Add corresponding elements of \fIv\fP to \fBslice\fP elements. 
.PP
Definition at line 196 of file indirect_array.h.
.SS "template<typename _Tp > void \fBstd::gslice_array\fP< _Tp >::operator+= (const \fBvalarray\fP< _Tp > & __v) const\fC [inline, inherited]\fP"
.PP
Add corresponding elements of \fIv\fP to \fBslice\fP elements. 
.PP
Definition at line 202 of file gslice_array.h.
.SS "template<class _Tp> valarray< _Tp > & \fBstd::valarray\fP< _Tp >::operator+= (const \fBvalarray\fP< _Tp > & __v)\fC [inline, inherited]\fP"
.PP
Add corresponding elements of \fIv\fP to elements of \fBarray\fP. 
.PP
Definition at line 993 of file valarray.
.SS "template<class _Tp> valarray< _Tp > & \fBstd::valarray\fP< _Tp >::operator+= (const _Tp & __t)\fC [inline, inherited]\fP"
.PP
Add \fIt\fP to each element of \fBarray\fP. 
.PP
Definition at line 993 of file valarray.
.SS "template<typename _Tp > valarray< _Tp >::template _UnaryOp< __negate >::_Rt \fBstd::valarray\fP< _Tp >::operator- () const\fC [inline, inherited]\fP"
.PP
Return a new \fBvalarray\fP by applying unary - to each element. 
.PP
Definition at line 968 of file valarray.
.SS "template<typename _Tp > void \fBstd::slice_array\fP< _Tp >::operator-= (const \fBvalarray\fP< _Tp > & __v) const\fC [inline, inherited]\fP"
.PP
Subtract corresponding elements of \fIv\fP from \fBslice\fP elements. 
.PP
Definition at line 259 of file slice_array.h.
.SS "template<typename _Tp > void \fBstd::mask_array\fP< _Tp >::operator-= (const \fBvalarray\fP< _Tp > & __v) const\fC [inline, inherited]\fP"
.PP
Subtract corresponding elements of \fIv\fP from \fBslice\fP elements. 
.PP
Definition at line 193 of file mask_array.h.
.SS "template<typename _Tp > void \fBstd::indirect_array\fP< _Tp >::operator-= (const \fBvalarray\fP< _Tp > & __v) const\fC [inline, inherited]\fP"
.PP
Subtract corresponding elements of \fIv\fP from \fBslice\fP elements. 
.PP
Definition at line 197 of file indirect_array.h.
.SS "template<typename _Tp > void \fBstd::gslice_array\fP< _Tp >::operator-= (const \fBvalarray\fP< _Tp > & __v) const\fC [inline, inherited]\fP"
.PP
Subtract corresponding elements of \fIv\fP from \fBslice\fP elements. 
.PP
Definition at line 203 of file gslice_array.h.
.SS "template<class _Tp> valarray< _Tp > & \fBstd::valarray\fP< _Tp >::operator-= (const \fBvalarray\fP< _Tp > & __v)\fC [inline, inherited]\fP"
.PP
Subtract corresponding elements of \fIv\fP from elements of \fBarray\fP. 
.PP
Definition at line 994 of file valarray.
.SS "template<class _Tp> valarray< _Tp > & \fBstd::valarray\fP< _Tp >::operator-= (const _Tp & __t)\fC [inline, inherited]\fP"
.PP
Subtract \fIt\fP to each element of \fBarray\fP. 
.PP
Definition at line 994 of file valarray.
.SS "template<typename _Tp > void \fBstd::slice_array\fP< _Tp >::operator/= (const \fBvalarray\fP< _Tp > & __v) const\fC [inline, inherited]\fP"
.PP
Divide \fBslice\fP elements by corresponding elements of \fIv\fP. 
.PP
Definition at line 256 of file slice_array.h.
.SS "template<typename _Tp > void \fBstd::mask_array\fP< _Tp >::operator/= (const \fBvalarray\fP< _Tp > & __v) const\fC [inline, inherited]\fP"
.PP
Divide \fBslice\fP elements by corresponding elements of \fIv\fP. 
.PP
Definition at line 190 of file mask_array.h.
.SS "template<typename _Tp > void \fBstd::indirect_array\fP< _Tp >::operator/= (const \fBvalarray\fP< _Tp > & __v) const\fC [inline, inherited]\fP"
.PP
Divide \fBslice\fP elements by corresponding elements of \fIv\fP. 
.PP
Definition at line 194 of file indirect_array.h.
.SS "template<typename _Tp > void \fBstd::gslice_array\fP< _Tp >::operator/= (const \fBvalarray\fP< _Tp > & __v) const\fC [inline, inherited]\fP"
.PP
Divide \fBslice\fP elements by corresponding elements of \fIv\fP. 
.PP
Definition at line 200 of file gslice_array.h.
.SS "template<class _Tp> valarray< _Tp > & \fBstd::valarray\fP< _Tp >::operator/= (const \fBvalarray\fP< _Tp > & __v)\fC [inline, inherited]\fP"
.PP
Divide elements of \fBarray\fP by corresponding elements of \fIv\fP. 
.PP
Definition at line 996 of file valarray.
.SS "template<class _Tp> valarray< _Tp > & \fBstd::valarray\fP< _Tp >::operator/= (const _Tp & __t)\fC [inline, inherited]\fP"
.PP
Divide each element of \fBarray\fP by \fIt\fP. 
.PP
Definition at line 996 of file valarray.
.SS "template<typename _Tp > void \fBstd::slice_array\fP< _Tp >::operator<<= (const \fBvalarray\fP< _Tp > & __v) const\fC [inline, inherited]\fP"
.PP
Left shift \fBslice\fP elements by corresponding elements of \fIv\fP. 
.PP
Definition at line 263 of file slice_array.h.
.SS "template<typename _Tp > void \fBstd::mask_array\fP< _Tp >::operator<<= (const \fBvalarray\fP< _Tp > & __v) const\fC [inline, inherited]\fP"
.PP
Left shift \fBslice\fP elements by corresponding elements of \fIv\fP. 
.PP
Definition at line 197 of file mask_array.h.
.SS "template<typename _Tp > void \fBstd::indirect_array\fP< _Tp >::operator<<= (const \fBvalarray\fP< _Tp > & __v) const\fC [inline, inherited]\fP"
.PP
Left shift \fBslice\fP elements by corresponding elements of \fIv\fP. 
.PP
Definition at line 201 of file indirect_array.h.
.SS "template<typename _Tp > void \fBstd::gslice_array\fP< _Tp >::operator<<= (const \fBvalarray\fP< _Tp > & __v) const\fC [inline, inherited]\fP"
.PP
Left shift \fBslice\fP elements by corresponding elements of \fIv\fP. 
.PP
Definition at line 207 of file gslice_array.h.
.SS "template<class _Tp> valarray< _Tp > & \fBstd::valarray\fP< _Tp >::operator<<= (const \fBvalarray\fP< _Tp > & __v)\fC [inline, inherited]\fP"
.PP
Left shift elements of \fBarray\fP by corresponding elements of \fIv\fP. 
.PP
Definition at line 1001 of file valarray.
.SS "template<class _Tp> valarray< _Tp > & \fBstd::valarray\fP< _Tp >::operator<<= (const _Tp & __t)\fC [inline, inherited]\fP"
.PP
Left shift each element e of \fBarray\fP by \fIt\fP bits. 
.PP
Definition at line 1001 of file valarray.
.SS "template<typename _Tp > void \fBstd::slice_array\fP< _Tp >::operator= (const \fBvalarray\fP< _Tp > & __v) const\fC [inline, inherited]\fP"
.PP
Assign \fBslice\fP elements to corresponding elements of \fIv\fP. 
.PP
Definition at line 228 of file slice_array.h.
.SS "template<typename _Tp > void \fBstd::slice_array\fP< _Tp >::operator= (const _Tp & __t) const\fC [inline, inherited]\fP"
.PP
Assign all \fBslice\fP elements to \fIt\fP. 
.PP
Definition at line 223 of file slice_array.h.
.SS "template<typename _Tp > slice_array< _Tp > & \fBstd::slice_array\fP< _Tp >::operator= (const \fBslice_array\fP< _Tp > & __a)\fC [inline, inherited]\fP"
.PP
Assignment operator. Assigns \fBslice\fP elements to corresponding elements of \fIa\fP. 
.PP
Definition at line 214 of file slice_array.h.
.PP
References std::slice_array< _Tp >::_M_array, std::slice_array< _Tp >::_M_stride, and std::slice_array< _Tp >::_M_sz.
.SS "template<typename _Tp > void \fBstd::mask_array\fP< _Tp >::operator= (const _Tp & __t) const\fC [inline, inherited]\fP"
.PP
Assign all \fBslice\fP elements to \fIt\fP. 
.PP
Definition at line 157 of file mask_array.h.
.SS "template<typename _Tp > mask_array< _Tp > & \fBstd::mask_array\fP< _Tp >::operator= (const \fBmask_array\fP< _Tp > & __a)\fC [inline, inherited]\fP"
.PP
Assignment operator. Assigns elements to corresponding elements of \fIa\fP. 
.PP
Definition at line 148 of file mask_array.h.
.PP
References std::mask_array< _Tp >::_M_array, and std::mask_array< _Tp >::_M_mask.
.SS "template<typename _Tp > void \fBstd::indirect_array\fP< _Tp >::operator= (const \fBvalarray\fP< _Tp > & __v) const\fC [inline, inherited]\fP"
.PP
Assign \fBslice\fP elements to corresponding elements of \fIv\fP. 
.PP
Definition at line 167 of file indirect_array.h.
.SS "template<typename _Tp > void \fBstd::indirect_array\fP< _Tp >::operator= (const _Tp & __t) const\fC [inline, inherited]\fP"
.PP
Assign all \fBslice\fP elements to \fIt\fP. 
.PP
Definition at line 162 of file indirect_array.h.
.SS "template<typename _Tp > indirect_array< _Tp > & \fBstd::indirect_array\fP< _Tp >::operator= (const \fBindirect_array\fP< _Tp > & __a)\fC [inline, inherited]\fP"
.PP
Assignment operator. Assigns elements to corresponding elements of \fIa\fP. 
.PP
Definition at line 153 of file indirect_array.h.
.PP
References std::indirect_array< _Tp >::_M_array, and std::indirect_array< _Tp >::_M_index.
.SS "template<typename _Tp > void \fBstd::gslice_array\fP< _Tp >::operator= (const \fBvalarray\fP< _Tp > & __v) const\fC [inline, inherited]\fP"
.PP
Assign \fBslice\fP elements to corresponding elements of \fIv\fP. 
.PP
Definition at line 165 of file gslice_array.h.
.PP
References std::valarray< _Tp >::size().
.SS "template<typename _Tp > void \fBstd::gslice_array\fP< _Tp >::operator= (const _Tp & __t) const\fC [inline, inherited]\fP"
.PP
Assign all \fBslice\fP elements to \fIt\fP. 
.PP
Definition at line 157 of file gslice_array.h.
.PP
References std::valarray< _Tp >::size().
.SS "template<typename _Tp > gslice_array< _Tp > & \fBstd::gslice_array\fP< _Tp >::operator= (const \fBgslice_array\fP< _Tp > & __a)\fC [inline, inherited]\fP"
.PP
Assignment operator. Assigns \fBslice\fP elements to corresponding elements of \fIa\fP. 
.PP
Definition at line 147 of file gslice_array.h.
.PP
References std::gslice_array< _Tp >::_M_array, std::gslice_array< _Tp >::_M_index, and std::valarray< _Tp >::size().
.SS "gslice & std::gslice::operator= (const \fBgslice\fP & __g)\fC [inline, inherited]\fP"
.PP
Assignment operator. 
.PP
Definition at line 168 of file gslice.h.
.PP
References std::gslice::_M_index.
.SS "template<typename _Tp> valarray< _Tp > & \fBstd::valarray\fP< _Tp >::operator= (const \fBindirect_array\fP< _Tp > & __ia)\fC [inline, inherited]\fP"
.PP
Assign elements to an \fBarray\fP subset. 
.PP
Assign elements of \fBarray\fP to values in \fIia\fP. Results are undefined if \fIia\fP does not have the same size as this \fBarray\fP.
.PP
\fBParameters:\fP
.RS 4
\fIia\fP Array \fBslice\fP to get values from. 
.RE
.PP

.PP
Definition at line 727 of file valarray.
.PP
References std::indirect_array< _Tp >::_M_array, std::indirect_array< _Tp >::_M_index, and std::indirect_array< _Tp >::_M_sz.
.SS "template<typename _Tp> valarray< _Tp > & \fBstd::valarray\fP< _Tp >::operator= (const \fBmask_array\fP< _Tp > & __ma)\fC [inline, inherited]\fP"
.PP
Assign elements to an \fBarray\fP subset. 
.PP
Assign elements of \fBarray\fP to values in \fIma\fP. Results are undefined if \fIma\fP does not have the same size as this \fBarray\fP.
.PP
\fBParameters:\fP
.RS 4
\fIma\fP Array \fBslice\fP to get values from. 
.RE
.PP

.PP
Definition at line 717 of file valarray.
.PP
References std::mask_array< _Tp >::_M_array, std::mask_array< _Tp >::_M_mask, and std::mask_array< _Tp >::_M_sz.
.SS "template<typename _Tp> valarray< _Tp > & \fBstd::valarray\fP< _Tp >::operator= (const \fBgslice_array\fP< _Tp > & __ga)\fC [inline, inherited]\fP"
.PP
Assign elements to an \fBarray\fP subset. 
.PP
Assign elements of \fBarray\fP to values in \fIga\fP. Results are undefined if \fIga\fP does not have the same size as this \fBarray\fP.
.PP
\fBParameters:\fP
.RS 4
\fIga\fP Array \fBslice\fP to get values from. 
.RE
.PP

.PP
Definition at line 707 of file valarray.
.PP
References std::gslice_array< _Tp >::_M_array, std::gslice_array< _Tp >::_M_index, and std::valarray< _Tp >::size().
.SS "template<typename _Tp> valarray< _Tp > & \fBstd::valarray\fP< _Tp >::operator= (const \fBslice_array\fP< _Tp > & __sa)\fC [inline, inherited]\fP"
.PP
Assign elements to an \fBarray\fP subset. 
.PP
Assign elements of \fBarray\fP to values in \fIsa\fP. Results are undefined if \fIsa\fP does not have the same size as this \fBarray\fP.
.PP
\fBParameters:\fP
.RS 4
\fIsa\fP Array \fBslice\fP to get values from. 
.RE
.PP

.PP
Definition at line 697 of file valarray.
.PP
References std::slice_array< _Tp >::_M_array, std::slice_array< _Tp >::_M_stride, and std::slice_array< _Tp >::_M_sz.
.SS "template<typename _Tp> valarray< _Tp > & \fBstd::valarray\fP< _Tp >::operator= (const _Tp & __t)\fC [inline, inherited]\fP"
.PP
Assign elements to a value. 
.PP
Assign all elements of \fBarray\fP to \fIt\fP.
.PP
\fBParameters:\fP
.RS 4
\fIt\fP Value for elements. 
.RE
.PP

.PP
Definition at line 689 of file valarray.
.SS "template<typename _Tp> valarray< _Tp > & \fBstd::valarray\fP< _Tp >::operator= (\fBinitializer_list\fP< _Tp > __l)\fC [inline, inherited]\fP"
.PP
Assign elements to an \fBinitializer_list\fP. 
.PP
Assign elements of \fBarray\fP to values in \fIl\fP. Results are undefined if \fIl\fP does not have the same size as this \fBarray\fP.
.PP
\fBParameters:\fP
.RS 4
\fIl\fP \fBinitializer_list\fP to get values from. 
.RE
.PP

.PP
Definition at line 680 of file valarray.
.PP
References std::initializer_list< _E >::begin(), and std::initializer_list< _E >::size().
.SS "template<typename _Tp> valarray< _Tp > & \fBstd::valarray\fP< _Tp >::operator= (const \fBvalarray\fP< _Tp > & __v)\fC [inline, inherited]\fP"
.PP
Assign elements to an \fBarray\fP. 
.PP
Assign elements of \fBarray\fP to values in \fIv\fP. Results are undefined if \fIv\fP does not have the same size as this \fBarray\fP.
.PP
\fBParameters:\fP
.RS 4
\fIv\fP Valarray to get values from. 
.RE
.PP

.PP
Definition at line 670 of file valarray.
.PP
References std::valarray< _Tp >::_M_data, and std::valarray< _Tp >::_M_size.
.SS "template<typename _Tp > void \fBstd::slice_array\fP< _Tp >::operator>>= (const \fBvalarray\fP< _Tp > & __v) const\fC [inline, inherited]\fP"
.PP
Right shift \fBslice\fP elements by corresponding elements of \fIv\fP. 
.PP
Definition at line 264 of file slice_array.h.
.SS "template<typename _Tp > void \fBstd::mask_array\fP< _Tp >::operator>>= (const \fBvalarray\fP< _Tp > & __v) const\fC [inline, inherited]\fP"
.PP
Right shift \fBslice\fP elements by corresponding elements of \fIv\fP. 
.PP
Definition at line 198 of file mask_array.h.
.SS "template<typename _Tp > void \fBstd::indirect_array\fP< _Tp >::operator>>= (const \fBvalarray\fP< _Tp > & __v) const\fC [inline, inherited]\fP"
.PP
Right shift \fBslice\fP elements by corresponding elements of \fIv\fP. 
.PP
Definition at line 202 of file indirect_array.h.
.SS "template<typename _Tp > void \fBstd::gslice_array\fP< _Tp >::operator>>= (const \fBvalarray\fP< _Tp > & __v) const\fC [inline, inherited]\fP"
.PP
Right shift \fBslice\fP elements by corresponding elements of \fIv\fP. 
.PP
Definition at line 208 of file gslice_array.h.
.SS "template<class _Tp> valarray< _Tp > & \fBstd::valarray\fP< _Tp >::operator>>= (const \fBvalarray\fP< _Tp > & __v)\fC [inline, inherited]\fP"
.PP
Right shift elements of \fBarray\fP by corresponding elements of \fIv\fP. 
.PP
Definition at line 1002 of file valarray.
.SS "template<class _Tp> valarray< _Tp > & \fBstd::valarray\fP< _Tp >::operator>>= (const _Tp & __t)\fC [inline, inherited]\fP"
.PP
Right shift each element e of \fBarray\fP by \fIt\fP bits. 
.PP
Definition at line 1002 of file valarray.
.SS "template<typename _Tp > indirect_array< _Tp > \fBstd::valarray\fP< _Tp >::operator[] (const \fBvalarray\fP< size_t > & __i)\fC [inline, inherited]\fP"
.PP
Return a reference to an \fBarray\fP subset. 
.PP
Returns an \fBindirect_array\fP referencing the elements of the \fBarray\fP indicated by the argument. The elements in the argument are interpreted as the indices of elements of this \fBvalarray\fP to include in the subset. The returned \fBindirect_array\fP refers to these elements.
.PP
\fBParameters:\fP
.RS 4
\fIi\fP The \fBvalarray\fP element index \fBlist\fP. 
.RE
.PP
\fBReturns:\fP
.RS 4
Indirect_array referencing elements in \fIi\fP. 
.RE
.PP

.PP
Definition at line 807 of file valarray.
.PP
References std::valarray< _Tp >::size().
.SS "template<typename _Tp > _Expr< _IClos< _ValArray, _Tp >, _Tp > \fBstd::valarray\fP< _Tp >::operator[] (const \fBvalarray\fP< size_t > & __i) const\fC [inline, inherited]\fP"
.PP
Return an \fBarray\fP subset. 
.PP
Returns a new \fBvalarray\fP containing the elements of the \fBarray\fP indicated by the argument. The elements in the argument are interpreted as the indices of elements of this \fBvalarray\fP to copy to the return \fBvalarray\fP.
.PP
\fBParameters:\fP
.RS 4
\fIi\fP The \fBvalarray\fP element index \fBlist\fP. 
.RE
.PP
\fBReturns:\fP
.RS 4
New \fBvalarray\fP containing elements in \fIs\fP. 
.RE
.PP

.PP
Definition at line 799 of file valarray.
.SS "template<typename _Tp > mask_array< _Tp > \fBstd::valarray\fP< _Tp >::operator[] (const \fBvalarray\fP< bool > & __m)\fC [inline, inherited]\fP"
.PP
Return a reference to an \fBarray\fP subset. 
.PP
Returns a new \fBmask_array\fP referencing the elements of the \fBarray\fP indicated by the argument. The input is a \fBvalarray\fP of bool which represents a bitmask indicating which elements are part of the subset. Elements of the \fBarray\fP are part of the subset if the corresponding element of the argument is true.
.PP
\fBParameters:\fP
.RS 4
\fIm\fP The \fBvalarray\fP bitmask. 
.RE
.PP
\fBReturns:\fP
.RS 4
New \fBvalarray\fP containing elements indicated by \fIm\fP. 
.RE
.PP

.PP
Definition at line 788 of file valarray.
.PP
References std::valarray< _Tp >::size().
.SS "template<typename _Tp > valarray< _Tp > \fBstd::valarray\fP< _Tp >::operator[] (const \fBvalarray\fP< bool > & __m) const\fC [inline, inherited]\fP"
.PP
Return an \fBarray\fP subset. 
.PP
Returns a new \fBvalarray\fP containing the elements of the \fBarray\fP indicated by the argument. The input is a \fBvalarray\fP of bool which represents a bitmask indicating which elements should be copied into the new \fBvalarray\fP. Each element of the \fBarray\fP is added to the return \fBvalarray\fP if the corresponding element of the argument is true.
.PP
\fBParameters:\fP
.RS 4
\fIm\fP The \fBvalarray\fP bitmask. 
.RE
.PP
\fBReturns:\fP
.RS 4
New \fBvalarray\fP containing elements indicated by \fIm\fP. 
.RE
.PP

.PP
Definition at line 776 of file valarray.
.PP
References std::valarray< _Tp >::size().
.SS "template<typename _Tp > gslice_array< _Tp > \fBstd::valarray\fP< _Tp >::operator[] (const \fBgslice\fP & __gs)\fC [inline, inherited]\fP"
.PP
Return a reference to an \fBarray\fP subset. 
.PP
Returns a new \fBvalarray\fP containing the elements of the \fBarray\fP indicated by the \fBgslice\fP argument. The new \fBvalarray\fP has the same size as the input \fBgslice\fP. 
.PP
\fBSee also:\fP
.RS 4
\fBgslice\fP.
.RE
.PP
\fBParameters:\fP
.RS 4
\fIs\fP The source \fBgslice\fP. 
.RE
.PP
\fBReturns:\fP
.RS 4
New \fBvalarray\fP containing elements in \fIs\fP. 
.RE
.PP

.PP
Definition at line 768 of file valarray.
.PP
References std::gslice::_M_index.
.SS "template<typename _Tp > _Expr< _GClos< _ValArray, _Tp >, _Tp > \fBstd::valarray\fP< _Tp >::operator[] (const \fBgslice\fP & __gs) const\fC [inline, inherited]\fP"
.PP
Return an \fBarray\fP subset. 
.PP
Returns a \fBslice_array\fP referencing the elements of the \fBarray\fP indicated by the \fBslice\fP argument. 
.PP
\fBSee also:\fP
.RS 4
\fBgslice\fP.
.RE
.PP
\fBParameters:\fP
.RS 4
\fIs\fP The source \fBslice\fP. 
.RE
.PP
\fBReturns:\fP
.RS 4
Slice_array referencing elements indicated by \fIs\fP. 
.RE
.PP

.PP
Definition at line 759 of file valarray.
.PP
References std::gslice::_M_index.
.SS "template<typename _Tp > slice_array< _Tp > \fBstd::valarray\fP< _Tp >::operator[] (\fBslice\fP __s)\fC [inline, inherited]\fP"
.PP
Return a reference to an \fBarray\fP subset. 
.PP
Returns a new \fBvalarray\fP containing the elements of the \fBarray\fP indicated by the \fBslice\fP argument. The new \fBvalarray\fP has the same size as the input \fBslice\fP. 
.PP
\fBSee also:\fP
.RS 4
\fBslice\fP.
.RE
.PP
\fBParameters:\fP
.RS 4
\fIs\fP The source \fBslice\fP. 
.RE
.PP
\fBReturns:\fP
.RS 4
New \fBvalarray\fP containing elements in \fIs\fP. 
.RE
.PP

.PP
Definition at line 754 of file valarray.
.SS "template<typename _Tp > _Expr< _SClos< _ValArray, _Tp >, _Tp > \fBstd::valarray\fP< _Tp >::operator[] (\fBslice\fP __s) const\fC [inline, inherited]\fP"
.PP
Return an \fBarray\fP subset. 
.PP
Returns a new \fBvalarray\fP containing the elements of the \fBarray\fP indicated by the \fBslice\fP argument. The new \fBvalarray\fP has the same size as the input \fBslice\fP. 
.PP
\fBSee also:\fP
.RS 4
\fBslice\fP.
.RE
.PP
\fBParameters:\fP
.RS 4
\fIs\fP The source \fBslice\fP. 
.RE
.PP
\fBReturns:\fP
.RS 4
New \fBvalarray\fP containing elements in \fIs\fP. 
.RE
.PP

.PP
Definition at line 746 of file valarray.
.SS "template<typename _Tp > _Tp & \fBstd::valarray\fP< _Tp >::operator[] (size_t __i)\fC [inline, inherited]\fP"
.PP
Return a reference to the i'th \fBarray\fP element.
.PP
\fBParameters:\fP
.RS 4
\fIi\fP Index of element to return. 
.RE
.PP
\fBReturns:\fP
.RS 4
Reference to the i'th element. 
.RE
.PP

.PP
Definition at line 552 of file valarray.
.SS "template<typename _Tp > void \fBstd::slice_array\fP< _Tp >::operator^= (const \fBvalarray\fP< _Tp > & __v) const\fC [inline, inherited]\fP"
.PP
Logical xor \fBslice\fP elements with corresponding elements of \fIv\fP. 
.PP
Definition at line 260 of file slice_array.h.
.SS "template<typename _Tp > void \fBstd::mask_array\fP< _Tp >::operator^= (const \fBvalarray\fP< _Tp > & __v) const\fC [inline, inherited]\fP"
.PP
Logical xor \fBslice\fP elements with corresponding elements of \fIv\fP. 
.PP
Definition at line 194 of file mask_array.h.
.SS "template<typename _Tp > void \fBstd::indirect_array\fP< _Tp >::operator^= (const \fBvalarray\fP< _Tp > & __v) const\fC [inline, inherited]\fP"
.PP
Logical xor \fBslice\fP elements with corresponding elements of \fIv\fP. 
.PP
Definition at line 198 of file indirect_array.h.
.SS "template<typename _Tp > void \fBstd::gslice_array\fP< _Tp >::operator^= (const \fBvalarray\fP< _Tp > & __v) const\fC [inline, inherited]\fP"
.PP
Logical xor \fBslice\fP elements with corresponding elements of \fIv\fP. 
.PP
Definition at line 204 of file gslice_array.h.
.SS "template<class _Tp> valarray< _Tp > & \fBstd::valarray\fP< _Tp >::operator^= (const \fBvalarray\fP< _Tp > & __v)\fC [inline, inherited]\fP"
.PP
Logical xor corresponding elements of \fIv\fP with elements of \fBarray\fP. 
.PP
Definition at line 998 of file valarray.
.SS "template<class _Tp> valarray< _Tp > & \fBstd::valarray\fP< _Tp >::operator^= (const _Tp & __t)\fC [inline, inherited]\fP"
.PP
Set each element e of \fBarray\fP to e ^ \fIt\fP. 
.PP
Definition at line 998 of file valarray.
.SS "template<typename _Tp > void \fBstd::slice_array\fP< _Tp >::operator|= (const \fBvalarray\fP< _Tp > & __v) const\fC [inline, inherited]\fP"
.PP
Logical or \fBslice\fP elements with corresponding elements of \fIv\fP. 
.PP
Definition at line 262 of file slice_array.h.
.SS "template<typename _Tp > void \fBstd::mask_array\fP< _Tp >::operator|= (const \fBvalarray\fP< _Tp > & __v) const\fC [inline, inherited]\fP"
.PP
Logical or \fBslice\fP elements with corresponding elements of \fIv\fP. 
.PP
Definition at line 196 of file mask_array.h.
.SS "template<typename _Tp > void \fBstd::indirect_array\fP< _Tp >::operator|= (const \fBvalarray\fP< _Tp > & __v) const\fC [inline, inherited]\fP"
.PP
Logical or \fBslice\fP elements with corresponding elements of \fIv\fP. 
.PP
Definition at line 200 of file indirect_array.h.
.SS "template<typename _Tp > void \fBstd::gslice_array\fP< _Tp >::operator|= (const \fBvalarray\fP< _Tp > & __v) const\fC [inline, inherited]\fP"
.PP
Logical or \fBslice\fP elements with corresponding elements of \fIv\fP. 
.PP
Definition at line 206 of file gslice_array.h.
.SS "template<class _Tp> valarray< _Tp > & \fBstd::valarray\fP< _Tp >::operator|= (const \fBvalarray\fP< _Tp > & __v)\fC [inline, inherited]\fP"
.PP
Logical or corresponding elements of \fIv\fP with elements of \fBarray\fP. 
.PP
Definition at line 1000 of file valarray.
.SS "template<class _Tp> valarray< _Tp > & \fBstd::valarray\fP< _Tp >::operator|= (const _Tp & __t)\fC [inline, inherited]\fP"
.PP
Set each element e of \fBarray\fP to e | \fIt\fP. 
.PP
Definition at line 1000 of file valarray.
.SS "template<typename _Tp > valarray< _Tp >::template _UnaryOp< __bitwise_not >::_Rt \fBstd::valarray\fP< _Tp >::operator~ () const\fC [inline, inherited]\fP"
.PP
Return a new \fBvalarray\fP by applying unary ~ to each element. 
.PP
Definition at line 969 of file valarray.
.SS "template<class _Tp> void \fBstd::valarray\fP< _Tp >::resize (size_t __size, _Tp __c = \fC_Tp()\fP)\fC [inline, inherited]\fP"
.PP
Resize \fBarray\fP. 
.PP
Resize this \fBarray\fP to \fIsize\fP and \fBset\fP all elements to \fIc\fP. All references and iterators are invalidated.
.PP
\fBParameters:\fP
.RS 4
\fIsize\fP New \fBarray\fP size. 
.br
\fIc\fP New value for all elements. 
.RE
.PP

.PP
Definition at line 910 of file valarray.
.SS "template<class _Tp > valarray< _Tp > \fBstd::valarray\fP< _Tp >::shift (int __n) const\fC [inline, inherited]\fP"
.PP
Return a shifted \fBarray\fP. 
.PP
A new \fBvalarray\fP is constructed as a copy of this \fBarray\fP with elements in shifted positions. For an element with index i, the new position is i - n. The new \fBvalarray\fP has the same size as the current one. New elements without a value are \fBset\fP to 0. Elements whose new position is outside the bounds of the \fBarray\fP are discarded.
.PP
Positive arguments shift toward index 0, discarding elements [0, n). Negative arguments discard elements from the top of the \fBarray\fP.
.PP
\fBParameters:\fP
.RS 4
\fIn\fP Number of element positions to shift. 
.RE
.PP
\fBReturns:\fP
.RS 4
New \fBvalarray\fP with elements in shifted positions. 
.RE
.PP

.PP
Definition at line 828 of file valarray.
.PP
References std::valarray< _Tp >::_M_data, and std::valarray< _Tp >::_M_size.
.SS "size_t std::slice::size () const\fC [inline, inherited]\fP"
.PP
Return size of \fBslice\fP. 
.PP
Definition at line 101 of file slice_array.h.
.SS "valarray< size_t > std::gslice::size () const\fC [inline, inherited]\fP"
.PP
Return \fBarray\fP of sizes of \fBslice\fP dimensions. 
.PP
Definition at line 137 of file gslice.h.
.SS "template<class _Tp > size_t \fBstd::valarray\fP< _Tp >::size () const\fC [inline, inherited]\fP"
.PP
Return the number of elements in \fBarray\fP. 
.PP
Definition at line 815 of file valarray.
.PP
Referenced by std::valarray< _Tp >::operator=(), std::gslice_array< _Tp >::operator=(), and std::valarray< _Tp >::operator[]().
.SS "std::slice::slice (size_t __o, size_t __d, size_t __s)\fC [inline, inherited]\fP"
.PP
Construct a \fBslice\fP. 
.PP
\fBParameters:\fP
.RS 4
\fIo\fP Offset in \fBarray\fP of first element. 
.br
\fId\fP Number of elements in \fBslice\fP. 
.br
\fIs\fP Stride between \fBarray\fP elements. 
.RE
.PP

.PP
Definition at line 93 of file slice_array.h.
.SS "std::slice::slice ()\fC [inline, inherited]\fP"
.PP
Construct an empty \fBslice\fP. 
.PP
Definition at line 89 of file slice_array.h.
.SS "template<typename _Tp > \fBstd::slice_array\fP< _Tp >::slice_array (const \fBslice_array\fP< _Tp > & a)\fC [inline, inherited]\fP"
.PP
Copy constructor. Both slices refer to the same underlying \fBarray\fP. 
.PP
Definition at line 206 of file slice_array.h.
.SS "size_t std::slice::start () const\fC [inline, inherited]\fP"
.PP
Return \fBarray\fP offset of first \fBslice\fP element. 
.PP
Definition at line 97 of file slice_array.h.
.SS "size_t std::gslice::start () const\fC [inline, inherited]\fP"
.PP
Return \fBarray\fP offset of first \fBslice\fP element. 
.PP
Definition at line 133 of file gslice.h.
.SS "size_t std::slice::stride () const\fC [inline, inherited]\fP"
.PP
Return \fBarray\fP stride of \fBslice\fP. 
.PP
Definition at line 105 of file slice_array.h.
.SS "valarray< size_t > std::gslice::stride () const\fC [inline, inherited]\fP"
.PP
Return \fBarray\fP of \fBarray\fP strides for each dimension. 
.PP
Definition at line 141 of file gslice.h.
.SS "template<class _Tp > _Tp \fBstd::valarray\fP< _Tp >::sum () const\fC [inline, inherited]\fP"
.PP
Return the sum of all elements in the \fBarray\fP. 
.PP
Accumulates the sum of all elements into a Tp using +=. The order of adding the elements is unspecified. 
.PP
Definition at line 820 of file valarray.
.SS "template<typename _Tp> \fBstd::valarray\fP< _Tp >::valarray (\fBinitializer_list\fP< _Tp > __l)\fC [inline, inherited]\fP"
.PP
Construct an \fBarray\fP with an \fBinitializer_list\fP of values. 
.PP
Definition at line 649 of file valarray.
.PP
References std::initializer_list< _E >::begin(), and std::initializer_list< _E >::end().
.SS "template<typename _Tp> \fBstd::valarray\fP< _Tp >::valarray (const \fBindirect_array\fP< _Tp > & __ia)\fC [inline, inherited]\fP"
.PP
Construct an \fBarray\fP with the same size and values in \fIia\fP. 
.PP
Definition at line 639 of file valarray.
.PP
References std::indirect_array< _Tp >::_M_array, and std::indirect_array< _Tp >::_M_index.
.SS "template<typename _Tp> \fBstd::valarray\fP< _Tp >::valarray (const \fBmask_array\fP< _Tp > & __ma)\fC [inline, inherited]\fP"
.PP
Construct an \fBarray\fP with the same size and values in \fIma\fP. 
.PP
Definition at line 630 of file valarray.
.PP
References std::mask_array< _Tp >::_M_array, and std::mask_array< _Tp >::_M_mask.
.SS "template<typename _Tp> \fBstd::valarray\fP< _Tp >::valarray (const \fBgslice_array\fP< _Tp > & __ga)\fC [inline, inherited]\fP"
.PP
Construct an \fBarray\fP with the same size and values in \fIga\fP. 
.PP
Definition at line 619 of file valarray.
.PP
References std::gslice_array< _Tp >::_M_array, and std::gslice_array< _Tp >::_M_index.
.SS "template<typename _Tp> \fBstd::valarray\fP< _Tp >::valarray (const \fBslice_array\fP< _Tp > & __sa)\fC [inline, inherited]\fP"
.PP
Construct an \fBarray\fP with the same size and values in \fIsa\fP. 
.PP
Definition at line 610 of file valarray.
.PP
References std::slice_array< _Tp >::_M_array, std::slice_array< _Tp >::_M_stride, and std::slice_array< _Tp >::_M_sz.
.SS "template<typename _Tp> \fBstd::valarray\fP< _Tp >::valarray (const \fBvalarray\fP< _Tp > & __v)\fC [inline, inherited]\fP"
.PP
Copy constructor. 
.PP
Definition at line 603 of file valarray.
.PP
References std::valarray< _Tp >::_M_data.
.SS "template<typename _Tp> \fBstd::valarray\fP< _Tp >::valarray (const _Tp & __t, size_t __n)\fC [inline, inherited]\fP"
.PP
Construct an \fBarray\fP with \fIn\fP elements initialized to \fIt\fP. 
.PP
Definition at line 588 of file valarray.
.SS "template<typename _Tp > \fBstd::valarray\fP< _Tp >::valarray (size_t __n)\fC [inline, explicit, inherited]\fP"
.PP
Construct an \fBarray\fP with \fIn\fP elements. 
.PP
Definition at line 582 of file valarray.
.SS "template<typename _Tp > \fBstd::valarray\fP< _Tp >::valarray ()\fC [inline, inherited]\fP"
.PP
Construct an empty \fBarray\fP. 
.PP
Definition at line 578 of file valarray.
.SS "std::gslice::~gslice ()\fC [inline, inherited]\fP"
.PP
Destructor. 
.PP
Definition at line 161 of file gslice.h.
.SH "Author"
.PP 
Generated automatically by Doxygen for libstdc++ from the source code.
