.TH "std::__debug" 3 "21 Apr 2009" "libstdc++" \" -*- nroff -*-
.ad l
.nh
.SH NAME
std::__debug \- GNU debug code, replaces standard behavior with debug behavior.  

.PP
.SH SYNOPSIS
.br
.PP
.SS "Functions"

.in +1c
.ti -1c
.RI "template<typename _Key , typename _Compare , typename _Allocator > bool \fBoperator!=\fP (const set< _Key, _Compare, _Allocator > &__lhs, const set< _Key, _Compare, _Allocator > &__rhs)"
.br
.ti -1c
.RI "template<typename _Key , typename _Compare , typename _Allocator > bool \fBoperator!=\fP (const multiset< _Key, _Compare, _Allocator > &__lhs, const multiset< _Key, _Compare, _Allocator > &__rhs)"
.br
.ti -1c
.RI "template<typename _Key , typename _Tp , typename _Compare , typename _Allocator > bool \fBoperator!=\fP (const multimap< _Key, _Tp, _Compare, _Allocator > &__lhs, const multimap< _Key, _Tp, _Compare, _Allocator > &__rhs)"
.br
.ti -1c
.RI "template<typename _Key , typename _Tp , typename _Compare , typename _Allocator > bool \fBoperator!=\fP (const map< _Key, _Tp, _Compare, _Allocator > &__lhs, const map< _Key, _Tp, _Compare, _Allocator > &__rhs)"
.br
.ti -1c
.RI "template<typename _Tp , typename _Alloc > bool \fBoperator!=\fP (const vector< _Tp, _Alloc > &__lhs, const vector< _Tp, _Alloc > &__rhs)"
.br
.ti -1c
.RI "template<typename _Tp , typename _Alloc > bool \fBoperator!=\fP (const list< _Tp, _Alloc > &__lhs, const list< _Tp, _Alloc > &__rhs)"
.br
.ti -1c
.RI "template<typename _Tp , typename _Alloc > bool \fBoperator!=\fP (const deque< _Tp, _Alloc > &__lhs, const deque< _Tp, _Alloc > &__rhs)"
.br
.ti -1c
.RI "template<size_t _Nb> bitset< _Nb > \fBoperator&\fP (const bitset< _Nb > &__x, const bitset< _Nb > &__y)"
.br
.ti -1c
.RI "template<typename _Key , typename _Compare , typename _Allocator > bool \fBoperator<\fP (const set< _Key, _Compare, _Allocator > &__lhs, const set< _Key, _Compare, _Allocator > &__rhs)"
.br
.ti -1c
.RI "template<typename _Key , typename _Compare , typename _Allocator > bool \fBoperator<\fP (const multiset< _Key, _Compare, _Allocator > &__lhs, const multiset< _Key, _Compare, _Allocator > &__rhs)"
.br
.ti -1c
.RI "template<typename _Key , typename _Tp , typename _Compare , typename _Allocator > bool \fBoperator<\fP (const multimap< _Key, _Tp, _Compare, _Allocator > &__lhs, const multimap< _Key, _Tp, _Compare, _Allocator > &__rhs)"
.br
.ti -1c
.RI "template<typename _Key , typename _Tp , typename _Compare , typename _Allocator > bool \fBoperator<\fP (const map< _Key, _Tp, _Compare, _Allocator > &__lhs, const map< _Key, _Tp, _Compare, _Allocator > &__rhs)"
.br
.ti -1c
.RI "template<typename _Tp , typename _Alloc > bool \fBoperator<\fP (const vector< _Tp, _Alloc > &__lhs, const vector< _Tp, _Alloc > &__rhs)"
.br
.ti -1c
.RI "template<typename _Tp , typename _Alloc > bool \fBoperator<\fP (const list< _Tp, _Alloc > &__lhs, const list< _Tp, _Alloc > &__rhs)"
.br
.ti -1c
.RI "template<typename _Tp , typename _Alloc > bool \fBoperator<\fP (const deque< _Tp, _Alloc > &__lhs, const deque< _Tp, _Alloc > &__rhs)"
.br
.ti -1c
.RI "template<typename _CharT , typename _Traits , size_t _Nb> \fBstd::basic_ostream\fP< _CharT, _Traits > & \fBoperator<<\fP (\fBstd::basic_ostream\fP< _CharT, _Traits > &__os, const bitset< _Nb > &__x)"
.br
.ti -1c
.RI "template<typename _Key , typename _Compare , typename _Allocator > bool \fBoperator<=\fP (const set< _Key, _Compare, _Allocator > &__lhs, const set< _Key, _Compare, _Allocator > &__rhs)"
.br
.ti -1c
.RI "template<typename _Key , typename _Compare , typename _Allocator > bool \fBoperator<=\fP (const multiset< _Key, _Compare, _Allocator > &__lhs, const multiset< _Key, _Compare, _Allocator > &__rhs)"
.br
.ti -1c
.RI "template<typename _Key , typename _Tp , typename _Compare , typename _Allocator > bool \fBoperator<=\fP (const multimap< _Key, _Tp, _Compare, _Allocator > &__lhs, const multimap< _Key, _Tp, _Compare, _Allocator > &__rhs)"
.br
.ti -1c
.RI "template<typename _Key , typename _Tp , typename _Compare , typename _Allocator > bool \fBoperator<=\fP (const map< _Key, _Tp, _Compare, _Allocator > &__lhs, const map< _Key, _Tp, _Compare, _Allocator > &__rhs)"
.br
.ti -1c
.RI "template<typename _Tp , typename _Alloc > bool \fBoperator<=\fP (const vector< _Tp, _Alloc > &__lhs, const vector< _Tp, _Alloc > &__rhs)"
.br
.ti -1c
.RI "template<typename _Tp , typename _Alloc > bool \fBoperator<=\fP (const list< _Tp, _Alloc > &__lhs, const list< _Tp, _Alloc > &__rhs)"
.br
.ti -1c
.RI "template<typename _Tp , typename _Alloc > bool \fBoperator<=\fP (const deque< _Tp, _Alloc > &__lhs, const deque< _Tp, _Alloc > &__rhs)"
.br
.ti -1c
.RI "template<typename _Key , typename _Compare , typename _Allocator > bool \fBoperator==\fP (const set< _Key, _Compare, _Allocator > &__lhs, const set< _Key, _Compare, _Allocator > &__rhs)"
.br
.ti -1c
.RI "template<typename _Key , typename _Compare , typename _Allocator > bool \fBoperator==\fP (const multiset< _Key, _Compare, _Allocator > &__lhs, const multiset< _Key, _Compare, _Allocator > &__rhs)"
.br
.ti -1c
.RI "template<typename _Key , typename _Tp , typename _Compare , typename _Allocator > bool \fBoperator==\fP (const multimap< _Key, _Tp, _Compare, _Allocator > &__lhs, const multimap< _Key, _Tp, _Compare, _Allocator > &__rhs)"
.br
.ti -1c
.RI "template<typename _Key , typename _Tp , typename _Compare , typename _Allocator > bool \fBoperator==\fP (const map< _Key, _Tp, _Compare, _Allocator > &__lhs, const map< _Key, _Tp, _Compare, _Allocator > &__rhs)"
.br
.ti -1c
.RI "template<typename _Tp , typename _Alloc > bool \fBoperator==\fP (const vector< _Tp, _Alloc > &__lhs, const vector< _Tp, _Alloc > &__rhs)"
.br
.ti -1c
.RI "template<typename _Tp , typename _Alloc > bool \fBoperator==\fP (const list< _Tp, _Alloc > &__lhs, const list< _Tp, _Alloc > &__rhs)"
.br
.ti -1c
.RI "template<typename _Tp , typename _Alloc > bool \fBoperator==\fP (const deque< _Tp, _Alloc > &__lhs, const deque< _Tp, _Alloc > &__rhs)"
.br
.ti -1c
.RI "template<typename _Key , typename _Compare , typename _Allocator > bool \fBoperator>\fP (const set< _Key, _Compare, _Allocator > &__lhs, const set< _Key, _Compare, _Allocator > &__rhs)"
.br
.ti -1c
.RI "template<typename _Key , typename _Compare , typename _Allocator > bool \fBoperator>\fP (const multiset< _Key, _Compare, _Allocator > &__lhs, const multiset< _Key, _Compare, _Allocator > &__rhs)"
.br
.ti -1c
.RI "template<typename _Key , typename _Tp , typename _Compare , typename _Allocator > bool \fBoperator>\fP (const multimap< _Key, _Tp, _Compare, _Allocator > &__lhs, const multimap< _Key, _Tp, _Compare, _Allocator > &__rhs)"
.br
.ti -1c
.RI "template<typename _Key , typename _Tp , typename _Compare , typename _Allocator > bool \fBoperator>\fP (const map< _Key, _Tp, _Compare, _Allocator > &__lhs, const map< _Key, _Tp, _Compare, _Allocator > &__rhs)"
.br
.ti -1c
.RI "template<typename _Tp , typename _Alloc > bool \fBoperator>\fP (const vector< _Tp, _Alloc > &__lhs, const vector< _Tp, _Alloc > &__rhs)"
.br
.ti -1c
.RI "template<typename _Tp , typename _Alloc > bool \fBoperator>\fP (const list< _Tp, _Alloc > &__lhs, const list< _Tp, _Alloc > &__rhs)"
.br
.ti -1c
.RI "template<typename _Tp , typename _Alloc > bool \fBoperator>\fP (const deque< _Tp, _Alloc > &__lhs, const deque< _Tp, _Alloc > &__rhs)"
.br
.ti -1c
.RI "template<typename _Key , typename _Compare , typename _Allocator > bool \fBoperator>=\fP (const set< _Key, _Compare, _Allocator > &__lhs, const set< _Key, _Compare, _Allocator > &__rhs)"
.br
.ti -1c
.RI "template<typename _Key , typename _Compare , typename _Allocator > bool \fBoperator>=\fP (const multiset< _Key, _Compare, _Allocator > &__lhs, const multiset< _Key, _Compare, _Allocator > &__rhs)"
.br
.ti -1c
.RI "template<typename _Key , typename _Tp , typename _Compare , typename _Allocator > bool \fBoperator>=\fP (const multimap< _Key, _Tp, _Compare, _Allocator > &__lhs, const multimap< _Key, _Tp, _Compare, _Allocator > &__rhs)"
.br
.ti -1c
.RI "template<typename _Key , typename _Tp , typename _Compare , typename _Allocator > bool \fBoperator>=\fP (const map< _Key, _Tp, _Compare, _Allocator > &__lhs, const map< _Key, _Tp, _Compare, _Allocator > &__rhs)"
.br
.ti -1c
.RI "template<typename _Tp , typename _Alloc > bool \fBoperator>=\fP (const vector< _Tp, _Alloc > &__lhs, const vector< _Tp, _Alloc > &__rhs)"
.br
.ti -1c
.RI "template<typename _Tp , typename _Alloc > bool \fBoperator>=\fP (const list< _Tp, _Alloc > &__lhs, const list< _Tp, _Alloc > &__rhs)"
.br
.ti -1c
.RI "template<typename _Tp , typename _Alloc > bool \fBoperator>=\fP (const deque< _Tp, _Alloc > &__lhs, const deque< _Tp, _Alloc > &__rhs)"
.br
.ti -1c
.RI "template<typename _CharT , typename _Traits , size_t _Nb> \fBstd::basic_istream\fP< _CharT, _Traits > & \fBoperator>>\fP (\fBstd::basic_istream\fP< _CharT, _Traits > &__is, bitset< _Nb > &__x)"
.br
.ti -1c
.RI "template<size_t _Nb> bitset< _Nb > \fBoperator^\fP (const bitset< _Nb > &__x, const bitset< _Nb > &__y)"
.br
.ti -1c
.RI "template<size_t _Nb> bitset< _Nb > \fBoperator|\fP (const bitset< _Nb > &__x, const bitset< _Nb > &__y)"
.br
.ti -1c
.RI "template<typename _Key , typename _Compare , typename _Allocator > void \fBswap\fP (set< _Key, _Compare, _Allocator > &__x, set< _Key, _Compare, _Allocator > &&__y)"
.br
.ti -1c
.RI "template<typename _Key , typename _Compare , typename _Allocator > void \fBswap\fP (set< _Key, _Compare, _Allocator > &&__x, set< _Key, _Compare, _Allocator > &__y)"
.br
.ti -1c
.RI "template<typename _Key , typename _Compare , typename _Allocator > void \fBswap\fP (set< _Key, _Compare, _Allocator > &__x, set< _Key, _Compare, _Allocator > &__y)"
.br
.ti -1c
.RI "template<typename _Key , typename _Compare , typename _Allocator > void \fBswap\fP (multiset< _Key, _Compare, _Allocator > &__x, multiset< _Key, _Compare, _Allocator > &&__y)"
.br
.ti -1c
.RI "template<typename _Key , typename _Compare , typename _Allocator > void \fBswap\fP (multiset< _Key, _Compare, _Allocator > &&__x, multiset< _Key, _Compare, _Allocator > &__y)"
.br
.ti -1c
.RI "template<typename _Key , typename _Compare , typename _Allocator > void \fBswap\fP (multiset< _Key, _Compare, _Allocator > &__x, multiset< _Key, _Compare, _Allocator > &__y)"
.br
.ti -1c
.RI "template<typename _Key , typename _Tp , typename _Compare , typename _Allocator > void \fBswap\fP (multimap< _Key, _Tp, _Compare, _Allocator > &__lhs, multimap< _Key, _Tp, _Compare, _Allocator > &&__rhs)"
.br
.ti -1c
.RI "template<typename _Key , typename _Tp , typename _Compare , typename _Allocator > void \fBswap\fP (multimap< _Key, _Tp, _Compare, _Allocator > &&__lhs, multimap< _Key, _Tp, _Compare, _Allocator > &__rhs)"
.br
.ti -1c
.RI "template<typename _Key , typename _Tp , typename _Compare , typename _Allocator > void \fBswap\fP (multimap< _Key, _Tp, _Compare, _Allocator > &__lhs, multimap< _Key, _Tp, _Compare, _Allocator > &__rhs)"
.br
.ti -1c
.RI "template<typename _Key , typename _Tp , typename _Compare , typename _Allocator > void \fBswap\fP (map< _Key, _Tp, _Compare, _Allocator > &__lhs, map< _Key, _Tp, _Compare, _Allocator > &&__rhs)"
.br
.ti -1c
.RI "template<typename _Key , typename _Tp , typename _Compare , typename _Allocator > void \fBswap\fP (map< _Key, _Tp, _Compare, _Allocator > &&__lhs, map< _Key, _Tp, _Compare, _Allocator > &__rhs)"
.br
.ti -1c
.RI "template<typename _Key , typename _Tp , typename _Compare , typename _Allocator > void \fBswap\fP (map< _Key, _Tp, _Compare, _Allocator > &__lhs, map< _Key, _Tp, _Compare, _Allocator > &__rhs)"
.br
.ti -1c
.RI "template<typename _Tp , typename _Alloc > void \fBswap\fP (vector< _Tp, _Alloc > &__lhs, vector< _Tp, _Alloc > &&__rhs)"
.br
.ti -1c
.RI "template<typename _Tp , typename _Alloc > void \fBswap\fP (vector< _Tp, _Alloc > &&__lhs, vector< _Tp, _Alloc > &__rhs)"
.br
.ti -1c
.RI "template<typename _Tp , typename _Alloc > void \fBswap\fP (vector< _Tp, _Alloc > &__lhs, vector< _Tp, _Alloc > &__rhs)"
.br
.ti -1c
.RI "template<typename _Value , typename _Hash , typename _Pred , typename _Alloc > void \fBswap\fP (unordered_multiset< _Value, _Hash, _Pred, _Alloc > &__x, unordered_multiset< _Value, _Hash, _Pred, _Alloc > &&__y)"
.br
.ti -1c
.RI "template<typename _Value , typename _Hash , typename _Pred , typename _Alloc > void \fBswap\fP (unordered_multiset< _Value, _Hash, _Pred, _Alloc > &&__x, unordered_multiset< _Value, _Hash, _Pred, _Alloc > &__y)"
.br
.ti -1c
.RI "template<typename _Value , typename _Hash , typename _Pred , typename _Alloc > void \fBswap\fP (unordered_multiset< _Value, _Hash, _Pred, _Alloc > &__x, unordered_multiset< _Value, _Hash, _Pred, _Alloc > &__y)"
.br
.ti -1c
.RI "template<typename _Value , typename _Hash , typename _Pred , typename _Alloc > void \fBswap\fP (unordered_set< _Value, _Hash, _Pred, _Alloc > &__x, unordered_set< _Value, _Hash, _Pred, _Alloc > &&__y)"
.br
.ti -1c
.RI "template<typename _Value , typename _Hash , typename _Pred , typename _Alloc > void \fBswap\fP (unordered_set< _Value, _Hash, _Pred, _Alloc > &&__x, unordered_set< _Value, _Hash, _Pred, _Alloc > &__y)"
.br
.ti -1c
.RI "template<typename _Value , typename _Hash , typename _Pred , typename _Alloc > void \fBswap\fP (unordered_set< _Value, _Hash, _Pred, _Alloc > &__x, unordered_set< _Value, _Hash, _Pred, _Alloc > &__y)"
.br
.ti -1c
.RI "template<typename _Key , typename _Tp , typename _Hash , typename _Pred , typename _Alloc > void \fBswap\fP (unordered_multimap< _Key, _Tp, _Hash, _Pred, _Alloc > &__x, unordered_multimap< _Key, _Tp, _Hash, _Pred, _Alloc > &&__y)"
.br
.ti -1c
.RI "template<typename _Key , typename _Tp , typename _Hash , typename _Pred , typename _Alloc > void \fBswap\fP (unordered_multimap< _Key, _Tp, _Hash, _Pred, _Alloc > &&__x, unordered_multimap< _Key, _Tp, _Hash, _Pred, _Alloc > &__y)"
.br
.ti -1c
.RI "template<typename _Key , typename _Tp , typename _Hash , typename _Pred , typename _Alloc > void \fBswap\fP (unordered_multimap< _Key, _Tp, _Hash, _Pred, _Alloc > &__x, unordered_multimap< _Key, _Tp, _Hash, _Pred, _Alloc > &__y)"
.br
.ti -1c
.RI "template<typename _Key , typename _Tp , typename _Hash , typename _Pred , typename _Alloc > void \fBswap\fP (unordered_map< _Key, _Tp, _Hash, _Pred, _Alloc > &__x, unordered_map< _Key, _Tp, _Hash, _Pred, _Alloc > &&__y)"
.br
.ti -1c
.RI "template<typename _Key , typename _Tp , typename _Hash , typename _Pred , typename _Alloc > void \fBswap\fP (unordered_map< _Key, _Tp, _Hash, _Pred, _Alloc > &&__x, unordered_map< _Key, _Tp, _Hash, _Pred, _Alloc > &__y)"
.br
.ti -1c
.RI "template<typename _Key , typename _Tp , typename _Hash , typename _Pred , typename _Alloc > void \fBswap\fP (unordered_map< _Key, _Tp, _Hash, _Pred, _Alloc > &__x, unordered_map< _Key, _Tp, _Hash, _Pred, _Alloc > &__y)"
.br
.ti -1c
.RI "template<typename _Tp , typename _Alloc > void \fBswap\fP (list< _Tp, _Alloc > &__lhs, list< _Tp, _Alloc > &&__rhs)"
.br
.ti -1c
.RI "template<typename _Tp , typename _Alloc > void \fBswap\fP (list< _Tp, _Alloc > &&__lhs, list< _Tp, _Alloc > &__rhs)"
.br
.ti -1c
.RI "template<typename _Tp , typename _Alloc > void \fBswap\fP (list< _Tp, _Alloc > &__lhs, list< _Tp, _Alloc > &__rhs)"
.br
.ti -1c
.RI "template<typename _Tp , typename _Alloc > void \fBswap\fP (deque< _Tp, _Alloc > &__lhs, deque< _Tp, _Alloc > &&__rhs)"
.br
.ti -1c
.RI "template<typename _Tp , typename _Alloc > void \fBswap\fP (deque< _Tp, _Alloc > &&__lhs, deque< _Tp, _Alloc > &__rhs)"
.br
.ti -1c
.RI "template<typename _Tp , typename _Alloc > void \fBswap\fP (deque< _Tp, _Alloc > &__lhs, deque< _Tp, _Alloc > &__rhs)"
.br
.in -1c
.SH "Detailed Description"
.PP 
GNU debug code, replaces standard behavior with debug behavior. 

Macros and namespaces used by the implementation outside of debug wrappers to verify certain properties. The __glibcxx_requires_xxx macros are merely wrappers around the __glibcxx_check_xxx wrappers when we are compiling with debug mode, but disappear when we are in release mode so that there is no checking performed in, e.g., the standard library algorithms. 
.PP
.SH "Author"
.PP 
Generated automatically by Doxygen for libstdc++ from the source code.
