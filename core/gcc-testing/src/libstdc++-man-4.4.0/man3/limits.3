.TH "limits" 3 "21 Apr 2009" "libstdc++" \" -*- nroff -*-
.ad l
.nh
.SH NAME
limits \- 
.SH SYNOPSIS
.br
.PP
.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBstd::__numeric_limits_base\fP"
.br
.RI "\fIPart of \fBstd::numeric_limits\fP. \fP"
.ti -1c
.RI "struct \fBstd::numeric_limits< _Tp >\fP"
.br
.RI "\fIProperties of fundamental types. \fP"
.ti -1c
.RI "struct \fBstd::numeric_limits< bool >\fP"
.br
.RI "\fI\fBnumeric_limits<bool>\fP specialization. \fP"
.ti -1c
.RI "struct \fBstd::numeric_limits< char >\fP"
.br
.RI "\fI\fBnumeric_limits<char>\fP specialization. \fP"
.ti -1c
.RI "struct \fBstd::numeric_limits< char16_t >\fP"
.br
.RI "\fI\fBnumeric_limits<char16_t>\fP specialization. \fP"
.ti -1c
.RI "struct \fBstd::numeric_limits< char32_t >\fP"
.br
.RI "\fI\fBnumeric_limits<char32_t>\fP specialization. \fP"
.ti -1c
.RI "struct \fBstd::numeric_limits< double >\fP"
.br
.RI "\fI\fBnumeric_limits<double>\fP specialization. \fP"
.ti -1c
.RI "struct \fBstd::numeric_limits< float >\fP"
.br
.RI "\fI\fBnumeric_limits<float>\fP specialization. \fP"
.ti -1c
.RI "struct \fBstd::numeric_limits< int >\fP"
.br
.RI "\fI\fBnumeric_limits<int>\fP specialization. \fP"
.ti -1c
.RI "struct \fBstd::numeric_limits< long >\fP"
.br
.RI "\fI\fBnumeric_limits<long>\fP specialization. \fP"
.ti -1c
.RI "struct \fBstd::numeric_limits< long double >\fP"
.br
.RI "\fI\fBnumeric_limits<long double>\fP specialization. \fP"
.ti -1c
.RI "struct \fBstd::numeric_limits< long long >\fP"
.br
.RI "\fI\fBnumeric_limits<long long>\fP specialization. \fP"
.ti -1c
.RI "struct \fBstd::numeric_limits< short >\fP"
.br
.RI "\fI\fBnumeric_limits<short>\fP specialization. \fP"
.ti -1c
.RI "struct \fBstd::numeric_limits< signed char >\fP"
.br
.RI "\fI\fBnumeric_limits<signed char>\fP specialization. \fP"
.ti -1c
.RI "struct \fBstd::numeric_limits< unsigned char >\fP"
.br
.RI "\fI\fBnumeric_limits<unsigned char>\fP specialization. \fP"
.ti -1c
.RI "struct \fBstd::numeric_limits< unsigned int >\fP"
.br
.RI "\fI\fBnumeric_limits<unsigned int>\fP specialization. \fP"
.ti -1c
.RI "struct \fBstd::numeric_limits< unsigned long >\fP"
.br
.RI "\fI\fBnumeric_limits<unsigned long>\fP specialization. \fP"
.ti -1c
.RI "struct \fBstd::numeric_limits< unsigned long long >\fP"
.br
.RI "\fI\fBnumeric_limits<unsigned long long>\fP specialization. \fP"
.ti -1c
.RI "struct \fBstd::numeric_limits< unsigned short >\fP"
.br
.RI "\fI\fBnumeric_limits<unsigned short>\fP specialization. \fP"
.ti -1c
.RI "struct \fBstd::numeric_limits< wchar_t >\fP"
.br
.RI "\fI\fBnumeric_limits<wchar_t>\fP specialization. \fP"
.in -1c
.SS "Namespaces"

.in +1c
.ti -1c
.RI "namespace \fBstd\fP"
.br
.in -1c
.SS "Defines"

.in +1c
.ti -1c
.RI "#define \fB__glibcxx_digits\fP(T)"
.br
.ti -1c
.RI "#define \fB__glibcxx_digits10\fP(T)"
.br
.ti -1c
.RI "#define \fB__glibcxx_double_has_denorm_loss\fP"
.br
.ti -1c
.RI "#define \fB__glibcxx_double_tinyness_before\fP"
.br
.ti -1c
.RI "#define \fB__glibcxx_double_traps\fP"
.br
.ti -1c
.RI "#define \fB__glibcxx_float_has_denorm_loss\fP"
.br
.ti -1c
.RI "#define \fB__glibcxx_float_tinyness_before\fP"
.br
.ti -1c
.RI "#define \fB__glibcxx_float_traps\fP"
.br
.ti -1c
.RI "#define \fB__glibcxx_integral_traps\fP"
.br
.ti -1c
.RI "#define \fB__glibcxx_long_double_has_denorm_loss\fP"
.br
.ti -1c
.RI "#define \fB__glibcxx_long_double_tinyness_before\fP"
.br
.ti -1c
.RI "#define \fB__glibcxx_long_double_traps\fP"
.br
.ti -1c
.RI "#define \fB__glibcxx_max\fP(T)"
.br
.ti -1c
.RI "#define \fB__glibcxx_min\fP(T)"
.br
.ti -1c
.RI "#define \fB__glibcxx_signed\fP(T)"
.br
.ti -1c
.RI "#define \fB_GLIBCXX_NUMERIC_LIMITS\fP"
.br
.in -1c
.SS "Enumerations"

.in +1c
.ti -1c
.RI "enum \fBstd::float_denorm_style\fP { \fBstd::denorm_indeterminate\fP, \fBstd::denorm_absent\fP, \fBstd::denorm_present\fP }"
.br
.ti -1c
.RI "enum \fBstd::float_round_style\fP { \fBstd::round_indeterminate\fP, \fBstd::round_toward_zero\fP, \fBstd::round_to_nearest\fP, \fBstd::round_toward_infinity\fP, \fBstd::round_toward_neg_infinity\fP }"
.br
.in -1c
.SH "Detailed Description"
.PP 
This is a Standard C++ Library header. 
.PP
Definition in file \fBlimits\fP.
.SH "Author"
.PP 
Generated automatically by Doxygen for libstdc++ from the source code.
