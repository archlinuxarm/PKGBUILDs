.TH "std::_Fwd_list_base" 3 "21 Apr 2009" "libstdc++" \" -*- nroff -*-
.ad l
.nh
.SH NAME
std::_Fwd_list_base \- Base class for forward_list.  

.PP
.SH SYNOPSIS
.br
.PP
.SS "Protected Types"

.in +1c
.ti -1c
.RI "typedef _Alloc::template rebind< \fB_Fwd_list_node\fP< _Tp, _Tp_alloc_type >>::other _Node_alloc_type;struct _Fwd_list_impl:public _Node_alloc_type{\fB_Fwd_list_node_base\fP< _Tp_alloc_type > _M_head;_Fwd_list_impl():_Node_alloc_type(), _M_head(){}_Fwd_list_impl(const _Node_alloc_type &__a):_Node_alloc_type(__a), _M_head(){}};_Fwd_list_impl _M_impl;public:typedef \fB_Fwd_list_iterator\fP< _Tp, _Tp_alloc_type > \fBiterator\fP;typedef \fB_Fwd_list_const_iterator\fP< _Tp, _Tp_alloc_type > const_iterator;typedef \fB_Fwd_list_node\fP< _Tp, _Tp_alloc_type > _Node;typedef \fB_Fwd_list_node_base\fP< _Tp_alloc_type > _Node_base;_Node_alloc_type &_M_get_Node_allocator(){return *static_cast< _Node_alloc_type * > &this->_M_impl);}const _Node_alloc_type &_M_get_Node_allocator() const {return *static_cast< const _Node_alloc_type * > &this-> \fB_M_impl\fP"
.br
.ti -1c
.RI "typedef _Alloc::template rebind< _Tp >::other \fB_Tp_alloc_type\fP"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "\fB_Fwd_list_base\fP (\fB_Fwd_list_base\fP &&__lst)"
.br
.ti -1c
.RI "\fB_Fwd_list_base\fP (\fB_Fwd_list_base\fP &&__lst, const _Alloc &__a)"
.br
.ti -1c
.RI "\fB_Fwd_list_base\fP (const \fB_Fwd_list_base\fP &__lst, const _Alloc &__a)"
.br
.ti -1c
.RI "\fB_Fwd_list_base\fP (const _Alloc &__a)"
.br
.ti -1c
.RI "template<typename... _Args> _Node::_Pointer \fB_M_create_node\fP (_Args &&...__args)"
.br
.ti -1c
.RI "_Node_base::_Pointer \fB_M_erase_after\fP (typename _Node_base::_Pointer __pos, typename _Node_base::_Pointer __last)"
.br
.ti -1c
.RI "_Node_base::_Pointer \fB_M_erase_after\fP (typename _Node_base::_Pointer __pos)"
.br
.ti -1c
.RI "_Node::_Pointer \fB_M_get_node\fP ()"
.br
.ti -1c
.RI "template<typename... _Args> _Node_base::_Pointer \fB_M_insert_after\fP (const_iterator __pos, _Args &&...__args)"
.br
.ti -1c
.RI "void \fB_M_put_node\fP (typename _Node::_Pointer __p)"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<typename _Tp, typename _Alloc> struct std::_Fwd_list_base< _Tp, _Alloc >"
Base class for forward_list. 
.PP
Definition at line 262 of file forward_list.h.

.SH "Author"
.PP 
Generated automatically by Doxygen for libstdc++ from the source code.
