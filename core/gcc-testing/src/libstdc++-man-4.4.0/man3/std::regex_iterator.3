.TH "std::regex_iterator" 3 "21 Apr 2009" "libstdc++" \" -*- nroff -*-
.ad l
.nh
.SH NAME
std::regex_iterator \- 
.SH SYNOPSIS
.br
.PP
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef std::ptrdiff_t \fBdifference_type\fP"
.br
.ti -1c
.RI "typedef \fBstd::forward_iterator_tag\fP \fBiterator_category\fP"
.br
.ti -1c
.RI "typedef const \fBvalue_type\fP * \fBpointer\fP"
.br
.ti -1c
.RI "typedef const \fBvalue_type\fP & \fBreference\fP"
.br
.ti -1c
.RI "typedef \fBbasic_regex\fP< _Ch_type, _Rx_traits > \fBregex_type\fP"
.br
.ti -1c
.RI "typedef \fBmatch_results\fP< _Bi_iter > \fBvalue_type\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "bool \fBoperator!=\fP (const \fBregex_iterator\fP &__rhs)"
.br
.ti -1c
.RI "const \fBvalue_type\fP & \fBoperator*\fP ()"
.br
.ti -1c
.RI "\fBregex_iterator\fP \fBoperator++\fP (int)"
.br
.ti -1c
.RI "\fBregex_iterator\fP & \fBoperator++\fP ()"
.br
.ti -1c
.RI "const \fBvalue_type\fP * \fBoperator->\fP ()"
.br
.ti -1c
.RI "\fBregex_iterator\fP & \fBoperator=\fP (const \fBregex_iterator\fP &__rhs)"
.br
.ti -1c
.RI "bool \fBoperator==\fP (const \fBregex_iterator\fP &__rhs)"
.br
.ti -1c
.RI "\fBregex_iterator\fP (const \fBregex_iterator\fP &__rhs)"
.br
.ti -1c
.RI "\fBregex_iterator\fP (_Bi_iter __a, _Bi_iter __b, const \fBregex_type\fP &__re, \fBregex_constants::match_flag_type\fP __m=\fBregex_constants::match_default\fP)"
.br
.ti -1c
.RI "\fBregex_iterator\fP ()"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<typename _Bi_iter, typename _Ch_type = typename iterator_traits<_Bi_iter>::value_type, typename _Rx_traits = regex_traits<_Ch_type>> class std::regex_iterator< _Bi_iter, _Ch_type, _Rx_traits >"
An \fBiterator\fP adaptor that will provide repeated calls of regex_search over a range until no more matches remain. 
.PP
Definition at line 2429 of file tr1_impl/regex.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<typename _Bi_iter , typename _Ch_type  = typename iterator_traits<_Bi_iter>::value_type, typename _Rx_traits  = regex_traits<_Ch_type>> \fBstd::regex_iterator\fP< _Bi_iter, _Ch_type, _Rx_traits >::\fBregex_iterator\fP ()"
.PP
Provides a singular \fBiterator\fP, useful for indicating one-past-the-end of a range. 
.PP
\fBTodo\fP
.RS 4
Implement this function. 
.PP
Doc me! See doc/doxygen/TODO and http://gcc.gnu.org/ml/libstdc++/2002-02/msg00003.html for more. 
.RE
.PP

.SS "template<typename _Bi_iter , typename _Ch_type  = typename iterator_traits<_Bi_iter>::value_type, typename _Rx_traits  = regex_traits<_Ch_type>> \fBstd::regex_iterator\fP< _Bi_iter, _Ch_type, _Rx_traits >::\fBregex_iterator\fP (_Bi_iter __a, _Bi_iter __b, const \fBregex_type\fP & __re, \fBregex_constants::match_flag_type\fP __m = \fC\fBregex_constants::match_default\fP\fP)"
.PP
Constructs a regex_iterator... 
.PP
\fBParameters:\fP
.RS 4
\fIa\fP [IN] The start of a text range to search. 
.br
\fIb\fP [IN] One-past-the-end of the text range to search. 
.br
\fIre\fP [IN] The regular expression to match. 
.br
\fIm\fP [IN] Policy flags for match rules. 
.RE
.PP
\fBTodo\fP
.RS 4
Implement this function. 
.PP
Doc me! See doc/doxygen/TODO and http://gcc.gnu.org/ml/libstdc++/2002-02/msg00003.html for more. 
.RE
.PP

.SS "template<typename _Bi_iter , typename _Ch_type  = typename iterator_traits<_Bi_iter>::value_type, typename _Rx_traits  = regex_traits<_Ch_type>> \fBstd::regex_iterator\fP< _Bi_iter, _Ch_type, _Rx_traits >::\fBregex_iterator\fP (const \fBregex_iterator\fP< _Bi_iter, _Ch_type, _Rx_traits > & __rhs)"
.PP
Copy constructs a regex_iterator. 
.PP
\fBTodo\fP
.RS 4
Implement this function. 
.PP
Doc me! See doc/doxygen/TODO and http://gcc.gnu.org/ml/libstdc++/2002-02/msg00003.html for more. 
.RE
.PP

.SH "Member Function Documentation"
.PP 
.SS "template<typename _Bi_iter , typename _Ch_type  = typename iterator_traits<_Bi_iter>::value_type, typename _Rx_traits  = regex_traits<_Ch_type>> bool \fBstd::regex_iterator\fP< _Bi_iter, _Ch_type, _Rx_traits >::operator!= (const \fBregex_iterator\fP< _Bi_iter, _Ch_type, _Rx_traits > & __rhs)"
.PP
\fBTodo\fP
.RS 4
Implement this function. 
.PP
Doc me! See doc/doxygen/TODO and http://gcc.gnu.org/ml/libstdc++/2002-02/msg00003.html for more. 
.RE
.PP

.SS "template<typename _Bi_iter , typename _Ch_type  = typename iterator_traits<_Bi_iter>::value_type, typename _Rx_traits  = regex_traits<_Ch_type>> const \fBvalue_type\fP& \fBstd::regex_iterator\fP< _Bi_iter, _Ch_type, _Rx_traits >::operator* ()"
.PP
\fBTodo\fP
.RS 4
Implement this function. 
.PP
Doc me! See doc/doxygen/TODO and http://gcc.gnu.org/ml/libstdc++/2002-02/msg00003.html for more. 
.RE
.PP

.SS "template<typename _Bi_iter , typename _Ch_type  = typename iterator_traits<_Bi_iter>::value_type, typename _Rx_traits  = regex_traits<_Ch_type>> \fBregex_iterator\fP \fBstd::regex_iterator\fP< _Bi_iter, _Ch_type, _Rx_traits >::operator++ (int)"
.PP
\fBTodo\fP
.RS 4
Implement this function. 
.PP
Doc me! See doc/doxygen/TODO and http://gcc.gnu.org/ml/libstdc++/2002-02/msg00003.html for more. 
.RE
.PP

.SS "template<typename _Bi_iter , typename _Ch_type  = typename iterator_traits<_Bi_iter>::value_type, typename _Rx_traits  = regex_traits<_Ch_type>> \fBregex_iterator\fP& \fBstd::regex_iterator\fP< _Bi_iter, _Ch_type, _Rx_traits >::operator++ ()"
.PP
\fBTodo\fP
.RS 4
Implement this function. 
.PP
Doc me! See doc/doxygen/TODO and http://gcc.gnu.org/ml/libstdc++/2002-02/msg00003.html for more. 
.RE
.PP

.SS "template<typename _Bi_iter , typename _Ch_type  = typename iterator_traits<_Bi_iter>::value_type, typename _Rx_traits  = regex_traits<_Ch_type>> const \fBvalue_type\fP* \fBstd::regex_iterator\fP< _Bi_iter, _Ch_type, _Rx_traits >::operator-> ()"
.PP
\fBTodo\fP
.RS 4
Implement this function. 
.PP
Doc me! See doc/doxygen/TODO and http://gcc.gnu.org/ml/libstdc++/2002-02/msg00003.html for more. 
.RE
.PP

.SS "template<typename _Bi_iter , typename _Ch_type  = typename iterator_traits<_Bi_iter>::value_type, typename _Rx_traits  = regex_traits<_Ch_type>> \fBregex_iterator\fP& \fBstd::regex_iterator\fP< _Bi_iter, _Ch_type, _Rx_traits >::operator= (const \fBregex_iterator\fP< _Bi_iter, _Ch_type, _Rx_traits > & __rhs)"
.PP
\fBTodo\fP
.RS 4
Implement this function. 
.PP
Doc me! See doc/doxygen/TODO and http://gcc.gnu.org/ml/libstdc++/2002-02/msg00003.html for more. 
.RE
.PP

.SS "template<typename _Bi_iter , typename _Ch_type  = typename iterator_traits<_Bi_iter>::value_type, typename _Rx_traits  = regex_traits<_Ch_type>> bool \fBstd::regex_iterator\fP< _Bi_iter, _Ch_type, _Rx_traits >::operator== (const \fBregex_iterator\fP< _Bi_iter, _Ch_type, _Rx_traits > & __rhs)"
.PP
\fBTodo\fP
.RS 4
Implement this function. 
.PP
Doc me! See doc/doxygen/TODO and http://gcc.gnu.org/ml/libstdc++/2002-02/msg00003.html for more. 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for libstdc++ from the source code.
