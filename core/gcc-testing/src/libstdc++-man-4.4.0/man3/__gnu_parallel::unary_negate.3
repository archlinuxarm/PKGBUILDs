.TH "__gnu_parallel::unary_negate" 3 "21 Apr 2009" "libstdc++" \" -*- nroff -*-
.ad l
.nh
.SH NAME
__gnu_parallel::unary_negate \- Similar to \fBstd::binder1st\fP, but giving the argument types explicitly.  

.PP
.SH SYNOPSIS
.br
.PP
Inherits \fBunary_function< argument_type, bool >\fP.
.PP
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef \fBargument_type\fP \fBargument_type\fP"
.br
.ti -1c
.RI "typedef bool \fBresult_type\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "bool \fBoperator()\fP (const \fBargument_type\fP &__x)"
.br
.ti -1c
.RI "\fBunary_negate\fP (const _Predicate &__x)"
.br
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "_Predicate \fB_M_pred\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<typename _Predicate, typename argument_type> class __gnu_parallel::unary_negate< _Predicate, argument_type >"
Similar to \fBstd::binder1st\fP, but giving the argument types explicitly. 
.PP
Definition at line 177 of file base.h.
.SH "Member Typedef Documentation"
.PP 
.SS "typedef \fBargument_type\fP  \fBstd::unary_function\fP< \fBargument_type\fP , bool  >::\fBargument_type\fP\fC [inherited]\fP"
.PP
\fCargument_type\fP is the type of the argument (no surprises here) 
.PP
Definition at line 102 of file stl_function.h.
.SS "typedef bool  \fBstd::unary_function\fP< \fBargument_type\fP , bool  >::\fBresult_type\fP\fC [inherited]\fP"
.PP
\fCresult_type\fP is the return type 
.PP
Definition at line 105 of file stl_function.h.

.SH "Author"
.PP 
Generated automatically by Doxygen for libstdc++ from the source code.
