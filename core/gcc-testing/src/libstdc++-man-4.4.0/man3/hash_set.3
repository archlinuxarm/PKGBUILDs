.TH "hash_set" 3 "21 Apr 2009" "libstdc++" \" -*- nroff -*-
.ad l
.nh
.SH NAME
hash_set \- 
.SH SYNOPSIS
.br
.PP
.SS "Classes"

.in +1c
.ti -1c
.RI "class \fB__gnu_cxx::hash_multiset< _Value, _HashFcn, _EqualKey, _Alloc >\fP"
.br
.ti -1c
.RI "class \fB__gnu_cxx::hash_set< _Value, _HashFcn, _EqualKey, _Alloc >\fP"
.br
.in -1c
.SS "Namespaces"

.in +1c
.ti -1c
.RI "namespace \fB__gnu_cxx\fP"
.br
.ti -1c
.RI "namespace \fBstd\fP"
.br
.in -1c
.SS "Defines"

.in +1c
.ti -1c
.RI "#define \fB_HASH_SET\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "template<class _Val , class _HashFcn , class _EqualKey , class _Alloc > bool \fB__gnu_cxx::operator!=\fP (const hash_multiset< _Val, _HashFcn, _EqualKey, _Alloc > &__hs1, const hash_multiset< _Val, _HashFcn, _EqualKey, _Alloc > &__hs2)"
.br
.ti -1c
.RI "template<class _Value , class _HashFcn , class _EqualKey , class _Alloc > bool \fB__gnu_cxx::operator!=\fP (const hash_set< _Value, _HashFcn, _EqualKey, _Alloc > &__hs1, const hash_set< _Value, _HashFcn, _EqualKey, _Alloc > &__hs2)"
.br
.ti -1c
.RI "template<class _Val , class _HashFcn , class _EqualKey , class _Alloc > bool \fB__gnu_cxx::operator==\fP (const hash_multiset< _Val, _HashFcn, _EqualKey, _Alloc > &__hs1, const hash_multiset< _Val, _HashFcn, _EqualKey, _Alloc > &__hs2)"
.br
.ti -1c
.RI "template<class _Value , class _HashFcn , class _EqualKey , class _Alloc > bool \fB__gnu_cxx::operator==\fP (const hash_set< _Value, _HashFcn, _EqualKey, _Alloc > &__hs1, const hash_set< _Value, _HashFcn, _EqualKey, _Alloc > &__hs2)"
.br
.ti -1c
.RI "template<class _Val , class _HashFcn , class _EqualKey , class _Alloc > void \fB__gnu_cxx::swap\fP (hash_multiset< _Val, _HashFcn, _EqualKey, _Alloc > &__hs1, hash_multiset< _Val, _HashFcn, _EqualKey, _Alloc > &__hs2)"
.br
.ti -1c
.RI "template<class _Val , class _HashFcn , class _EqualKey , class _Alloc > void \fB__gnu_cxx::swap\fP (hash_set< _Val, _HashFcn, _EqualKey, _Alloc > &__hs1, hash_set< _Val, _HashFcn, _EqualKey, _Alloc > &__hs2)"
.br
.in -1c
.SH "Detailed Description"
.PP 
This file is a GNU extension to the Standard C++ Library (possibly containing extensions from the HP/SGI STL subset). 
.PP
Definition in file \fBhash_set\fP.
.SH "Author"
.PP 
Generated automatically by Doxygen for libstdc++ from the source code.
