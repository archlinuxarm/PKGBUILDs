.TH "std::exception" 3 "21 Apr 2009" "libstdc++" \" -*- nroff -*-
.ad l
.nh
.SH NAME
std::exception \- Base class for all library exceptions.  

.PP
.SH SYNOPSIS
.br
.PP
Inherited by __gnu_cxx::__concurrence_broadcast_error, __gnu_cxx::__concurrence_lock_error, __gnu_cxx::__concurrence_unlock_error, __gnu_cxx::__concurrence_wait_error, \fB__gnu_cxx::forced_exception_error\fP, \fBstd::bad_alloc\fP, \fBstd::bad_cast\fP, \fBstd::bad_exception\fP, \fBstd::bad_function_call\fP, \fBstd::bad_typeid\fP, std::bad_weak_ptr, \fBstd::ios_base::ios_base::failure\fP, \fBstd::lock_error\fP, \fBstd::logic_error\fP, and \fBstd::runtime_error\fP.
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "virtual const char * \fBwhat\fP () const   throw ()"
.br
.in -1c
.SH "Detailed Description"
.PP 
Base class for all library exceptions. 

This is the base class for all exceptions thrown by the standard library, and by certain language expressions. You are free to derive your own exception classes, or use a different hierarchy, or to throw non-class data (e.g., fundamental types). 
.PP
Definition at line 59 of file exception.
.SH "Member Function Documentation"
.PP 
.SS "virtual const char* std::exception::what () const  throw ()\fC [virtual]\fP"
.PP
Returns a C-style character string describing the general cause of the current error. 
.PP
Reimplemented in \fBstd::bad_exception\fP, \fBstd::bad_alloc\fP, \fBstd::bad_cast\fP, \fBstd::bad_typeid\fP, \fBstd::lock_error\fP, \fBstd::logic_error\fP, \fBstd::runtime_error\fP, and \fBstd::ios_base::ios_base::failure\fP.

.SH "Author"
.PP 
Generated automatically by Doxygen for libstdc++ from the source code.
