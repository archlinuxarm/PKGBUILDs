.TH "__gnu_cxx::__detail" 3 "21 Apr 2009" "libstdc++" \" -*- nroff -*-
.ad l
.nh
.SH NAME
__gnu_cxx::__detail \- Implementation details not part of the namespace \fB__gnu_cxx\fP interface.  

.PP
.SH SYNOPSIS
.br
.PP
.SS "Classes"

.in +1c
.ti -1c
.RI "class \fB__mini_vector\fP"
.br
.RI "\fI__mini_vector<> is a stripped down version of the full-fledged std::vector<>. \fP"
.ti -1c
.RI "class \fB_Bitmap_counter\fP"
.br
.RI "\fIThe bitmap counter which acts as the bitmap manipulator, and manages the bit-manipulation functions and the searching and identification functions on the bit-map. \fP"
.ti -1c
.RI "class \fB_Ffit_finder\fP"
.br
.RI "\fIThe class which acts as a predicate for applying the first-fit memory allocation policy for the bitmap allocator. \fP"
.in -1c
.SS "Enumerations"

.in +1c
.ti -1c
.RI "enum { \fB_S_max_rope_depth\fP }"
.br
.ti -1c
.RI "enum { \fBbits_per_byte\fP, \fBbits_per_block\fP }"
.br
.ti -1c
.RI "enum \fB_Tag\fP { \fB_S_leaf\fP, \fB_S_concat\fP, \fB_S_substringfn\fP, \fB_S_function\fP }"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "void \fB__bit_allocate\fP (size_t *__pbmap, size_t __pos)  throw ()"
.br
.ti -1c
.RI "void \fB__bit_free\fP (size_t *__pbmap, size_t __pos)  throw ()"
.br
.ti -1c
.RI "template<typename _InputIterator , typename _Predicate > _InputIterator \fB__find_if\fP (_InputIterator __first, _InputIterator __last, _Predicate __p)"
.br
.ti -1c
.RI "template<typename _ForwardIterator , typename _Tp , typename _Compare > _ForwardIterator \fB__lower_bound\fP (_ForwardIterator __first, _ForwardIterator __last, const _Tp &__val, _Compare __comp)"
.br
.ti -1c
.RI "template<typename _AddrPair > size_t \fB__num_bitmaps\fP (_AddrPair __ap)"
.br
.ti -1c
.RI "template<typename _AddrPair > size_t \fB__num_blocks\fP (_AddrPair __ap)"
.br
.in -1c
.SH "Detailed Description"
.PP 
Implementation details not part of the namespace \fB__gnu_cxx\fP interface. 
.PP
.SH "Function Documentation"
.PP 
.SS "void __gnu_cxx::__detail::__bit_allocate (size_t * __pbmap, size_t __pos)  throw ()\fC [inline]\fP"
.PP
Mark a memory address as allocated by re-setting the corresponding bit in the bit-map. 
.PP
Definition at line 517 of file bitmap_allocator.h.
.PP
Referenced by __gnu_cxx::bitmap_allocator< _Tp >::_M_allocate_single_object().
.SS "void __gnu_cxx::__detail::__bit_free (size_t * __pbmap, size_t __pos)  throw ()\fC [inline]\fP"
.PP
Mark a memory address as free by setting the corresponding bit in the bit-map. 
.PP
Definition at line 528 of file bitmap_allocator.h.
.PP
Referenced by __gnu_cxx::bitmap_allocator< _Tp >::_M_deallocate_single_object().
.SS "template<typename _AddrPair > size_t __gnu_cxx::__detail::__num_bitmaps (_AddrPair __ap)\fC [inline]\fP"
.PP
The number of Bit-maps pointed to by the address pair passed to the function. 
.PP
Definition at line 301 of file bitmap_allocator.h.
.PP
References __num_blocks().
.PP
Referenced by __gnu_cxx::bitmap_allocator< _Tp >::_M_allocate_single_object(), and __gnu_cxx::bitmap_allocator< _Tp >::_M_deallocate_single_object().
.SS "template<typename _AddrPair > size_t __gnu_cxx::__detail::__num_blocks (_AddrPair __ap)\fC [inline]\fP"
.PP
The number of Blocks pointed to by the address pair passed to the function. 
.PP
Definition at line 293 of file bitmap_allocator.h.
.PP
Referenced by __num_bitmaps().
.SH "Author"
.PP 
Generated automatically by Doxygen for libstdc++ from the source code.
