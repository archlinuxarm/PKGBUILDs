.TH "std::error_condition" 3 "21 Apr 2009" "libstdc++" \" -*- nroff -*-
.ad l
.nh
.SH NAME
std::error_condition \- \fBerror_condition\fP  

.PP
.SH SYNOPSIS
.br
.PP
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef void(* \fB__bool_type\fP )()"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "void \fBassign\fP (int __v, const \fBerror_category\fP &__cat)"
.br
.ti -1c
.RI "const \fBerror_category\fP & \fBcategory\fP () const "
.br
.ti -1c
.RI "void \fBclear\fP ()"
.br
.ti -1c
.RI "template<typename _ErrorConditionEnum > \fBerror_condition\fP (_ErrorConditionEnum __e, typename enable_if< \fBis_error_condition_enum\fP< _ErrorConditionEnum >::value >::type *=0)"
.br
.ti -1c
.RI "\fBerror_condition\fP (int __v, const \fBerror_category\fP &__cat)"
.br
.ti -1c
.RI "\fBstring\fP \fBmessage\fP () const "
.br
.ti -1c
.RI "\fBoperator __bool_type\fP () const "
.br
.ti -1c
.RI "template<typename _ErrorConditionEnum > enable_if< \fBis_error_condition_enum\fP< _ErrorConditionEnum >::value, \fBerror_condition\fP & >::type \fBoperator=\fP (_ErrorConditionEnum __e)"
.br
.ti -1c
.RI "int \fBvalue\fP () const "
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static void \fB__not_bool_type\fP ()"
.br
.in -1c
.SH "Detailed Description"
.PP 
\fBerror_condition\fP 
.PP
Definition at line 198 of file system_error.

.SH "Author"
.PP 
Generated automatically by Doxygen for libstdc++ from the source code.
