.TH "__gnu_cxx::throw_allocator" 3 "21 Apr 2009" "libstdc++" \" -*- nroff -*-
.ad l
.nh
.SH NAME
__gnu_cxx::throw_allocator \- Allocator class with logging and exception control.  

.PP
.SH SYNOPSIS
.br
.PP
Inherits \fB__gnu_cxx::throw_allocator_base\fP.
.PP
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef const value_type * \fBconst_pointer\fP"
.br
.ti -1c
.RI "typedef const value_type & \fBconst_reference\fP"
.br
.ti -1c
.RI "typedef ptrdiff_t \fBdifference_type\fP"
.br
.ti -1c
.RI "typedef value_type * \fBpointer\fP"
.br
.ti -1c
.RI "typedef value_type & \fBreference\fP"
.br
.ti -1c
.RI "typedef size_t \fBsize_type\fP"
.br
.ti -1c
.RI "typedef T \fBvalue_type\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "pointer \fBallocate\fP (size_type __n, \fBstd::allocator\fP< void >::const_pointer hint=0)"
.br
.ti -1c
.RI "void \fBcheck_allocated\fP (size_type label)"
.br
.ti -1c
.RI "void \fBcheck_allocated\fP (pointer __p, size_type __n)"
.br
.ti -1c
.RI "template<typename... _Args> void \fBconstruct\fP (pointer __p, _Args &&...__args)"
.br
.ti -1c
.RI "void \fBconstruct\fP (pointer __p, const T &val)"
.br
.ti -1c
.RI "void \fBdeallocate\fP (pointer __p, size_type __n)"
.br
.ti -1c
.RI "void \fBdestroy\fP (pointer __p)"
.br
.ti -1c
.RI "void \fBinit\fP (unsigned long seed)"
.br
.ti -1c
.RI "size_type \fBmax_size\fP () const   throw ()"
.br
.ti -1c
.RI "template<typename U > \fBthrow_allocator\fP (const \fBthrow_allocator\fP< U > &)  throw ()"
.br
.ti -1c
.RI "\fBthrow_allocator\fP (const \fBthrow_allocator\fP &)  throw ()"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static bool \fBempty\fP ()"
.br
.ti -1c
.RI "static double \fBget_throw_prob\fP ()"
.br
.ti -1c
.RI "static void \fBset_label\fP (size_t l)"
.br
.ti -1c
.RI "static void \fBset_throw_prob\fP (double throw_prob)"
.br
.in -1c
.SS "Static Protected Member Functions"

.in +1c
.ti -1c
.RI "static void \fBcheck_allocated\fP (void *, size_t)"
.br
.ti -1c
.RI "static void \fBerase\fP (void *, size_t)"
.br
.ti -1c
.RI "static void \fBinsert\fP (void *, size_t)"
.br
.ti -1c
.RI "static void \fBthrow_conditionally\fP ()"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<typename T> class __gnu_cxx::throw_allocator< T >"
Allocator class with logging and exception control. 
.PP
Definition at line 189 of file throw_allocator.h.

.SH "Author"
.PP 
Generated automatically by Doxygen for libstdc++ from the source code.
