.TH "Complex Numbers" 3 "21 Apr 2009" "libstdc++" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Complex Numbers \- 
.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBstd::complex< _Tp >\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "template<typename _Tp > _Tp \fBstd::__complex_abs\fP (const complex< _Tp > &__z)"
.br
.ti -1c
.RI "template<typename _Tp > \fBstd::complex\fP< _Tp > \fBstd::__complex_acos\fP (const \fBstd::complex\fP< _Tp > &__z)"
.br
.ti -1c
.RI "template<typename _Tp > \fBstd::complex\fP< _Tp > \fBstd::__complex_acosh\fP (const \fBstd::complex\fP< _Tp > &__z)"
.br
.ti -1c
.RI "template<typename _Tp > _Tp \fBstd::__complex_arg\fP (const complex< _Tp > &__z)"
.br
.ti -1c
.RI "template<typename _Tp > \fBstd::complex\fP< _Tp > \fBstd::__complex_asin\fP (const \fBstd::complex\fP< _Tp > &__z)"
.br
.ti -1c
.RI "template<typename _Tp > \fBstd::complex\fP< _Tp > \fBstd::__complex_asinh\fP (const \fBstd::complex\fP< _Tp > &__z)"
.br
.ti -1c
.RI "template<typename _Tp > \fBstd::complex\fP< _Tp > \fBstd::__complex_atan\fP (const \fBstd::complex\fP< _Tp > &__z)"
.br
.ti -1c
.RI "template<typename _Tp > \fBstd::complex\fP< _Tp > \fBstd::__complex_atanh\fP (const \fBstd::complex\fP< _Tp > &__z)"
.br
.ti -1c
.RI "template<typename _Tp > complex< _Tp > \fBstd::__complex_cos\fP (const complex< _Tp > &__z)"
.br
.ti -1c
.RI "template<typename _Tp > complex< _Tp > \fBstd::__complex_cosh\fP (const complex< _Tp > &__z)"
.br
.ti -1c
.RI "template<typename _Tp > complex< _Tp > \fBstd::__complex_exp\fP (const complex< _Tp > &__z)"
.br
.ti -1c
.RI "template<typename _Tp > complex< _Tp > \fBstd::__complex_log\fP (const complex< _Tp > &__z)"
.br
.ti -1c
.RI "template<typename _Tp > complex< _Tp > \fBstd::__complex_pow\fP (const complex< _Tp > &__x, const complex< _Tp > &__y)"
.br
.ti -1c
.RI "template<typename _Tp > complex< _Tp > \fBstd::__complex_sin\fP (const complex< _Tp > &__z)"
.br
.ti -1c
.RI "template<typename _Tp > complex< _Tp > \fBstd::__complex_sinh\fP (const complex< _Tp > &__z)"
.br
.ti -1c
.RI "template<typename _Tp > complex< _Tp > \fBstd::__complex_sqrt\fP (const complex< _Tp > &__z)"
.br
.ti -1c
.RI "template<typename _Tp > complex< _Tp > \fBstd::__complex_tan\fP (const complex< _Tp > &__z)"
.br
.ti -1c
.RI "template<typename _Tp > complex< _Tp > \fBstd::__complex_tanh\fP (const complex< _Tp > &__z)"
.br
.ti -1c
.RI "template<typename _Tp > _Tp \fBstd::abs\fP (const complex< _Tp > &)"
.br
.ti -1c
.RI "template<typename _Tp > \fBstd::complex\fP< _Tp > \fBstd::acos\fP (const \fBstd::complex\fP< _Tp > &__z)"
.br
.ti -1c
.RI "template<typename _Tp > \fBstd::complex\fP< _Tp > \fBstd::acosh\fP (const \fBstd::complex\fP< _Tp > &__z)"
.br
.ti -1c
.RI "template<typename _Tp > __gnu_cxx::__promote< _Tp >::__type \fBstd::arg\fP (_Tp __x)"
.br
.ti -1c
.RI "template<typename _Tp > _Tp \fBstd::arg\fP (const complex< _Tp > &)"
.br
.ti -1c
.RI "template<typename _Tp > \fBstd::complex\fP< _Tp > \fBstd::asin\fP (const \fBstd::complex\fP< _Tp > &__z)"
.br
.ti -1c
.RI "template<typename _Tp > \fBstd::complex\fP< _Tp > \fBstd::asinh\fP (const \fBstd::complex\fP< _Tp > &__z)"
.br
.ti -1c
.RI "template<typename _Tp > \fBstd::complex\fP< _Tp > \fBstd::atan\fP (const \fBstd::complex\fP< _Tp > &__z)"
.br
.ti -1c
.RI "template<typename _Tp > \fBstd::complex\fP< _Tp > \fBstd::atanh\fP (const \fBstd::complex\fP< _Tp > &__z)"
.br
.ti -1c
.RI "\fBstd::complex< double >::complex\fP (const complex< long double > &)"
.br
.ti -1c
.RI "\fBstd::complex< float >::complex\fP (const complex< long double > &)"
.br
.ti -1c
.RI "\fBstd::complex< float >::complex\fP (const complex< double > &)"
.br
.ti -1c
.RI "template<typename _Tp > \fBstd::complex\fP< typename __gnu_cxx::__promote< _Tp >::__type > \fBstd::conj\fP (_Tp __x)"
.br
.ti -1c
.RI "template<typename _Tp > complex< _Tp > \fBstd::conj\fP (const complex< _Tp > &)"
.br
.ti -1c
.RI "template<typename _Tp > complex< _Tp > \fBstd::cos\fP (const complex< _Tp > &)"
.br
.ti -1c
.RI "template<typename _Tp > complex< _Tp > \fBstd::cosh\fP (const complex< _Tp > &)"
.br
.ti -1c
.RI "template<typename _Tp > complex< _Tp > \fBstd::exp\fP (const complex< _Tp > &)"
.br
.ti -1c
.RI "template<typename _Tp > _Tp \fBstd::fabs\fP (const \fBstd::complex\fP< _Tp > &__z)"
.br
.ti -1c
.RI "template<typename _Tp > __gnu_cxx::__promote< _Tp >::__type \fBstd::imag\fP (_Tp)"
.br
.ti -1c
.RI "template<typename _Tp > _Tp \fBstd::imag\fP (const complex< _Tp > &__z)"
.br
.ti -1c
.RI "template<typename _Tp > complex< _Tp > \fBstd::log\fP (const complex< _Tp > &)"
.br
.ti -1c
.RI "template<typename _Tp > complex< _Tp > \fBstd::log10\fP (const complex< _Tp > &)"
.br
.ti -1c
.RI "template<typename _Tp > __gnu_cxx::__promote< _Tp >::__type \fBstd::norm\fP (_Tp __x)"
.br
.ti -1c
.RI "template<typename _Tp > _Tp \fBstd::norm\fP (const complex< _Tp > &)"
.br
.ti -1c
.RI "template<typename _Up > complex< _Tp > & \fBstd::complex::operator*=\fP (const complex< _Up > &)"
.br
.ti -1c
.RI "complex< _Tp > & \fBstd::complex::operator*=\fP (const _Tp &)"
.br
.ti -1c
.RI "template<typename _Tp > complex< _Tp > \fBstd::operator+\fP (const complex< _Tp > &__x)"
.br
.ti -1c
.RI "template<typename _Up > complex< _Tp > & \fBstd::complex::operator+=\fP (const complex< _Up > &)"
.br
.ti -1c
.RI "template<typename _Tp > complex< _Tp > \fBstd::operator-\fP (const complex< _Tp > &__x)"
.br
.ti -1c
.RI "template<typename _Up > complex< _Tp > & \fBstd::complex::operator-=\fP (const complex< _Up > &)"
.br
.ti -1c
.RI "template<typename _Up > complex< _Tp > & \fBstd::complex::operator/=\fP (const complex< _Up > &)"
.br
.ti -1c
.RI "complex< _Tp > & \fBstd::complex::operator/=\fP (const _Tp &)"
.br
.ti -1c
.RI "template<typename _Tp , typename _CharT , class _Traits > basic_ostream< _CharT, _Traits > & \fBstd::operator<<\fP (basic_ostream< _CharT, _Traits > &__os, const complex< _Tp > &__x)"
.br
.ti -1c
.RI "template<typename _Up > complex< _Tp > & \fBstd::complex::operator=\fP (const complex< _Up > &)"
.br
.ti -1c
.RI "complex< _Tp > & \fBstd::complex::operator=\fP (const _Tp &)"
.br
.ti -1c
.RI "template<typename _Tp , typename _CharT , class _Traits > basic_istream< _CharT, _Traits > & \fBstd::operator>>\fP (basic_istream< _CharT, _Traits > &__is, complex< _Tp > &__x)"
.br
.ti -1c
.RI "template<typename _Tp > complex< _Tp > \fBstd::polar\fP (const _Tp &, const _Tp &=0)"
.br
.ti -1c
.RI "template<typename _Tp , typename _Up > \fBstd::complex\fP< typename __gnu_cxx::__promote_2< _Tp, _Up >::__type > \fBstd::pow\fP (const \fBstd::complex\fP< _Tp > &__x, const \fBstd::complex\fP< _Up > &__y)"
.br
.ti -1c
.RI "template<typename _Tp , typename _Up > \fBstd::complex\fP< typename __gnu_cxx::__promote_2< _Tp, _Up >::__type > \fBstd::pow\fP (const _Tp &__x, const \fBstd::complex\fP< _Up > &__y)"
.br
.ti -1c
.RI "template<typename _Tp , typename _Up > \fBstd::complex\fP< typename __gnu_cxx::__promote_2< _Tp, _Up >::__type > \fBstd::pow\fP (const \fBstd::complex\fP< _Tp > &__x, const _Up &__y)"
.br
.ti -1c
.RI "template<typename _Tp > complex< _Tp > \fBstd::pow\fP (const _Tp &, const complex< _Tp > &)"
.br
.ti -1c
.RI "template<typename _Tp > complex< _Tp > \fBstd::pow\fP (const complex< _Tp > &, const complex< _Tp > &)"
.br
.ti -1c
.RI "template<typename _Tp > complex< _Tp > \fBstd::pow\fP (const complex< _Tp > &, const _Tp &)"
.br
.ti -1c
.RI "template<typename _Tp > __gnu_cxx::__promote< _Tp >::__type \fBstd::real\fP (_Tp __x)"
.br
.ti -1c
.RI "template<typename _Tp > _Tp \fBstd::real\fP (const complex< _Tp > &__z)"
.br
.ti -1c
.RI "template<typename _Tp > complex< _Tp > \fBstd::sin\fP (const complex< _Tp > &)"
.br
.ti -1c
.RI "template<typename _Tp > complex< _Tp > \fBstd::sinh\fP (const complex< _Tp > &)"
.br
.ti -1c
.RI "template<typename _Tp > complex< _Tp > \fBstd::sqrt\fP (const complex< _Tp > &)"
.br
.ti -1c
.RI "template<typename _Tp > complex< _Tp > \fBstd::tan\fP (const complex< _Tp > &)"
.br
.ti -1c
.RI "template<typename _Tp > complex< _Tp > \fBstd::tanh\fP (const complex< _Tp > &)"
.br
.in -1c
.in +1c
.ti -1c
.RI "template<typename _Tp > bool \fBstd::operator!=\fP (const _Tp &__x, const complex< _Tp > &__y)"
.br
.ti -1c
.RI "template<typename _Tp > bool \fBstd::operator!=\fP (const complex< _Tp > &__x, const _Tp &__y)"
.br
.ti -1c
.RI "template<typename _Tp > bool \fBstd::operator!=\fP (const complex< _Tp > &__x, const complex< _Tp > &__y)"
.br
.in -1c
.in +1c
.ti -1c
.RI "template<typename _Tp > complex< _Tp > \fBstd::operator*\fP (const _Tp &__x, const complex< _Tp > &__y)"
.br
.ti -1c
.RI "template<typename _Tp > complex< _Tp > \fBstd::operator*\fP (const complex< _Tp > &__x, const _Tp &__y)"
.br
.ti -1c
.RI "template<typename _Tp > complex< _Tp > \fBstd::operator*\fP (const complex< _Tp > &__x, const complex< _Tp > &__y)"
.br
.in -1c
.in +1c
.ti -1c
.RI "template<typename _Tp > complex< _Tp > \fBstd::operator+\fP (const _Tp &__x, const complex< _Tp > &__y)"
.br
.ti -1c
.RI "template<typename _Tp > complex< _Tp > \fBstd::operator+\fP (const complex< _Tp > &__x, const _Tp &__y)"
.br
.ti -1c
.RI "template<typename _Tp > complex< _Tp > \fBstd::operator+\fP (const complex< _Tp > &__x, const complex< _Tp > &__y)"
.br
.in -1c
.in +1c
.ti -1c
.RI "template<typename _Tp > complex< _Tp > \fBstd::operator-\fP (const _Tp &__x, const complex< _Tp > &__y)"
.br
.ti -1c
.RI "template<typename _Tp > complex< _Tp > \fBstd::operator-\fP (const complex< _Tp > &__x, const _Tp &__y)"
.br
.ti -1c
.RI "template<typename _Tp > complex< _Tp > \fBstd::operator-\fP (const complex< _Tp > &__x, const complex< _Tp > &__y)"
.br
.in -1c
.in +1c
.ti -1c
.RI "template<typename _Tp > complex< _Tp > \fBstd::operator/\fP (const _Tp &__x, const complex< _Tp > &__y)"
.br
.ti -1c
.RI "template<typename _Tp > complex< _Tp > \fBstd::operator/\fP (const complex< _Tp > &__x, const _Tp &__y)"
.br
.ti -1c
.RI "template<typename _Tp > complex< _Tp > \fBstd::operator/\fP (const complex< _Tp > &__x, const complex< _Tp > &__y)"
.br
.in -1c
.in +1c
.ti -1c
.RI "template<typename _Tp > bool \fBstd::operator==\fP (const _Tp &__x, const complex< _Tp > &__y)"
.br
.ti -1c
.RI "template<typename _Tp > bool \fBstd::operator==\fP (const complex< _Tp > &__x, const _Tp &__y)"
.br
.ti -1c
.RI "template<typename _Tp > bool \fBstd::operator==\fP (const complex< _Tp > &__x, const complex< _Tp > &__y)"
.br
.in -1c
.SH "Detailed Description"
.PP 
Classes and functions for \fBcomplex\fP numbers. 
.SH "Function Documentation"
.PP 
.SS "template<typename _Tp > _Tp std::abs (const complex< _Tp > & __z)\fC [inline]\fP"
.PP
Return magnitude of \fIz\fP. 
.PP
Definition at line 594 of file complex.
.PP
Referenced by std::tr1::__detail::__airy(), std::tr1::__detail::__bessel_ik(), std::tr1::__detail::__bessel_jn(), std::tr1::__detail::__comp_ellint_1(), std::tr1::__detail::__comp_ellint_2(), std::tr1::__detail::__comp_ellint_3(), std::tr1::__detail::__conf_hyperg_luke(), std::tr1::__detail::__conf_hyperg_series(), std::tr1::__detail::__cyl_bessel_ij_series(), std::tr1::__detail::__ellint_1(), std::tr1::__detail::__ellint_2(), std::tr1::__detail::__ellint_3(), std::tr1::__detail::__ellint_rc(), std::tr1::__detail::__ellint_rd(), std::tr1::__detail::__ellint_rf(), std::tr1::__detail::__ellint_rj(), std::tr1::__detail::__expint_asymp(), std::tr1::__detail::__expint_E1_asymp(), std::tr1::__detail::__expint_E1_series(), std::tr1::__detail::__expint_En_cont_frac(), std::tr1::__detail::__expint_En_series(), std::tr1::__detail::__expint_large_n(), std::tr1::__detail::__gamma_temme(), std::tr1::__detail::__hurwitz_zeta_glob(), std::tr1::__detail::__hyperg(), std::tr1::__detail::__hyperg_luke(), std::tr1::__detail::__hyperg_reflect(), std::tr1::__detail::__hyperg_series(), std::tr1::__detail::__log_gamma(), std::tr1::__detail::__poly_laguerre_hyperg(), std::tr1::__detail::__psi(), std::tr1::__detail::__psi_asymp(), std::tr1::__detail::__psi_series(), std::tr1::__detail::__riemann_zeta_alt(), std::tr1::__detail::__riemann_zeta_glob(), std::fabs(), std::binomial_distribution< _IntType, _RealType >::operator()(), and std::poisson_distribution< _IntType, _RealType >::operator()().
.SS "template<typename _Tp > \fBstd::complex\fP< _Tp > std::acos (const \fBstd::complex\fP< _Tp > & __z)\fC [inline]\fP"
.PP
acos(__z) [8.1.2]. 
.PP
Definition at line 86 of file tr1_impl/complex.
.SS "template<typename _Tp > \fBstd::complex\fP< _Tp > std::acosh (const \fBstd::complex\fP< _Tp > & __z)\fC [inline]\fP"
.PP
acosh(__z) [8.1.5]. 
.PP
Definition at line 205 of file tr1_impl/complex.
.SS "template<typename _Tp > __gnu_cxx::__promote<_Tp>::__type std::arg (_Tp __x)\fC [inline]\fP"
.PP
Additional overloads [8.1.9]. 
.PP
Definition at line 311 of file tr1_impl/complex.
.PP
References std::arg().
.SS "template<typename _Tp > _Tp std::arg (const complex< _Tp > & __z)\fC [inline]\fP"
.PP
Return phase angle of \fIz\fP. 
.PP
Definition at line 621 of file complex.
.PP
Referenced by std::arg().
.SS "template<typename _Tp > \fBstd::complex\fP< _Tp > std::asin (const \fBstd::complex\fP< _Tp > & __z)\fC [inline]\fP"
.PP
asin(__z) [8.1.3]. 
.PP
Definition at line 122 of file tr1_impl/complex.
.SS "template<typename _Tp > \fBstd::complex\fP< _Tp > std::asinh (const \fBstd::complex\fP< _Tp > & __z)\fC [inline]\fP"
.PP
asinh(__z) [8.1.6]. 
.PP
Definition at line 244 of file tr1_impl/complex.
.SS "template<typename _Tp > \fBstd::complex\fP< _Tp > std::atan (const \fBstd::complex\fP< _Tp > & __z)\fC [inline]\fP"
.PP
atan(__z) [8.1.4]. 
.PP
Definition at line 166 of file tr1_impl/complex.
.SS "template<typename _Tp > \fBstd::complex\fP< _Tp > std::atanh (const \fBstd::complex\fP< _Tp > & __z)\fC [inline]\fP"
.PP
atanh(__z) [8.1.7]. 
.PP
Definition at line 288 of file tr1_impl/complex.
.SS "template<typename _Tp > complex< _Tp > std::conj (const complex< _Tp > & __z)\fC [inline]\fP"
.PP
Return \fBcomplex\fP conjugate of \fIz\fP. 
.PP
Definition at line 667 of file complex.
.PP
References std::complex< _Tp >::imag(), and std::complex< _Tp >::real().
.SS "template<typename _Tp > complex< _Tp > std::cos (const complex< _Tp > & __z)\fC [inline]\fP"
.PP
Return \fBcomplex\fP cosine of \fIz\fP. 
.PP
Definition at line 699 of file complex.
.PP
Referenced by std::tr1::__detail::__cyl_bessel_jn_asymp(), std::tr1::__detail::__ellint_1(), std::tr1::__detail::__ellint_2(), std::tr1::__detail::__ellint_3(), std::tr1::__detail::__psi(), std::tr1::__detail::__sph_legendre(), and std::polar().
.SS "template<typename _Tp > complex< _Tp > std::cosh (const complex< _Tp > & __z)\fC [inline]\fP"
.PP
Return \fBcomplex\fP hyperbolic cosine of \fIz\fP. 
.PP
Definition at line 729 of file complex.
.PP
Referenced by std::tr1::__detail::__bessel_ik(), and std::tr1::__detail::__bessel_jn().
.SS "template<typename _Tp > complex< _Tp > std::exp (const complex< _Tp > & __z)\fC [inline]\fP"
.PP
Return \fBcomplex\fP base e exponential of \fIz\fP. 
.PP
Definition at line 755 of file complex.
.PP
Referenced by std::tr1::__detail::__bessel_ik(), std::tr1::__detail::__bessel_jn(), std::tr1::__detail::__beta_lgamma(), std::tr1::__detail::__bincoef(), std::tr1::__detail::__conf_hyperg(), std::tr1::__detail::__cyl_bessel_ij_series(), std::tr1::__detail::__expint(), std::tr1::__detail::__expint_asymp(), std::tr1::__detail::__expint_E1_asymp(), std::tr1::__detail::__expint_Ei_asymp(), std::tr1::__detail::__expint_En_cont_frac(), std::tr1::__detail::__expint_En_recursion(), std::tr1::__detail::__expint_large_n(), std::tr1::__detail::__gamma(), std::tr1::__detail::__hurwitz_zeta_glob(), std::tr1::__detail::__hyperg_reflect(), std::tr1::__detail::__poly_laguerre_large_n(), std::tr1::__detail::__psi(), std::tr1::__detail::__riemann_zeta(), std::tr1::__detail::__riemann_zeta_glob(), std::tr1::__detail::__sph_legendre(), std::gamma_distribution< _RealType >::operator()(), and std::pow().
.SS "template<typename _Tp > _Tp std::fabs (const \fBstd::complex\fP< _Tp > & __z)\fC [inline]\fP"
.PP
fabs(__z) [8.1.8]. 
.PP
Definition at line 301 of file tr1_impl/complex.
.PP
References std::abs().
.SS "template<typename _Tp > complex< _Tp > std::log (const complex< _Tp > & __z)\fC [inline]\fP"
.PP
Return \fBcomplex\fP natural logarithm of \fIz\fP. 
.PP
Definition at line 782 of file complex.
.PP
Referenced by std::tr1::__detail::__bessel_ik(), std::tr1::__detail::__bessel_jn(), std::tr1::__detail::__bincoef(), std::tr1::__detail::__cyl_bessel_ij_series(), std::tr1::__detail::__expint_E1_series(), std::tr1::__detail::__expint_Ei(), std::tr1::__detail::__expint_Ei_series(), std::tr1::__detail::__expint_En_series(), std::tr1::__detail::__hurwitz_zeta_glob(), std::tr1::__detail::__hyperg_reflect(), std::tr1::__detail::__log_bincoef(), std::tr1::__detail::__log_gamma(), std::tr1::__detail::__log_gamma_bernoulli(), std::tr1::__detail::__log_gamma_lanczos(), std::tr1::__detail::__poly_laguerre_large_n(), std::tr1::__detail::__psi_asymp(), std::tr1::__detail::__riemann_zeta_glob(), std::tr1::__detail::__sph_legendre(), std::log10(), std::gamma_distribution< _RealType >::operator()(), std::normal_distribution< _RealType >::operator()(), std::binomial_distribution< _IntType, _RealType >::operator()(), std::poisson_distribution< _IntType, _RealType >::operator()(), and std::pow().
.SS "template<typename _Tp > complex< _Tp > std::log10 (const complex< _Tp > & __z)\fC [inline]\fP"
.PP
Return \fBcomplex\fP base 10 logarithm of \fIz\fP. 
.PP
Definition at line 787 of file complex.
.PP
References std::log().
.SS "template<typename _Tp > _Tp std::norm (const complex< _Tp > & __z)\fC [inline]\fP"
.PP
Return \fIz\fP magnitude squared. 
.PP
Definition at line 654 of file complex.
.PP
Referenced by std::complex< _Tp >::operator/=().
.SS "template<typename _Tp > bool std::operator!= (const _Tp & __x, const complex< _Tp > & __y)\fC [inline]\fP"
.PP
Return false if \fIx\fP is equal to \fIy\fP. 
.PP
Definition at line 479 of file complex.
.PP
References std::complex< _Tp >::imag(), and std::complex< _Tp >::real().
.SS "template<typename _Tp > bool std::operator!= (const complex< _Tp > & __x, const _Tp & __y)\fC [inline]\fP"
.PP
Return false if \fIx\fP is equal to \fIy\fP. 
.PP
Definition at line 474 of file complex.
.PP
References std::complex< _Tp >::imag(), and std::complex< _Tp >::real().
.SS "template<typename _Tp > bool std::operator!= (const complex< _Tp > & __x, const complex< _Tp > & __y)\fC [inline]\fP"
.PP
Return false if \fIx\fP is equal to \fIy\fP. 
.PP
Definition at line 469 of file complex.
.PP
References std::complex< _Tp >::imag(), and std::complex< _Tp >::real().
.SS "template<typename _Tp > complex<_Tp> std::operator* (const _Tp & __x, const complex< _Tp > & __y)\fC [inline]\fP"
.PP
Return new \fBcomplex\fP value \fIx\fP times \fIy\fP. 
.PP
Definition at line 397 of file complex.
.SS "template<typename _Tp > complex<_Tp> std::operator* (const complex< _Tp > & __x, const _Tp & __y)\fC [inline]\fP"
.PP
Return new \fBcomplex\fP value \fIx\fP times \fIy\fP. 
.PP
Definition at line 388 of file complex.
.SS "template<typename _Tp > complex<_Tp> std::operator* (const complex< _Tp > & __x, const complex< _Tp > & __y)\fC [inline]\fP"
.PP
Return new \fBcomplex\fP value \fIx\fP times \fIy\fP. 
.PP
Definition at line 379 of file complex.
.PP
Referenced by std::ostreambuf_iterator< _CharT, _Traits >::operator*(), std::istreambuf_iterator< _CharT, _Traits >::operator*(), std::insert_iterator< _Container >::operator*(), std::front_insert_iterator< _Container >::operator*(), std::back_insert_iterator< _Container >::operator*(), std::reverse_iterator< _Iterator >::operator*(), std::auto_ptr< _Tp >::operator*(), and std::reverse_iterator< _Iterator >::operator->().
.SS "template<typename _Tp > template<typename _Up > complex< _Tp > & \fBstd::complex\fP< _Tp >::operator*= (const \fBcomplex\fP< _Up > & __z)\fC [inline, inherited]\fP"
.PP
Multiply this \fBcomplex\fP number by \fIz\fP. 
.PP
Definition at line 292 of file complex.
.PP
References std::complex< _Tp >::imag(), and std::complex< _Tp >::real().
.SS "template<typename _Tp > complex< _Tp > & \fBstd::complex\fP< _Tp >::operator*= (const _Tp & __t)\fC [inline, inherited]\fP"
.PP
Multiply this \fBcomplex\fP number by \fIt\fP. 
.PP
Definition at line 238 of file complex.
.SS "template<typename _Tp > complex<_Tp> std::operator+ (const complex< _Tp > & __x)\fC [inline]\fP"
.PP
Return \fIx\fP. 
.PP
Definition at line 438 of file complex.
.SS "template<typename _Tp > complex<_Tp> std::operator+ (const _Tp & __x, const complex< _Tp > & __y)\fC [inline]\fP"
.PP
Return new \fBcomplex\fP value \fIx\fP \fBplus\fP \fIy\fP. 
.PP
Definition at line 337 of file complex.
.SS "template<typename _Tp > complex<_Tp> std::operator+ (const complex< _Tp > & __x, const _Tp & __y)\fC [inline]\fP"
.PP
Return new \fBcomplex\fP value \fIx\fP \fBplus\fP \fIy\fP. 
.PP
Definition at line 328 of file complex.
.SS "template<typename _Tp > complex<_Tp> std::operator+ (const complex< _Tp > & __x, const complex< _Tp > & __y)\fC [inline]\fP"
.PP
Return new \fBcomplex\fP value \fIx\fP \fBplus\fP \fIy\fP. 
.PP
Definition at line 319 of file complex.
.SS "template<typename _Tp > template<typename _Up > complex< _Tp > & \fBstd::complex\fP< _Tp >::operator+= (const \fBcomplex\fP< _Up > & __z)\fC [inline, inherited]\fP"
.PP
Add \fIz\fP to this \fBcomplex\fP number. 
.PP
Definition at line 269 of file complex.
.PP
References std::complex< _Tp >::imag(), and std::complex< _Tp >::real().
.SS "template<typename _Tp > complex<_Tp> std::operator- (const complex< _Tp > & __x)\fC [inline]\fP"
.PP
Return \fBcomplex\fP negation of \fIx\fP. 
.PP
Definition at line 444 of file complex.
.PP
References std::complex< _Tp >::imag(), and std::complex< _Tp >::real().
.SS "template<typename _Tp > complex<_Tp> std::operator- (const _Tp & __x, const complex< _Tp > & __y)\fC [inline]\fP"
.PP
Return new \fBcomplex\fP value \fIx\fP \fBminus\fP \fIy\fP. 
.PP
Definition at line 367 of file complex.
.PP
References std::complex< _Tp >::imag(), and std::complex< _Tp >::real().
.SS "template<typename _Tp > complex<_Tp> std::operator- (const complex< _Tp > & __x, const _Tp & __y)\fC [inline]\fP"
.PP
Return new \fBcomplex\fP value \fIx\fP \fBminus\fP \fIy\fP. 
.PP
Definition at line 358 of file complex.
.SS "template<typename _Tp > complex<_Tp> std::operator- (const complex< _Tp > & __x, const complex< _Tp > & __y)\fC [inline]\fP"
.PP
Return new \fBcomplex\fP value \fIx\fP \fBminus\fP \fIy\fP. 
.PP
Definition at line 349 of file complex.
.PP
Referenced by std::operator-(), std::reverse_iterator< _Iterator >::operator-(), and std::fpos< _StateT >::operator-().
.SS "template<typename _Tp > template<typename _Up > complex< _Tp > & \fBstd::complex\fP< _Tp >::operator-= (const \fBcomplex\fP< _Up > & __z)\fC [inline, inherited]\fP"
.PP
Subtract \fIz\fP from this \fBcomplex\fP number. 
.PP
Definition at line 280 of file complex.
.PP
References std::complex< _Tp >::imag(), and std::complex< _Tp >::real().
.SS "template<typename _Tp > complex<_Tp> std::operator/ (const _Tp & __x, const complex< _Tp > & __y)\fC [inline]\fP"
.PP
Return new \fBcomplex\fP value \fIx\fP divided by \fIy\fP. 
.PP
Definition at line 427 of file complex.
.SS "template<typename _Tp > complex<_Tp> std::operator/ (const complex< _Tp > & __x, const _Tp & __y)\fC [inline]\fP"
.PP
Return new \fBcomplex\fP value \fIx\fP divided by \fIy\fP. 
.PP
Definition at line 418 of file complex.
.SS "template<typename _Tp > complex<_Tp> std::operator/ (const complex< _Tp > & __x, const complex< _Tp > & __y)\fC [inline]\fP"
.PP
Return new \fBcomplex\fP value \fIx\fP divided by \fIy\fP. 
.PP
Definition at line 409 of file complex.
.SS "template<typename _Tp > template<typename _Up > complex< _Tp > & \fBstd::complex\fP< _Tp >::operator/= (const \fBcomplex\fP< _Up > & __z)\fC [inline, inherited]\fP"
.PP
Divide this \fBcomplex\fP number by \fIz\fP. 
.PP
Definition at line 305 of file complex.
.PP
References std::complex< _Tp >::imag(), std::norm(), and std::complex< _Tp >::real().
.SS "template<typename _Tp > complex< _Tp > & \fBstd::complex\fP< _Tp >::operator/= (const _Tp & __t)\fC [inline, inherited]\fP"
.PP
Divide this \fBcomplex\fP number by \fIt\fP. 
.PP
Definition at line 248 of file complex.
.SS "template<typename _Tp , typename _CharT , class _Traits > basic_ostream<_CharT, _Traits>& std::operator<< (basic_ostream< _CharT, _Traits > & __os, const complex< _Tp > & __x)\fC [inline]\fP"
.PP
Insertion operator for \fBcomplex\fP values. 
.PP
Definition at line 519 of file complex.
.PP
References std::ios_base::flags(), std::basic_ios< _CharT, _Traits >::imbue(), std::ios_base::precision(), and std::basic_ostringstream< _CharT, _Traits, _Alloc >::str().
.SS "template<typename _Tp > template<typename _Up > complex< _Tp > & \fBstd::complex\fP< _Tp >::operator= (const \fBcomplex\fP< _Up > & __z)\fC [inline, inherited]\fP"
.PP
Assign this \fBcomplex\fP number to \fBcomplex\fP \fIz\fP. 
.PP
Definition at line 258 of file complex.
.PP
References std::complex< _Tp >::imag(), and std::complex< _Tp >::real().
.SS "template<typename _Tp > complex< _Tp > & \fBstd::complex\fP< _Tp >::operator= (const _Tp & __t)\fC [inline, inherited]\fP"
.PP
Assign this \fBcomplex\fP number to scalar \fIt\fP. 
.PP
Definition at line 228 of file complex.
.SS "template<typename _Tp > bool std::operator== (const _Tp & __x, const complex< _Tp > & __y)\fC [inline]\fP"
.PP
Return true if \fIx\fP is equal to \fIy\fP. 
.PP
Definition at line 461 of file complex.
.PP
References std::complex< _Tp >::imag(), and std::complex< _Tp >::real().
.SS "template<typename _Tp > bool std::operator== (const complex< _Tp > & __x, const _Tp & __y)\fC [inline]\fP"
.PP
Return true if \fIx\fP is equal to \fIy\fP. 
.PP
Definition at line 456 of file complex.
.PP
References std::complex< _Tp >::imag(), and std::complex< _Tp >::real().
.SS "template<typename _Tp > bool std::operator== (const complex< _Tp > & __x, const complex< _Tp > & __y)\fC [inline]\fP"
.PP
Return true if \fIx\fP is equal to \fIy\fP. 
.PP
Definition at line 451 of file complex.
.PP
References std::complex< _Tp >::imag(), and std::complex< _Tp >::real().
.SS "template<typename _Tp , typename _CharT , class _Traits > basic_istream<_CharT, _Traits>& std::operator>> (basic_istream< _CharT, _Traits > & __is, complex< _Tp > & __x)\fC [inline]\fP"
.PP
Extraction operator for \fBcomplex\fP values. 
.PP
Definition at line 486 of file complex.
.PP
References std::ios_base::failbit, std::basic_istream< _CharT, _Traits >::putback(), and std::basic_ios< _CharT, _Traits >::setstate().
.SS "template<typename _Tp > complex< _Tp > std::polar (const _Tp & __rho, const _Tp & __theta = \fC0\fP)\fC [inline]\fP"
.PP
Return \fBcomplex\fP with magnitude \fIrho\fP and angle \fItheta\fP. 
.PP
Definition at line 662 of file complex.
.PP
References std::cos(), and std::sin().
.PP
Referenced by std::pow().
.SS "template<typename _Tp > complex< _Tp > std::pow (const _Tp & __x, const complex< _Tp > & __y)\fC [inline]\fP"
.PP
Return \fIx\fP to the \fIy'th\fP power. 
.PP
Definition at line 1009 of file complex.
.PP
References std::complex< _Tp >::imag(), std::log(), std::polar(), std::pow(), and std::complex< _Tp >::real().
.SS "template<typename _Tp > complex< _Tp > std::pow (const complex< _Tp > & __x, const complex< _Tp > & __y)\fC [inline]\fP"
.PP
Return \fIx\fP to the \fIy'th\fP power. 
.PP
Definition at line 1003 of file complex.
.PP
References std::pow().
.SS "template<typename _Tp > complex< _Tp > std::pow (const complex< _Tp > & __x, const _Tp & __y)\fC [inline]\fP"
.PP
Return \fIx\fP to the \fIy'th\fP power. 
.PP
Definition at line 964 of file complex.
.PP
References std::exp(), std::complex< _Tp >::imag(), std::log(), std::polar(), std::pow(), and std::complex< _Tp >::real().
.PP
Referenced by std::tr1::__detail::__bernoulli_series(), std::tr1::__detail::__conf_hyperg_luke(), std::tr1::__detail::__ellint_rc(), std::tr1::__detail::__ellint_rd(), std::tr1::__detail::__ellint_rf(), std::tr1::__detail::__ellint_rj(), std::tr1::__detail::__hurwitz_zeta_glob(), std::tr1::__detail::__hyperg(), std::tr1::__detail::__hyperg_luke(), std::tr1::__detail::__riemann_zeta(), std::tr1::__detail::__riemann_zeta_alt(), std::tr1::__detail::__riemann_zeta_glob(), std::tr1::__detail::__riemann_zeta_product(), std::tr1::__detail::__riemann_zeta_sum(), std::gamma_distribution< _RealType >::operator()(), std::tr1::pow(), and std::pow().
.SS "template<typename _Tp > complex< _Tp > std::sin (const complex< _Tp > & __z)\fC [inline]\fP"
.PP
Return \fBcomplex\fP sine of \fIz\fP. 
.PP
Definition at line 817 of file complex.
.PP
Referenced by std::tr1::__detail::__bessel_ik(), std::tr1::__detail::__bessel_jn(), std::tr1::__detail::__cyl_bessel_jn_asymp(), std::tr1::__detail::__ellint_1(), std::tr1::__detail::__ellint_2(), std::tr1::__detail::__ellint_3(), std::tr1::__detail::__log_gamma(), std::tr1::__detail::__log_gamma_sign(), std::tr1::__detail::__poly_laguerre_large_n(), std::tr1::__detail::__psi(), std::tr1::__detail::__riemann_zeta(), std::tr1::__detail::__riemann_zeta_glob(), and std::polar().
.SS "template<typename _Tp > complex< _Tp > std::sinh (const complex< _Tp > & __z)\fC [inline]\fP"
.PP
Return \fBcomplex\fP hyperbolic sine of \fIz\fP. 
.PP
Definition at line 847 of file complex.
.PP
Referenced by std::tr1::__detail::__bessel_ik(), and std::tr1::__detail::__bessel_jn().
.SS "template<typename _Tp > complex< _Tp > std::sqrt (const complex< _Tp > & __z)\fC [inline]\fP"
.PP
Return \fBcomplex\fP square root of \fIz\fP. 
.PP
Definition at line 891 of file complex.
.PP
Referenced by std::tr1::__detail::__airy(), std::tr1::__detail::__assoc_legendre_p(), std::tr1::__detail::__bessel_ik(), std::tr1::__detail::__bessel_jn(), std::tr1::__detail::__cyl_bessel_jn_asymp(), std::tr1::__detail::__ellint_rc(), std::tr1::__detail::__ellint_rd(), std::tr1::__detail::__ellint_rf(), std::tr1::__detail::__ellint_rj(), std::tr1::__detail::__poly_laguerre_large_n(), std::tr1::__detail::__sph_bessel_ik(), std::tr1::__detail::__sph_bessel_jn(), std::tr1::__detail::__sph_legendre(), and std::normal_distribution< _RealType >::operator()().
.SS "template<typename _Tp > complex< _Tp > std::tan (const complex< _Tp > & __z)\fC [inline]\fP"
.PP
Return \fBcomplex\fP tangent of \fIz\fP. 
.PP
Definition at line 918 of file complex.
.SS "template<typename _Tp > complex< _Tp > std::tanh (const complex< _Tp > & __z)\fC [inline]\fP"
.PP
Return \fBcomplex\fP hyperbolic tangent of \fIz\fP. 
.PP
Definition at line 946 of file complex.
.SH "Author"
.PP 
Generated automatically by Doxygen for libstdc++ from the source code.
