.TH "__gnu_parallel::plus" 3 "21 Apr 2009" "libstdc++" \" -*- nroff -*-
.ad l
.nh
.SH NAME
__gnu_parallel::plus \- Similar to \fBstd::plus\fP, but allows two different types.  

.PP
.SH SYNOPSIS
.br
.PP
Inherits \fBbinary_function< _Tp1, _Tp2, _Tp1 >\fP.
.PP
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef _Tp1 \fBfirst_argument_type\fP"
.br
.ti -1c
.RI "typedef _Tp1 \fBresult_type\fP"
.br
.ti -1c
.RI "typedef _Tp2 \fBsecond_argument_type\fP"
.br
.ti -1c
.RI "typedef __typeof__(*)(const _Tp1 &__x, const _Tp2 &__y \fBstatic_cast\fP )(NULL)+*static_cast< _Tp2 * >(NULL)) result;resultoperator("
.br
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<typename _Tp1, typename _Tp2> struct __gnu_parallel::plus< _Tp1, _Tp2 >"
Similar to \fBstd::plus\fP, but allows two different types. 
.PP
Definition at line 281 of file base.h.
.SH "Member Typedef Documentation"
.PP 
.SS "typedef _Tp1  \fBstd::binary_function\fP< _Tp1 , _Tp2 , _Tp1  >::\fBfirst_argument_type\fP\fC [inherited]\fP"
.PP
the type of the first argument (no surprises here) 
.PP
Definition at line 114 of file stl_function.h.
.SS "typedef _Tp1  \fBstd::binary_function\fP< _Tp1 , _Tp2 , _Tp1  >::\fBresult_type\fP\fC [inherited]\fP"
.PP
type of the return type 
.PP
Definition at line 118 of file stl_function.h.
.SS "typedef _Tp2  \fBstd::binary_function\fP< _Tp1 , _Tp2 , _Tp1  >::\fBsecond_argument_type\fP\fC [inherited]\fP"
.PP
the type of the second argument 
.PP
Definition at line 117 of file stl_function.h.

.SH "Author"
.PP 
Generated automatically by Doxygen for libstdc++ from the source code.
