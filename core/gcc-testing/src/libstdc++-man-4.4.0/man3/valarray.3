.TH "valarray" 3 "21 Apr 2009" "libstdc++" \" -*- nroff -*-
.ad l
.nh
.SH NAME
valarray \- 
.SH SYNOPSIS
.br
.PP
.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBstd::valarray< _Tp >\fP"
.br
.RI "\fISmart \fBarray\fP designed to support numeric processing. \fP"
.in -1c
.SS "Namespaces"

.in +1c
.ti -1c
.RI "namespace \fBstd\fP"
.br
.in -1c
.SS "Defines"

.in +1c
.ti -1c
.RI "#define \fB_DEFINE_BINARY_OPERATOR\fP(_Op, _Name)"
.br
.ti -1c
.RI "#define \fB_DEFINE_VALARRAY_AUGMENTED_ASSIGNMENT\fP(_Op, _Name)"
.br
.ti -1c
.RI "#define \fB_DEFINE_VALARRAY_EXPR_AUGMENTED_ASSIGNMENT\fP(_Op, _Name)"
.br
.ti -1c
.RI "#define \fB_DEFINE_VALARRAY_UNARY_OPERATOR\fP(_Op, _Name)"
.br
.ti -1c
.RI "#define \fB_GLIBCXX_VALARRAY\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "template<typename _Tp > _Expr< _BinClos< __not_equal_to, _Constant, _ValArray, _Tp, _Tp >, typename __fun< __not_equal_to, _Tp >::result_type > \fBstd::operator!=\fP (const _Tp &__t, const valarray< _Tp > &__v)"
.br
.ti -1c
.RI "template<typename _Tp > _Expr< _BinClos< __not_equal_to, _ValArray, _Constant, _Tp, _Tp >, typename __fun< __not_equal_to, _Tp >::result_type > \fBstd::operator!=\fP (const valarray< _Tp > &__v, const _Tp &__t)"
.br
.ti -1c
.RI "template<typename _Tp > _Expr< _BinClos< __not_equal_to, _ValArray, _ValArray, _Tp, _Tp >, typename __fun< __not_equal_to, _Tp >::result_type > \fBstd::operator!=\fP (const valarray< _Tp > &__v, const valarray< _Tp > &__w)"
.br
.ti -1c
.RI "template<typename _Tp > _Expr< _BinClos< __modulus, _Constant, _ValArray, _Tp, _Tp >, typename __fun< __modulus, _Tp >::result_type > \fBstd::operator%\fP (const _Tp &__t, const valarray< _Tp > &__v)"
.br
.ti -1c
.RI "template<typename _Tp > _Expr< _BinClos< __modulus, _ValArray, _Constant, _Tp, _Tp >, typename __fun< __modulus, _Tp >::result_type > \fBstd::operator%\fP (const valarray< _Tp > &__v, const _Tp &__t)"
.br
.ti -1c
.RI "template<typename _Tp > _Expr< _BinClos< __modulus, _ValArray, _ValArray, _Tp, _Tp >, typename __fun< __modulus, _Tp >::result_type > \fBstd::operator%\fP (const valarray< _Tp > &__v, const valarray< _Tp > &__w)"
.br
.ti -1c
.RI "template<typename _Tp > _Expr< _BinClos< __bitwise_and, _Constant, _ValArray, _Tp, _Tp >, typename __fun< __bitwise_and, _Tp >::result_type > \fBstd::operator&\fP (const _Tp &__t, const valarray< _Tp > &__v)"
.br
.ti -1c
.RI "template<typename _Tp > _Expr< _BinClos< __bitwise_and, _ValArray, _Constant, _Tp, _Tp >, typename __fun< __bitwise_and, _Tp >::result_type > \fBstd::operator&\fP (const valarray< _Tp > &__v, const _Tp &__t)"
.br
.ti -1c
.RI "template<typename _Tp > _Expr< _BinClos< __bitwise_and, _ValArray, _ValArray, _Tp, _Tp >, typename __fun< __bitwise_and, _Tp >::result_type > \fBstd::operator&\fP (const valarray< _Tp > &__v, const valarray< _Tp > &__w)"
.br
.ti -1c
.RI "template<typename _Tp > _Expr< _BinClos< __logical_and, _Constant, _ValArray, _Tp, _Tp >, typename __fun< __logical_and, _Tp >::result_type > \fBstd::operator&&\fP (const _Tp &__t, const valarray< _Tp > &__v)"
.br
.ti -1c
.RI "template<typename _Tp > _Expr< _BinClos< __logical_and, _ValArray, _Constant, _Tp, _Tp >, typename __fun< __logical_and, _Tp >::result_type > \fBstd::operator&&\fP (const valarray< _Tp > &__v, const _Tp &__t)"
.br
.ti -1c
.RI "template<typename _Tp > _Expr< _BinClos< __logical_and, _ValArray, _ValArray, _Tp, _Tp >, typename __fun< __logical_and, _Tp >::result_type > \fBstd::operator&&\fP (const valarray< _Tp > &__v, const valarray< _Tp > &__w)"
.br
.ti -1c
.RI "template<typename _Tp > _Expr< _BinClos< __multiplies, _Constant, _ValArray, _Tp, _Tp >, typename __fun< __multiplies, _Tp >::result_type > \fBstd::operator*\fP (const _Tp &__t, const valarray< _Tp > &__v)"
.br
.ti -1c
.RI "template<typename _Tp > _Expr< _BinClos< __multiplies, _ValArray, _Constant, _Tp, _Tp >, typename __fun< __multiplies, _Tp >::result_type > \fBstd::operator*\fP (const valarray< _Tp > &__v, const _Tp &__t)"
.br
.ti -1c
.RI "template<typename _Tp > _Expr< _BinClos< __multiplies, _ValArray, _ValArray, _Tp, _Tp >, typename __fun< __multiplies, _Tp >::result_type > \fBstd::operator*\fP (const valarray< _Tp > &__v, const valarray< _Tp > &__w)"
.br
.ti -1c
.RI "template<typename _Tp > _Expr< _BinClos< __plus, _Constant, _ValArray, _Tp, _Tp >, typename __fun< __plus, _Tp >::result_type > \fBstd::operator+\fP (const _Tp &__t, const valarray< _Tp > &__v)"
.br
.ti -1c
.RI "template<typename _Tp > _Expr< _BinClos< __plus, _ValArray, _Constant, _Tp, _Tp >, typename __fun< __plus, _Tp >::result_type > \fBstd::operator+\fP (const valarray< _Tp > &__v, const _Tp &__t)"
.br
.ti -1c
.RI "template<typename _Tp > _Expr< _BinClos< __plus, _ValArray, _ValArray, _Tp, _Tp >, typename __fun< __plus, _Tp >::result_type > \fBstd::operator+\fP (const valarray< _Tp > &__v, const valarray< _Tp > &__w)"
.br
.ti -1c
.RI "template<typename _Tp > _Expr< _BinClos< __minus, _Constant, _ValArray, _Tp, _Tp >, typename __fun< __minus, _Tp >::result_type > \fBstd::operator-\fP (const _Tp &__t, const valarray< _Tp > &__v)"
.br
.ti -1c
.RI "template<typename _Tp > _Expr< _BinClos< __minus, _ValArray, _Constant, _Tp, _Tp >, typename __fun< __minus, _Tp >::result_type > \fBstd::operator-\fP (const valarray< _Tp > &__v, const _Tp &__t)"
.br
.ti -1c
.RI "template<typename _Tp > _Expr< _BinClos< __minus, _ValArray, _ValArray, _Tp, _Tp >, typename __fun< __minus, _Tp >::result_type > \fBstd::operator-\fP (const valarray< _Tp > &__v, const valarray< _Tp > &__w)"
.br
.ti -1c
.RI "template<typename _Tp > _Expr< _BinClos< __divides, _Constant, _ValArray, _Tp, _Tp >, typename __fun< __divides, _Tp >::result_type > \fBstd::operator/\fP (const _Tp &__t, const valarray< _Tp > &__v)"
.br
.ti -1c
.RI "template<typename _Tp > _Expr< _BinClos< __divides, _ValArray, _Constant, _Tp, _Tp >, typename __fun< __divides, _Tp >::result_type > \fBstd::operator/\fP (const valarray< _Tp > &__v, const _Tp &__t)"
.br
.ti -1c
.RI "template<typename _Tp > _Expr< _BinClos< __divides, _ValArray, _ValArray, _Tp, _Tp >, typename __fun< __divides, _Tp >::result_type > \fBstd::operator/\fP (const valarray< _Tp > &__v, const valarray< _Tp > &__w)"
.br
.ti -1c
.RI "template<typename _Tp > _Expr< _BinClos< __less, _Constant, _ValArray, _Tp, _Tp >, typename __fun< __less, _Tp >::result_type > \fBstd::operator<\fP (const _Tp &__t, const valarray< _Tp > &__v)"
.br
.ti -1c
.RI "template<typename _Tp > _Expr< _BinClos< __less, _ValArray, _Constant, _Tp, _Tp >, typename __fun< __less, _Tp >::result_type > \fBstd::operator<\fP (const valarray< _Tp > &__v, const _Tp &__t)"
.br
.ti -1c
.RI "template<typename _Tp > _Expr< _BinClos< __less, _ValArray, _ValArray, _Tp, _Tp >, typename __fun< __less, _Tp >::result_type > \fBstd::operator<\fP (const valarray< _Tp > &__v, const valarray< _Tp > &__w)"
.br
.ti -1c
.RI "template<typename _Tp > _Expr< _BinClos< __shift_left, _Constant, _ValArray, _Tp, _Tp >, typename __fun< __shift_left, _Tp >::result_type > \fBstd::operator<<\fP (const _Tp &__t, const valarray< _Tp > &__v)"
.br
.ti -1c
.RI "template<typename _Tp > _Expr< _BinClos< __shift_left, _ValArray, _Constant, _Tp, _Tp >, typename __fun< __shift_left, _Tp >::result_type > \fBstd::operator<<\fP (const valarray< _Tp > &__v, const _Tp &__t)"
.br
.ti -1c
.RI "template<typename _Tp > _Expr< _BinClos< __shift_left, _ValArray, _ValArray, _Tp, _Tp >, typename __fun< __shift_left, _Tp >::result_type > \fBstd::operator<<\fP (const valarray< _Tp > &__v, const valarray< _Tp > &__w)"
.br
.ti -1c
.RI "template<typename _Tp > _Expr< _BinClos< __less_equal, _Constant, _ValArray, _Tp, _Tp >, typename __fun< __less_equal, _Tp >::result_type > \fBstd::operator<=\fP (const _Tp &__t, const valarray< _Tp > &__v)"
.br
.ti -1c
.RI "template<typename _Tp > _Expr< _BinClos< __less_equal, _ValArray, _Constant, _Tp, _Tp >, typename __fun< __less_equal, _Tp >::result_type > \fBstd::operator<=\fP (const valarray< _Tp > &__v, const _Tp &__t)"
.br
.ti -1c
.RI "template<typename _Tp > _Expr< _BinClos< __less_equal, _ValArray, _ValArray, _Tp, _Tp >, typename __fun< __less_equal, _Tp >::result_type > \fBstd::operator<=\fP (const valarray< _Tp > &__v, const valarray< _Tp > &__w)"
.br
.ti -1c
.RI "template<typename _Tp > _Expr< _BinClos< __equal_to, _Constant, _ValArray, _Tp, _Tp >, typename __fun< __equal_to, _Tp >::result_type > \fBstd::operator==\fP (const _Tp &__t, const valarray< _Tp > &__v)"
.br
.ti -1c
.RI "template<typename _Tp > _Expr< _BinClos< __equal_to, _ValArray, _Constant, _Tp, _Tp >, typename __fun< __equal_to, _Tp >::result_type > \fBstd::operator==\fP (const valarray< _Tp > &__v, const _Tp &__t)"
.br
.ti -1c
.RI "template<typename _Tp > _Expr< _BinClos< __equal_to, _ValArray, _ValArray, _Tp, _Tp >, typename __fun< __equal_to, _Tp >::result_type > \fBstd::operator==\fP (const valarray< _Tp > &__v, const valarray< _Tp > &__w)"
.br
.ti -1c
.RI "template<typename _Tp > _Expr< _BinClos< __greater, _Constant, _ValArray, _Tp, _Tp >, typename __fun< __greater, _Tp >::result_type > \fBstd::operator>\fP (const _Tp &__t, const valarray< _Tp > &__v)"
.br
.ti -1c
.RI "template<typename _Tp > _Expr< _BinClos< __greater, _ValArray, _Constant, _Tp, _Tp >, typename __fun< __greater, _Tp >::result_type > \fBstd::operator>\fP (const valarray< _Tp > &__v, const _Tp &__t)"
.br
.ti -1c
.RI "template<typename _Tp > _Expr< _BinClos< __greater, _ValArray, _ValArray, _Tp, _Tp >, typename __fun< __greater, _Tp >::result_type > \fBstd::operator>\fP (const valarray< _Tp > &__v, const valarray< _Tp > &__w)"
.br
.ti -1c
.RI "template<typename _Tp > _Expr< _BinClos< __greater_equal, _Constant, _ValArray, _Tp, _Tp >, typename __fun< __greater_equal, _Tp >::result_type > \fBstd::operator>=\fP (const _Tp &__t, const valarray< _Tp > &__v)"
.br
.ti -1c
.RI "template<typename _Tp > _Expr< _BinClos< __greater_equal, _ValArray, _Constant, _Tp, _Tp >, typename __fun< __greater_equal, _Tp >::result_type > \fBstd::operator>=\fP (const valarray< _Tp > &__v, const _Tp &__t)"
.br
.ti -1c
.RI "template<typename _Tp > _Expr< _BinClos< __greater_equal, _ValArray, _ValArray, _Tp, _Tp >, typename __fun< __greater_equal, _Tp >::result_type > \fBstd::operator>=\fP (const valarray< _Tp > &__v, const valarray< _Tp > &__w)"
.br
.ti -1c
.RI "template<typename _Tp > _Expr< _BinClos< __shift_right, _Constant, _ValArray, _Tp, _Tp >, typename __fun< __shift_right, _Tp >::result_type > \fBstd::operator>>\fP (const _Tp &__t, const valarray< _Tp > &__v)"
.br
.ti -1c
.RI "template<typename _Tp > _Expr< _BinClos< __shift_right, _ValArray, _Constant, _Tp, _Tp >, typename __fun< __shift_right, _Tp >::result_type > \fBstd::operator>>\fP (const valarray< _Tp > &__v, const _Tp &__t)"
.br
.ti -1c
.RI "template<typename _Tp > _Expr< _BinClos< __shift_right, _ValArray, _ValArray, _Tp, _Tp >, typename __fun< __shift_right, _Tp >::result_type > \fBstd::operator>>\fP (const valarray< _Tp > &__v, const valarray< _Tp > &__w)"
.br
.ti -1c
.RI "template<typename _Tp > _Expr< _BinClos< __bitwise_xor, _Constant, _ValArray, _Tp, _Tp >, typename __fun< __bitwise_xor, _Tp >::result_type > \fBstd::operator^\fP (const _Tp &__t, const valarray< _Tp > &__v)"
.br
.ti -1c
.RI "template<typename _Tp > _Expr< _BinClos< __bitwise_xor, _ValArray, _Constant, _Tp, _Tp >, typename __fun< __bitwise_xor, _Tp >::result_type > \fBstd::operator^\fP (const valarray< _Tp > &__v, const _Tp &__t)"
.br
.ti -1c
.RI "template<typename _Tp > _Expr< _BinClos< __bitwise_xor, _ValArray, _ValArray, _Tp, _Tp >, typename __fun< __bitwise_xor, _Tp >::result_type > \fBstd::operator^\fP (const valarray< _Tp > &__v, const valarray< _Tp > &__w)"
.br
.ti -1c
.RI "template<typename _Tp > _Expr< _BinClos< __bitwise_or, _Constant, _ValArray, _Tp, _Tp >, typename __fun< __bitwise_or, _Tp >::result_type > \fBstd::operator|\fP (const _Tp &__t, const valarray< _Tp > &__v)"
.br
.ti -1c
.RI "template<typename _Tp > _Expr< _BinClos< __bitwise_or, _ValArray, _Constant, _Tp, _Tp >, typename __fun< __bitwise_or, _Tp >::result_type > \fBstd::operator|\fP (const valarray< _Tp > &__v, const _Tp &__t)"
.br
.ti -1c
.RI "template<typename _Tp > _Expr< _BinClos< __bitwise_or, _ValArray, _ValArray, _Tp, _Tp >, typename __fun< __bitwise_or, _Tp >::result_type > \fBstd::operator|\fP (const valarray< _Tp > &__v, const valarray< _Tp > &__w)"
.br
.ti -1c
.RI "template<typename _Tp > _Expr< _BinClos< __logical_or, _Constant, _ValArray, _Tp, _Tp >, typename __fun< __logical_or, _Tp >::result_type > \fBstd::operator||\fP (const _Tp &__t, const valarray< _Tp > &__v)"
.br
.ti -1c
.RI "template<typename _Tp > _Expr< _BinClos< __logical_or, _ValArray, _Constant, _Tp, _Tp >, typename __fun< __logical_or, _Tp >::result_type > \fBstd::operator||\fP (const valarray< _Tp > &__v, const _Tp &__t)"
.br
.ti -1c
.RI "template<typename _Tp > _Expr< _BinClos< __logical_or, _ValArray, _ValArray, _Tp, _Tp >, typename __fun< __logical_or, _Tp >::result_type > \fBstd::operator||\fP (const valarray< _Tp > &__v, const valarray< _Tp > &__w)"
.br
.in -1c
.SH "Detailed Description"
.PP 
This is a Standard C++ Library header. 
.PP
Definition in file \fBvalarray\fP.
.SH "Author"
.PP 
Generated automatically by Doxygen for libstdc++ from the source code.
