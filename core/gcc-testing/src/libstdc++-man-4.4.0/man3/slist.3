.TH "slist" 3 "21 Apr 2009" "libstdc++" \" -*- nroff -*-
.ad l
.nh
.SH NAME
slist \- 
.SH SYNOPSIS
.br
.PP
.SS "Classes"

.in +1c
.ti -1c
.RI "class \fB__gnu_cxx::slist< _Tp, _Alloc >\fP"
.br
.in -1c
.SS "Namespaces"

.in +1c
.ti -1c
.RI "namespace \fB__gnu_cxx\fP"
.br
.ti -1c
.RI "namespace \fBstd\fP"
.br
.in -1c
.SS "Defines"

.in +1c
.ti -1c
.RI "#define \fB_SLIST\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "_Slist_node_base * \fB__gnu_cxx::__slist_make_link\fP (_Slist_node_base *__prev_node, _Slist_node_base *__new_node)"
.br
.ti -1c
.RI "const _Slist_node_base * \fB__gnu_cxx::__slist_previous\fP (const _Slist_node_base *__head, const _Slist_node_base *__node)"
.br
.ti -1c
.RI "_Slist_node_base * \fB__gnu_cxx::__slist_previous\fP (_Slist_node_base *__head, const _Slist_node_base *__node)"
.br
.ti -1c
.RI "_Slist_node_base * \fB__gnu_cxx::__slist_reverse\fP (_Slist_node_base *__node)"
.br
.ti -1c
.RI "size_t \fB__gnu_cxx::__slist_size\fP (_Slist_node_base *__node)"
.br
.ti -1c
.RI "void \fB__gnu_cxx::__slist_splice_after\fP (_Slist_node_base *__pos, _Slist_node_base *__head)"
.br
.ti -1c
.RI "void \fB__gnu_cxx::__slist_splice_after\fP (_Slist_node_base *__pos, _Slist_node_base *__before_first, _Slist_node_base *__before_last)"
.br
.ti -1c
.RI "template<class _Tp , class _Alloc > bool \fB__gnu_cxx::operator!=\fP (const slist< _Tp, _Alloc > &_SL1, const slist< _Tp, _Alloc > &_SL2)"
.br
.ti -1c
.RI "template<class _Tp , class _Alloc > bool \fB__gnu_cxx::operator<\fP (const slist< _Tp, _Alloc > &_SL1, const slist< _Tp, _Alloc > &_SL2)"
.br
.ti -1c
.RI "template<class _Tp , class _Alloc > bool \fB__gnu_cxx::operator<=\fP (const slist< _Tp, _Alloc > &_SL1, const slist< _Tp, _Alloc > &_SL2)"
.br
.ti -1c
.RI "template<class _Tp , class _Alloc > bool \fB__gnu_cxx::operator==\fP (const slist< _Tp, _Alloc > &_SL1, const slist< _Tp, _Alloc > &_SL2)"
.br
.ti -1c
.RI "template<class _Tp , class _Alloc > bool \fB__gnu_cxx::operator>\fP (const slist< _Tp, _Alloc > &_SL1, const slist< _Tp, _Alloc > &_SL2)"
.br
.ti -1c
.RI "template<class _Tp , class _Alloc > bool \fB__gnu_cxx::operator>=\fP (const slist< _Tp, _Alloc > &_SL1, const slist< _Tp, _Alloc > &_SL2)"
.br
.ti -1c
.RI "template<class _Tp , class _Alloc > void \fB__gnu_cxx::swap\fP (slist< _Tp, _Alloc > &__x, slist< _Tp, _Alloc > &__y)"
.br
.in -1c
.SH "Detailed Description"
.PP 
This file is a GNU extension to the Standard C++ Library (possibly containing extensions from the HP/SGI STL subset). 
.PP
Definition in file \fBslist\fP.
.SH "Author"
.PP 
Generated automatically by Doxygen for libstdc++ from the source code.
