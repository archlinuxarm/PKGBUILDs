From 10aca71d77b1f3ef917377ce2027c3bd4d51ac56 Mon Sep 17 00:00:00 2001
From: Ronny Lorenz <ronny@tbi.univie.ac.at>
Date: Wed, 9 Dec 2015 18:06:12 +0100
Subject: [PATCH 08/14] zd1201: drop the node parameter from the hlist
 iterators

This fixes the problem of drivers/net/wireless-3.8/zd1201.c
passing too many arguments to hlist_for_each_entry(). The
hlist iterator macro was changed upstream, but the changes
were not applied to the drivers/net/wireless-3.8/ subdirectory
in chromeos-3.10 branch yet.

See also commit b67bfe0d42cac56c512dd5da4b1b347a23f4b70a in
git://git.kernel.org/pub/scm/linux/kernel/git/stable/linux-stable.git

(cheery picked from b67bfe0d42cac56c512dd5da4b1b347a23f4b70a)
Signed-off-by: Ronny Lorenz <ronny@tbi.univie.ac.at>
---
 drivers/net/wireless-3.8/zd1201.c | 7 +++----
 1 file changed, 3 insertions(+), 4 deletions(-)

diff --git a/drivers/net/wireless-3.8/zd1201.c b/drivers/net/wireless-3.8/zd1201.c
index 48273dd..4941f20 100644
--- a/drivers/net/wireless-3.8/zd1201.c
+++ b/drivers/net/wireless-3.8/zd1201.c
@@ -309,7 +309,6 @@ static void zd1201_usbrx(struct urb *urb)
 	if (data[urb->actual_length-1] == ZD1201_PACKET_RXDATA) {
 		int datalen = urb->actual_length-1;
 		unsigned short len, fc, seq;
-		struct hlist_node *node;
 
 		len = ntohs(*(__be16 *)&data[datalen-2]);
 		if (len>datalen)
@@ -362,7 +361,7 @@ static void zd1201_usbrx(struct urb *urb)
 				hlist_add_head(&frag->fnode, &zd->fraglist);
 				goto resubmit;
 			}
-			hlist_for_each_entry(frag, node, &zd->fraglist, fnode)
+			hlist_for_each_entry(frag, &zd->fraglist, fnode)
 				if (frag->seq == (seq&IEEE80211_SCTL_SEQ))
 					break;
 			if (!frag)
@@ -1831,14 +1830,14 @@ err_zd:
 static void zd1201_disconnect(struct usb_interface *interface)
 {
 	struct zd1201 *zd = usb_get_intfdata(interface);
-	struct hlist_node *node, *node2;
+	struct hlist_node *node2;
 	struct zd1201_frag *frag;
 
 	if (!zd)
 		return;
 	usb_set_intfdata(interface, NULL);
 
-	hlist_for_each_entry_safe(frag, node, node2, &zd->fraglist, fnode) {
+	hlist_for_each_entry_safe(frag, node2, &zd->fraglist, fnode) {
 		hlist_del_init(&frag->fnode);
 		kfree_skb(frag->skb);
 		kfree(frag);
-- 
2.8.3

