pkgname=glipper

post_install() {
  export GCONF_CONFIG_SOURCE=`usr/bin/gconftool-2 --get-default-source`
  /usr/bin/gconftool-2 --makefile-install-rule usr/share/gconf/schemas/${pkgname}.schemas >/dev/null
  /usr/bin/gtk-update-icon-cache -q -t -f /usr/share/icons/hicolor
}

pre_upgrade() {
  echo "If you use Gnome, read http://glipper.sourceforge.net/ and remove ~/.glipper"
  echo "If you don't use Gnome, use glipper-old package"
  /bin/true
}

post_upgrade() {
  /usr/bin/gtk-update-icon-cache -q -t -f /usr/share/icons/hicolor
}

pre_remove() {
  if [ -f usr/share/gconf/schemas/${pkgname}.schemas ]; then
    schemas=(usr/share/gconf/schemas/${pkgname}.schemas)
  elif [ -f opt/gnome/share/gconf/schemas/${pkgname}.schemas ]; then
    schemas=(opt/gnome/share/gconf/schemas/${pkgname}.schemas)
  else
    schemas=(`pacman -Ql $pkgname | grep 'gconf/schemas/.*schemas$' | awk '{ print $2 }'`)
  fi
  export GCONF_CONFIG_SOURCE=`usr/bin/gconftool-2 --get-default-source`
  usr/bin/gconftool-2 --makefile-uninstall-rule ${schemas[@]} >/dev/null
}

op=$1
shift
[ "$(type -t "$op")" = "function" ] && $op "$@"
