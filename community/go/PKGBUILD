# $Id: PKGBUILD 86967 2013-03-25 13:19:54Z arodseth $
# Maintainer: Vesa Kaihlavirta <vegai@iki.fi>
# Maintainer: Alexander Rødseth <rodseth@gmail.com>
# Contributor: Rémy Oudompheng  <remy@archlinux.org>
# Contributor: Andres Perera <andres87p gmail>
# Contributor: Matthew Bauer <mjbauer95@gmail.com>
# Contributor: Christian Himpel <chressie@gmail.com>
# Contributor: Mike Rosset <mike.rosset@gmail.com>
# Contributor: Daniel YC Lin <dlin.tw@gmail.com>

# ALARM: Kevin Mihelich <kevin@archlinuxarm.org>
#  - added switches for our architectures
# ALARM: Alexander Rødseth <rodseth@gmail.com>
#  - Go 1.1beta2 support

pkgname=go
pkgver=1.2
pkgrel=3
epoch=2
pkgdesc='Compiler and tools for the Go programming language from Google'
url='http://golang.org/'
license=('custom')
depends=('perl' 'gawk')
makedepends=('inetutils')
options=('!strip' 'staticlibs')
optdepends=('liteide: IDE for editing and building projects written in Go'
            'mercurial: Version control system written in Python'
            'git: Version control system written in C')
install="$pkgname.install"
backup=('usr/lib/go/bin')
source=("http://go.googlecode.com/files/${pkgname}$pkgver.src.tar.gz"
        'go.sh')
sha256sums=('9ab83fb8eafe39f4204ef0f8e84e5ff7e8f1d533ddb05f51e6dc81503e8c0ae4'
            'b6209904c88bde96efcac846c267e308e4dc39c8a45f2690204c2175de4b9b0a')

build() {
  cd "$pkgname/src"

  [ "$CARCH" == 'arm' ] && export GOARM=5
  [ "$CARCH" == 'armv6h' ] && export GOARM=6
  [ "$CARCH" == 'armv7h' ] && export GOARM=7

  export GOARCH=arm
  export GOROOT_FINAL=/usr/lib/go
  export GOOS=linux

  bash make.bash
}

check() {
  cd "$pkgname"

  [ "$CARCH" == 'arm' ] && export GOARM=5
  [ "$CARCH" == 'armv6h' ] && export GOARM=6
  [ "$CARCH" == 'armv7h' ] && export GOARM=7

  export GOARCH=arm
  export GOROOT="$srcdir/$pkgname"
  export PATH="$srcdir/$pkgname/bin:$PATH"

  # TestSimpleMulticastListener will fail in standard chroot
  cd src && bash run.bash --no-rebuild || true
}

package() {
  cd "$pkgname"

  export GOROOT="$srcdir/$pkgname"

  install -Dm644 LICENSE \
    "$pkgdir/usr/share/licenses/go/LICENSE"
  install -Dm644 misc/bash/go \
    "$pkgdir/usr/share/bash-completion/completions/go"
  install -Dm644 misc/emacs/go-mode-load.el \
    "$pkgdir/usr/share/emacs/site-lisp/go-mode-load.el"
  install -Dm644 misc/emacs/go-mode.el \
    "$pkgdir/usr/share/emacs/site-lisp/go-mode.el"
  install -Dm644 misc/zsh/go \
    "$pkgdir/usr/share/zsh/site-functions/_go"

  for f in ftdetect/gofiletype.vim autoload/go/complete.vim indent/go.vim \
    ftplugin/go/fmt.vim ftplugin/go/import.vim \
    syntax/go.vim syntax/godoc.vim plugin/godoc.vim;
  do
    install -Dm644 "misc/vim/$f" "$pkgdir/usr/share/vim/vimfiles/$f"
  done

  mkdir -p \
    "$pkgdir/"{etc/profile.d,usr/{share/go,lib/go,lib/go/src,lib/go/site/src}}

  cp -r doc misc -t "$pkgdir/usr/share/go"
  ln -s /usr/share/go/doc "$pkgdir/usr/lib/go/doc"
  cp -a bin "$pkgdir/usr"
  cp -a pkg "$pkgdir/usr/lib/go"
  cp -a $GOROOT/src/pkg "$pkgdir/usr/lib/go/src/"
  cp -a $GOROOT/src/cmd "$pkgdir/usr/lib/go/src/cmd"
  cp -a $GOROOT/src/lib9 "$pkgdir/usr/lib/go/src/"
  cp -a $GOROOT/lib "$pkgdir/usr/lib/go/"
  cp -a $GOROOT/include "$pkgdir/usr/lib/go/"

  install -Dm644 src/Make.* "$pkgdir/usr/lib/go/src"

  # Remove object files from target src dir
  find "$pkgdir/usr/lib/go/src/" -type f -name '*.[ao]' -delete

  # Fix for FS#32813
  find "$pkgdir" -type f -name sql.go -exec chmod -x {} \;
  
  # Remove all executable source files
  find "$pkgdir/usr/lib/go/src/pkg" -type f -executable -delete

  # Headers for C modules
  install -Dm644 src/pkg/runtime/runtime.h \
    "$pkgdir/usr/lib/go/src/pkg/runtime/runtime.h"
  install -Dm644 src/pkg/runtime/cgocall.h \
    "$pkgdir/usr/lib/go/src/pkg/runtime/cgocall.h"

  # In order to make godoc work, see FS#38597
  install -Dm755 "$srcdir/$pkgname.sh" "$pkgdir/etc/profile.d/$pkgname.sh"

  # This is to make go get code.google.com/p/go-tour/gotour and
  # then running the gotour executable work out of the box.
  ln -sf /usr/bin "$pkgdir/usr/lib/go/bin"

  # For godoc
  install -Dm644 favicon.ico "$pkgdir/usr/lib/go/favicon.ico"

  rm -f "$pkgdir/usr/share/go/doc/articles/wiki/get.bin"

  install -Dm644 VERSION "$pkgdir/usr/lib/go/VERSION"
  
  find "$pkgdir/usr/"{lib/go/pkg,bin} -type f -exec touch '{}' +
}
# vim:set ts=2 sw=2 et:
