# $Id: PKGBUILD 86967 2013-03-25 13:19:54Z arodseth $
# Maintainer: Vesa Kaihlavirta <vegai@iki.fi>
# Maintainer: Alexander Rødseth <rodseth@gmail.com>
# Contributor: Rémy Oudompheng  <remy@archlinux.org>
# Contributor: Andres Perera <andres87p gmail>
# Contributor: Matthew Bauer <mjbauer95@gmail.com>
# Contributor: Christian Himpel <chressie@gmail.com>
# Contributor: Mike Rosset <mike.rosset@gmail.com>
# Contributor: Daniel YC Lin <dlin.tw@gmail.com>
# Contributor: John Luebs <jkluebs@gmail.com>
# Contributor: Pierre Neidhardt <ambrevar@gmail.com>

# ALARM: Kevin Mihelich <kevin@archlinuxarm.org>
#  - added switches for our architectures
#  - cherry-pick upstream commit to fix multiple definition linker error
#    https://github.com/golang/go/issues/9510

pkgname=go
epoch=2
pkgver=1.5.3
pkgrel=1
pkgdesc='Compiler and tools for the Go programming language from Google'
arch=('arm' 'armv6h' 'armv7h' 'aarch64')
url='http://golang.org/'
license=('BSD')
makedepends=('inetutils' 'git' 'go')
options=('!strip' 'staticlibs')
optdepends=('mercurial: for fetching sources from mercurial repositories'
            'git: for fetching sources from git repositories'
            'bzr: for fetching sources from bazaar repositories'
            'subversion: for fetching sources from subversion repositories')
install="$pkgname.install"
source=("$pkgname-$pkgver::git+https://go.googlesource.com/go#tag=$pkgname$pkgver")
md5sums=('SKIP')

prepare() {
  cd "$pkgname-$pkgver/src"
  git cherry-pick -n 754f707f5f6b870892b78814bac4f90086312039
}

build() {
  cd "$pkgname-$pkgver/src"

  export GOARCH=arm
  [ "$CARCH" == 'arm' ] && export GOARM=5
  [ "$CARCH" == 'armv6h' ] && export GOARM=6
  [ "$CARCH" == 'armv7h' ] && export GOARM=7
  [ "$CARCH" == 'aarch64' ] && export GOARCH=arm64

  export GOROOT_FINAL=/usr/lib/go
  export GOROOT_BOOTSTRAP=/usr/lib/go
  export GOOS=linux
  export GOPATH="$srcdir/"
  export GOROOT="$srcdir/$pkgname-$pkgver"
  export GOBIN="$GOROOT/bin"

  bash make.bash

  $GOROOT/bin/go get -d golang.org/x/tools/cmd/godoc
  $GOROOT/bin/go build -o $srcdir/godoc golang.org/x/tools/cmd/godoc
  for tool in vet cover callgraph; do
    $GOROOT/bin/go get -d golang.org/x/tools/cmd/${tool}
    $GOROOT/bin/go build -o $GOROOT/pkg/tool/${GOOS}_${GOARCH}/${tool} golang.org/x/tools/cmd/${tool}
  done
}

check() {
  cd "$pkgname-$pkgver"

  export GOARCH=arm
  [ "$CARCH" == 'arm' ] && export GOARM=5
  [ "$CARCH" == 'armv6h' ] && export GOARM=6
  [ "$CARCH" == 'armv7h' ] && export GOARM=7
  [ "$CARCH" == 'aarch64' ] && export GOARCH=arm64

  export GOROOT="$srcdir/$pkgname-$pkgver"
  export GOBIN="$GOROOT/bin"
  export PATH="$srcdir/$pkgname-$pkgver/bin:$PATH"
  export GOROOT_BOOTSTRAP=/usr/lib/go

  # TestSimpleMulticastListener will fail in standard chroot
  cd src && bash run.bash --no-rebuild || true
}

package() {
  cd "$pkgname-$pkgver"

  export GOROOT="$srcdir/$pkgname-$pkgver"
  export GOBIN="$GOROOT/bin"
  export GOROOT_BOOTSTRAP=/usr/lib/go

  install -Dm755 "$srcdir/godoc" "$pkgdir/usr/bin/godoc"

  install -Dm644 LICENSE \
    "$pkgdir/usr/share/licenses/go/LICENSE"

  mkdir -p \
    "$pkgdir/usr/"{share/go,lib/go,lib/go/src,lib/go/site/src}

  cp -r doc misc -t "$pkgdir/usr/share/go"
  ln -s /usr/share/go/doc "$pkgdir/usr/lib/go/doc"
  cp -a bin "$pkgdir/usr"
  cp -a pkg "$pkgdir/usr/lib/go"
  cp -a "$GOROOT/src" "$pkgdir/usr/lib/go/"
  cp -a "$GOROOT/lib" "$pkgdir/usr/lib/go/"

  # This is to make go get code.google.com/p/go-tour/gotour and
  # then running the gotour executable work out of the box.
  ln -sf /usr/bin "$pkgdir/usr/lib/go/bin"

  cp -r misc/ "$pkgdir/usr/lib/go/"

  # For godoc
  install -Dm644 favicon.ico "$pkgdir/usr/lib/go/favicon.ico"

  install -Dm644 VERSION "$pkgdir/usr/lib/go/VERSION"

  # Clean Windows specific files.
  rm -f "$pkgdir"/usr/lib/go/src/*.bat
}

# vim:set ts=2 sw=2 et:
