class:: LatoocarfianL
summary:: Latoocarfian chaotic generator
categories:: UGens>Generators>Chaotic
related:: Classes/LatoocarfianC, Classes/LatoocarfianN

description::
A linear-interpolating sound generator based on a function given in Clifford Pickover's book Chaos In Wonderland, pg 26. The function is:

code::
	x[n+1] = sin(b * y[n]) + c * sin(b * x[n])
	y[n+1] = sin(a * y[n]) + d * sin(a * x[n])
::
warning:: revise formulae conversion to c like code ::

According to Pickover, parameters code::a:: and code::b:: should be in the range from -3 to +3, and parameters code::c:: and code::d:: should be in the range from 0.5 to 1.5. The function can, depending on the parameters given, give continuous chaotic output, converge to a single value (silence) or oscillate in a cycle (tone).

note::This UGen is experimental and not optimized currently, so is rather hoggish of CPU.::

classmethods::
method:: ar
argument:: freq
Iteration frequency in Hertz
argument:: a
Equation variable
argument:: b
Equation variable
argument:: c
Equation variable
argument:: d
Equation variable
argument:: xi
Initial value of x
argument:: yi
Initial value of y

examples::
code::
// default initial params
{ LatoocarfianL.ar(MouseX.kr(20, SampleRate.ir)) * 0.2 }.play(s);
::

code::
// randomly modulate all params
(
{ LatoocarfianL.ar(
	SampleRate.ir/4,
	LFNoise2.kr(2,1.5,1.5),
	LFNoise2.kr(2,1.5,1.5),
	LFNoise2.kr(2,0.5,1.5),
	LFNoise2.kr(2,0.5,1.5)
) * 0.2 }.play(s);
)
::
