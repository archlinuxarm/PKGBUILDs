--- beast-0.7.1.orig/birnet/birnetmsg.cc	2006-11-20 22:31:27.000000000 -0300
+++ beast-0.7.1/birnet/birnetmsg.cc	2009-05-31 19:13:02.000000000 -0300
@@ -21,6 +21,8 @@
 #include "birnetthread.hh"
 #include <syslog.h>
 #include <errno.h>
+#include <cstdio>
+#include <cstring>
 
 #ifndef _ // FIXME
 #define _(x)    (x)
--- beast-0.7.1.orig/birnet/birnetsignal.hh	2006-10-06 18:57:38.000000000 -0300
+++ beast-0.7.1/birnet/birnetsignal.hh	2009-05-31 19:17:06.000000000 -0300
@@ -435,7 +435,7 @@
 /* --- predefined signals --- */
 template<class Emitter>
 struct SignalFinalize : Signal0 <Emitter, void, ScopeReferenceFinalizationMark> {
-  typedef Signal0<Emitter, void, ScopeReferenceFinalizationMark> Signal0;
+  typedef Birnet::Signals::Signal0<Emitter, void, ScopeReferenceFinalizationMark> Signal0;
   explicit SignalFinalize (Emitter &emitter)                             : Signal0 (emitter) {}
   explicit SignalFinalize (Emitter &emitter, void (Emitter::*method) ()) : Signal0 (emitter, method) {}
   BIRNET_PRIVATE_CLASS_COPY (SignalFinalize);
@@ -443,7 +443,7 @@
 
 template<class Emitter>
 struct SignalVoid : Signal0 <Emitter, void> {
-  typedef Signal0<Emitter, void> Signal0;
+	typedef Birnet::Signals::Signal0<Emitter, void> Signal0;
   explicit SignalVoid (Emitter &emitter)                                 : Signal0 (emitter) {}
   explicit SignalVoid (Emitter &emitter, void (Emitter::*method) (void)) : Signal0 (emitter, method) {}
   BIRNET_PRIVATE_CLASS_COPY (SignalVoid);
--- beast-0.7.1.orig/birnet/birnetsignaltemplate.hh	2006-10-03 20:12:43.000000000 -0300
+++ beast-0.7.1/birnet/birnetsignaltemplate.hh	2009-05-31 19:17:06.000000000 -0300
@@ -165,7 +165,7 @@
 template<class Emitter, typename R0, typename A1, typename A2, typename A3, class Collector>
 struct Signal<Emitter, R0 (A1, A2, A3), Collector> : Signal3<Emitter, R0, A1, A2, A3, Collector>
 {
-  typedef Signal3<Emitter, R0, A1, A2, A3, Collector> Signal3;
+  typedef Birnet::Signals::Signal3<Emitter, R0, A1, A2, A3, Collector> Signal3;
   explicit Signal (Emitter &emitter) :
     Signal3 (emitter)
     {}
--- beast-0.7.1.orig/birnet/birnetsignalvariants.hh	2006-12-23 17:12:16.000000000 -0300
+++ beast-0.7.1/birnet/birnetsignalvariants.hh	2009-05-31 19:17:10.000000000 -0300
@@ -2815,7 +2815,7 @@
 template<class Emitter, typename R0, typename A1, typename A2, typename A3, class Collector>
 struct Signal<Emitter, R0 (A1, A2, A3), Collector> : Signal3<Emitter, R0, A1, A2, A3, Collector>
 {
-  typedef Signal3<Emitter, R0, A1, A2, A3, Collector> Signal3;
+  typedef Birnet::Signals::Signal3<Emitter, R0, A1, A2, A3, Collector> Signal3;
   explicit Signal (Emitter &emitter) :
     Signal3 (emitter)
     {}
@@ -2994,7 +2994,7 @@
 template<class Emitter, typename R0, class Collector>
 struct Signal<Emitter, R0 (), Collector> : Signal0<Emitter, R0, Collector>
 {
-  typedef Signal0<Emitter, R0, Collector> Signal0;
+  typedef Birnet::Signals::Signal0<Emitter, R0, Collector> Signal0;
   explicit Signal (Emitter &emitter) :
     Signal0 (emitter)
     {}
@@ -3173,7 +3173,7 @@
 template<class Emitter, typename R0, typename A1, class Collector>
 struct Signal<Emitter, R0 (A1), Collector> : Signal1<Emitter, R0, A1, Collector>
 {
-  typedef Signal1<Emitter, R0, A1, Collector> Signal1;
+  typedef Birnet::Signals::Signal1<Emitter, R0, A1, Collector> Signal1;
   explicit Signal (Emitter &emitter) :
     Signal1 (emitter)
     {}
@@ -3352,7 +3352,7 @@
 template<class Emitter, typename R0, typename A1, typename A2, class Collector>
 struct Signal<Emitter, R0 (A1, A2), Collector> : Signal2<Emitter, R0, A1, A2, Collector>
 {
-  typedef Signal2<Emitter, R0, A1, A2, Collector> Signal2;
+  typedef Birnet::Signals::Signal2<Emitter, R0, A1, A2, Collector> Signal2;
   explicit Signal (Emitter &emitter) :
     Signal2 (emitter)
     {}
@@ -3531,7 +3531,7 @@
 template<class Emitter, typename R0, typename A1, typename A2, typename A3, typename A4, class Collector>
 struct Signal<Emitter, R0 (A1, A2, A3, A4), Collector> : Signal4<Emitter, R0, A1, A2, A3, A4, Collector>
 {
-  typedef Signal4<Emitter, R0, A1, A2, A3, A4, Collector> Signal4;
+  typedef Birnet::Signals::Signal4<Emitter, R0, A1, A2, A3, A4, Collector> Signal4;
   explicit Signal (Emitter &emitter) :
     Signal4 (emitter)
     {}
@@ -3710,7 +3710,7 @@
 template<class Emitter, typename R0, typename A1, typename A2, typename A3, typename A4, typename A5, class Collector>
 struct Signal<Emitter, R0 (A1, A2, A3, A4, A5), Collector> : Signal5<Emitter, R0, A1, A2, A3, A4, A5, Collector>
 {
-  typedef Signal5<Emitter, R0, A1, A2, A3, A4, A5, Collector> Signal5;
+  typedef Birnet::Signals::Signal5<Emitter, R0, A1, A2, A3, A4, A5, Collector> Signal5;
   explicit Signal (Emitter &emitter) :
     Signal5 (emitter)
     {}
@@ -3889,7 +3889,7 @@
 template<class Emitter, typename R0, typename A1, typename A2, typename A3, typename A4, typename A5, typename A6, class Collector>
 struct Signal<Emitter, R0 (A1, A2, A3, A4, A5, A6), Collector> : Signal6<Emitter, R0, A1, A2, A3, A4, A5, A6, Collector>
 {
-  typedef Signal6<Emitter, R0, A1, A2, A3, A4, A5, A6, Collector> Signal6;
+  typedef Birnet::Signals::Signal6<Emitter, R0, A1, A2, A3, A4, A5, A6, Collector> Signal6;
   explicit Signal (Emitter &emitter) :
     Signal6 (emitter)
     {}
@@ -4068,7 +4068,7 @@
 template<class Emitter, typename R0, typename A1, typename A2, typename A3, typename A4, typename A5, typename A6, typename A7, class Collector>
 struct Signal<Emitter, R0 (A1, A2, A3, A4, A5, A6, A7), Collector> : Signal7<Emitter, R0, A1, A2, A3, A4, A5, A6, A7, Collector>
 {
-  typedef Signal7<Emitter, R0, A1, A2, A3, A4, A5, A6, A7, Collector> Signal7;
+  typedef Birnet::Signals::Signal7<Emitter, R0, A1, A2, A3, A4, A5, A6, A7, Collector> Signal7;
   explicit Signal (Emitter &emitter) :
     Signal7 (emitter)
     {}
@@ -4247,7 +4247,7 @@
 template<class Emitter, typename R0, typename A1, typename A2, typename A3, typename A4, typename A5, typename A6, typename A7, typename A8, class Collector>
 struct Signal<Emitter, R0 (A1, A2, A3, A4, A5, A6, A7, A8), Collector> : Signal8<Emitter, R0, A1, A2, A3, A4, A5, A6, A7, A8, Collector>
 {
-  typedef Signal8<Emitter, R0, A1, A2, A3, A4, A5, A6, A7, A8, Collector> Signal8;
+  typedef Birnet::Signals::Signal8<Emitter, R0, A1, A2, A3, A4, A5, A6, A7, A8, Collector> Signal8;
   explicit Signal (Emitter &emitter) :
     Signal8 (emitter)
     {}
@@ -4426,7 +4426,7 @@
 template<class Emitter, typename R0, typename A1, typename A2, typename A3, typename A4, typename A5, typename A6, typename A7, typename A8, typename A9, class Collector>
 struct Signal<Emitter, R0 (A1, A2, A3, A4, A5, A6, A7, A8, A9), Collector> : Signal9<Emitter, R0, A1, A2, A3, A4, A5, A6, A7, A8, A9, Collector>
 {
-  typedef Signal9<Emitter, R0, A1, A2, A3, A4, A5, A6, A7, A8, A9, Collector> Signal9;
+  typedef Birnet::Signals::Signal9<Emitter, R0, A1, A2, A3, A4, A5, A6, A7, A8, A9, Collector> Signal9;
   explicit Signal (Emitter &emitter) :
     Signal9 (emitter)
     {}
@@ -4605,7 +4605,7 @@
 template<class Emitter, typename R0, typename A1, typename A2, typename A3, typename A4, typename A5, typename A6, typename A7, typename A8, typename A9, typename A10, class Collector>
 struct Signal<Emitter, R0 (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10), Collector> : Signal10<Emitter, R0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, Collector>
 {
-  typedef Signal10<Emitter, R0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, Collector> Signal10;
+  typedef Birnet::Signals::Signal10<Emitter, R0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, Collector> Signal10;
   explicit Signal (Emitter &emitter) :
     Signal10 (emitter)
     {}
@@ -4784,7 +4784,7 @@
 template<class Emitter, typename R0, typename A1, typename A2, typename A3, typename A4, typename A5, typename A6, typename A7, typename A8, typename A9, typename A10, typename A11, class Collector>
 struct Signal<Emitter, R0 (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11), Collector> : Signal11<Emitter, R0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, Collector>
 {
-  typedef Signal11<Emitter, R0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, Collector> Signal11;
+  typedef Birnet::Signals::Signal11<Emitter, R0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, Collector> Signal11;
   explicit Signal (Emitter &emitter) :
     Signal11 (emitter)
     {}
@@ -4963,7 +4963,7 @@
 template<class Emitter, typename R0, typename A1, typename A2, typename A3, typename A4, typename A5, typename A6, typename A7, typename A8, typename A9, typename A10, typename A11, typename A12, class Collector>
 struct Signal<Emitter, R0 (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12), Collector> : Signal12<Emitter, R0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, Collector>
 {
-  typedef Signal12<Emitter, R0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, Collector> Signal12;
+  typedef Birnet::Signals::Signal12<Emitter, R0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, Collector> Signal12;
   explicit Signal (Emitter &emitter) :
     Signal12 (emitter)
     {}
@@ -5142,7 +5142,7 @@
 template<class Emitter, typename R0, typename A1, typename A2, typename A3, typename A4, typename A5, typename A6, typename A7, typename A8, typename A9, typename A10, typename A11, typename A12, typename A13, class Collector>
 struct Signal<Emitter, R0 (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13), Collector> : Signal13<Emitter, R0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, Collector>
 {
-  typedef Signal13<Emitter, R0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, Collector> Signal13;
+  typedef Birnet::Signals::Signal13<Emitter, R0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, Collector> Signal13;
   explicit Signal (Emitter &emitter) :
     Signal13 (emitter)
     {}
@@ -5321,7 +5321,7 @@
 template<class Emitter, typename R0, typename A1, typename A2, typename A3, typename A4, typename A5, typename A6, typename A7, typename A8, typename A9, typename A10, typename A11, typename A12, typename A13, typename A14, class Collector>
 struct Signal<Emitter, R0 (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14), Collector> : Signal14<Emitter, R0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, Collector>
 {
-  typedef Signal14<Emitter, R0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, Collector> Signal14;
+  typedef Birnet::Signals::Signal14<Emitter, R0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, Collector> Signal14;
   explicit Signal (Emitter &emitter) :
     Signal14 (emitter)
     {}
@@ -5500,7 +5500,7 @@
 template<class Emitter, typename R0, typename A1, typename A2, typename A3, typename A4, typename A5, typename A6, typename A7, typename A8, typename A9, typename A10, typename A11, typename A12, typename A13, typename A14, typename A15, class Collector>
 struct Signal<Emitter, R0 (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15), Collector> : Signal15<Emitter, R0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, Collector>
 {
-  typedef Signal15<Emitter, R0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, Collector> Signal15;
+  typedef Birnet::Signals::Signal15<Emitter, R0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, Collector> Signal15;
   explicit Signal (Emitter &emitter) :
     Signal15 (emitter)
     {}
@@ -5679,7 +5679,7 @@
 template<class Emitter, typename R0, typename A1, typename A2, typename A3, typename A4, typename A5, typename A6, typename A7, typename A8, typename A9, typename A10, typename A11, typename A12, typename A13, typename A14, typename A15, typename A16, class Collector>
 struct Signal<Emitter, R0 (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16), Collector> : Signal16<Emitter, R0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, Collector>
 {
-  typedef Signal16<Emitter, R0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, Collector> Signal16;
+  typedef Birnet::Signals::Signal16<Emitter, R0, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, Collector> Signal16;
   explicit Signal (Emitter &emitter) :
     Signal16 (emitter)
     {}
--- beast-0.7.1.orig/birnet/birnetutils.cc	2006-12-18 14:58:24.000000000 -0300
+++ beast-0.7.1/birnet/birnetutils.cc	2009-05-31 19:17:42.000000000 -0300
@@ -31,6 +31,8 @@
 #include <algorithm>
 #include <cxxabi.h>
 #include <signal.h>
+#include <cstdio>
+#include <cstring>
 
 #ifndef _
 #define _(s)    s
--- beast-0.7.1.orig/birnet/birnetutils.hh	2006-12-18 14:58:24.000000000 -0300
+++ beast-0.7.1/birnet/birnetutils.hh	2009-05-31 19:14:02.000000000 -0300
@@ -23,6 +23,7 @@
 #include <string>
 #include <vector>
 #include <map>
+#include <cstdarg>
 
 namespace Birnet {
 
--- beast-0.7.1.orig/birnet/tests/sorting.cc	2006-10-21 12:13:41.000000000 -0300
+++ beast-0.7.1/birnet/tests/sorting.cc	2009-05-31 19:17:06.000000000 -0300
@@ -19,6 +19,8 @@
 // #define TEST_VERBOSE
 #include <birnet/birnettests.h>
 #include <math.h>
+#include <cstdlib>
+#include <algorithm>
 
 namespace {
 using namespace Birnet;
--- beast-0.7.1.orig/birnet/tests/strings.cc	2006-12-18 14:58:23.000000000 -0300
+++ beast-0.7.1/birnet/tests/strings.cc	2009-05-31 19:18:26.000000000 -0300
@@ -18,6 +18,8 @@
  */
 //#define TEST_VERBOSE
 #include <birnet/birnettests.h>
+#include <cstdio>
+#include <cstdlib>
 using namespace Birnet;
 
 namespace {
--- beast-0.7.1.orig/birnet/tests/threads.cc	2006-10-21 12:12:11.000000000 -0300
+++ beast-0.7.1/birnet/tests/threads.cc	2009-05-31 19:17:06.000000000 -0300
@@ -18,6 +18,7 @@
  */
 //#define TEST_VERBOSE
 #include <birnet/birnettests.h>
+#include <cstdlib>
 
 namespace {
 using namespace Birnet;
--- beast-0.7.1.orig/bse/Makefile.in	2006-12-27 18:57:38.000000000 -0300
+++ beast-0.7.1/bse/Makefile.in	2009-05-31 19:17:06.000000000 -0300
@@ -422,7 +422,7 @@
 # need -I$(srcdir) for "bseserver.h" in .genprc.c
 # need -I. (builddir) for "bsecore.genidl.hh" in bsecore.cc
 INCLUDES = -I$(top_srcdir) -I$(top_builddir) -I$(srcdir) -I. \
-	$(BSE_CFLAGS) -DG_DISABLE_DEPRECATED -DG_DISABLE_CONST_RETURNS
+	$(BSE_CFLAGS) -DG_DISABLE_CONST_RETURNS
 EXTRA_HEADERS =
 MAINTAINERCLEANFILES = $(GENERATED) $(am__append_2)
 #	-Wl,-Bsymbolic
--- beast-0.7.1.orig/bse/bsecxxplugin.hh	2006-11-26 21:34:30.000000000 -0300
+++ beast-0.7.1/bse/bsecxxplugin.hh	2009-05-31 19:17:06.000000000 -0300
@@ -56,7 +56,7 @@
 #define BSE_CXX_REGISTER_STATIC_HOOK(HookType)  BSE_CXX_REGISTER_HOOK_NODE (HookType, 1)
 #define BSE_CXX_REGISTER_HOOK_NODE(HookType, __static)                  \
   template<class E> static BseExportNode* bse_export_node ();           \
-  template<> static BseExportNode*                                      \
+  template<> BseExportNode*                                      \
   bse_export_node<HookType> ()                                          \
   {                                                                     \
     static BseExportNodeHook hnode = {                                  \
@@ -91,7 +91,7 @@
   (::NameSpace::bse_type_keeper__3##EnumType.get_type ())
 #define BSE_CXX_DECLARE_ENUM(EnumType,EnumName,N,ICode)                 \
   template<class E> static BseExportNode* bse_export_node ();           \
-  template<> static BseExportNode*                                      \
+  template<> BseExportNode*                                      \
   bse_export_node<EnumType> ()                                          \
   {                                                                     \
     static BseExportNodeEnum enode = {                                  \
@@ -145,7 +145,7 @@
   (::NameSpace::bse_type_keeper__1##RecordType.get_type ())
 #define BSE_CXX_DECLARE_RECORD(RecordType)                              \
   template<class E> static BseExportNode* bse_export_node ();           \
-  template<> static BseExportNode*                                      \
+  template<> BseExportNode*                                      \
   bse_export_node<RecordType> ()                                        \
   {                                                                     \
     static BseExportNodeBoxed bnode = {                                 \
@@ -181,7 +181,7 @@
   (::NameSpace::bse_type_keeper__2##SequenceType.get_type ())
 #define BSE_CXX_DECLARE_SEQUENCE(SequenceType)                                  \
   template<class E> static BseExportNode* bse_export_node ();                   \
-  template<> static BseExportNode*                                              \
+  template<> BseExportNode*                                              \
   bse_export_node<SequenceType> ()                                              \
   {                                                                             \
     static BseExportNodeBoxed bnode = {                                         \
@@ -219,7 +219,7 @@
   extern ::Bse::ExportTypeKeeper bse_type_keeper__9##ProcType;
 #define BSE_CXX_REGISTER_PROCEDURE(ProcType)                                    \
   template<class C> static ::BseExportNode* bse_export_node ();                 \
-  template<> static ::BseExportNode*                                            \
+  template<> ::BseExportNode*                                            \
   bse_export_node<Procedure::ProcType> ()                                       \
   {                                                                             \
     static ::BseExportNodeProc pnode = {                                        \
@@ -259,7 +259,7 @@
 #define BSE_CXX_REGISTER_EFFECT(Effect)                                         \
   BSE_CXX_DEFINE_STATIC_DATA (Effect##Base);                                    \
   template<class C> static ::BseExportNode* bse_export_node ();                 \
-  template<> static ::BseExportNode*                                            \
+  template<> ::BseExportNode*                                            \
   bse_export_node<Effect> ()                                                    \
   {                                                                             \
     static ::BseExportNodeClass cnode = {                                       \
--- beast-0.7.1.orig/bse/bsehack.idl	2006-12-27 19:14:44.000000000 -0300
+++ beast-0.7.1/bse/bsehack.idl	2009-05-31 19:22:53.000000000 -0300
@@ -472,8 +472,8 @@
       In  output_channel      = ("Output Channel", "", 0, 0, SFI_MAXINT, 1, ":flagstodo");
       Out error               = ("Error", "", ":flagstodo");
     }
-    signal io_changed ();
     signal probes (ProbeSeq a);
+    signal io_changed ();
     property Real pos_x               = ("Position X", "", ":flagstodo");
     property Real pos_y               = ("Position Y", "", ":flagstodo");
   };
@@ -1448,9 +1448,9 @@
       Info help = "Trigger an installed user action of this janitor.";
       In  action              = ("Action", "", ":flagstodo");
     }
+    signal action (String a, Int b);
     signal progress (Real a);
     signal action_changed (String a, Int b);
-    signal action (String a, Int b);
     signal shutdown ();
     property String ident               = ("Script Identifier", "", ":flagstodo");
     property Bool connected           = ("Connected", "", FALSE, ":flagstodo");
--- beast-0.7.1.orig/bse/bseloader-guspatch.cc	2006-11-25 13:04:31.000000000 -0300
+++ beast-0.7.1/bse/bseloader-guspatch.cc	2009-05-31 19:17:06.000000000 -0300
@@ -22,6 +22,7 @@
 #include <errno.h>
 #include <vector>
 #include <string>
+#include <cstring>
 
 #undef  WITH_GUSPATCH_XINFOS
 static SFI_MSG_TYPE_DEFINE (debug_guspatch, "guspatch", SFI_MSG_DEBUG, NULL);
--- beast-0.7.1.orig/bse/bseprocidl.cc	2006-11-25 13:04:31.000000000 -0300
+++ beast-0.7.1/bse/bseprocidl.cc	2009-05-31 19:17:06.000000000 -0300
@@ -24,6 +24,7 @@
 #include <stdio.h>
 #include <string>
 #include <set>
+#include <cstring>
 
 std::set<std::string> needTypes;
 std::set<std::string> needClasses;
--- beast-0.7.1.orig/bse/bseresamplerimpl.hh	2006-11-25 13:04:33.000000000 -0300
+++ beast-0.7.1/bse/bseresamplerimpl.hh	2009-05-31 19:22:05.000000000 -0300
@@ -23,6 +23,9 @@
 #include <bse/bseresampler.hh>
 #include <birnet/birnet.hh>
 #include <math.h>
+#include <cstdio>
+#include <cstring>
+#include <cstdlib>
 #ifdef __SSE__
 #include <xmmintrin.h>
 #endif
--- beast-0.7.1.orig/bse/bsesequencer.cc	2006-12-26 18:41:25.000000000 -0300
+++ beast-0.7.1/bse/bsesequencer.cc	2009-05-31 19:17:06.000000000 -0300
@@ -30,6 +30,7 @@
 #include <fcntl.h>
 #include <errno.h>
 #include <vector>
+#include <cstring>
 
 /* due to a linker/compiler bug on SuSE 9.2, we need to
  * define extern "C" symbols outside of any C++ namespace,
--- beast-0.7.1.orig/bse/tests/filtertest.cc	2006-12-10 21:19:16.000000000 -0300
+++ beast-0.7.1/bse/tests/filtertest.cc	2009-05-31 19:23:23.000000000 -0300
@@ -26,6 +26,8 @@
 #include "topconfig.h"
 #include <math.h>
 #include <complex>
+#include <cstdio>
+#include <cstdlib>
 
 typedef std::complex<double> Complex;
 using namespace Birnet;
--- beast-0.7.1.orig/bse/tests/firhandle.cc	2006-12-10 13:55:16.000000000 -0300
+++ beast-0.7.1/bse/tests/firhandle.cc	2009-05-31 19:17:06.000000000 -0300
@@ -26,6 +26,7 @@
 #include <math.h>
 #include <complex>
 #include <vector>
+#include <cstdlib>
 
 using std::vector;
 using std::min;
--- beast-0.7.1.orig/bse/tests/resamplehandle.cc	2006-11-28 22:05:01.000000000 -0300
+++ beast-0.7.1/bse/tests/resamplehandle.cc	2009-05-31 19:17:06.000000000 -0300
@@ -24,6 +24,7 @@
 #include <bse/gsldatautils.h>
 #include <bse/bseblockutils.hh>
 #include <vector>
+#include <cstdlib>
 
 using std::vector;
 using std::max;
--- beast-0.7.1.orig/sfi/sficxx.hh	2006-10-05 07:21:50.000000000 -0300
+++ beast-0.7.1/sfi/sficxx.hh	2009-05-31 19:17:06.000000000 -0300
@@ -23,6 +23,7 @@
 #include <sfi/sfi.h>
 #include <string>
 #include <new>
+#include <cstring>
 
 namespace Sfi {
 
--- beast-0.7.1.orig/sfi/sfidl-cxxbase.cc	2005-03-07 03:23:55.000000000 -0300
+++ beast-0.7.1/sfi/sfidl-cxxbase.cc	2009-05-31 19:17:06.000000000 -0300
@@ -23,6 +23,7 @@
 #include <unistd.h>
 #include <errno.h>
 #include <ctype.h>
+#include <cstring>
 #include "sfidl-namespace.hh"
 #include "sfidl-options.hh"
 #include "sfidl-parser.hh"
--- beast-0.7.1.orig/sfi/sfidl-factory.cc	2005-03-07 03:23:55.000000000 -0300
+++ beast-0.7.1/sfi/sfidl-factory.cc	2009-05-31 19:17:06.000000000 -0300
@@ -18,6 +18,7 @@
  */
 #include "sfidl-factory.hh"
 #include "glib-extra.h"
+#include <algorithm>
 
 using namespace Sfidl;
 using namespace std;
--- beast-0.7.1.orig/sfi/sfidl-namespace.cc	2005-03-07 03:23:55.000000000 -0300
+++ beast-0.7.1/sfi/sfidl-namespace.cc	2009-05-31 19:17:06.000000000 -0300
@@ -21,6 +21,7 @@
 #include <list>
 #include <string>
 #include <map>
+#include <algorithm>
 #include "sfidl-namespace.hh"
 #include <sfi/glib-extra.h>
 
--- beast-0.7.1.orig/sfi/sfidl-options.cc	2005-03-07 03:23:55.000000000 -0300
+++ beast-0.7.1/sfi/sfidl-options.cc	2009-05-31 19:17:06.000000000 -0300
@@ -22,6 +22,7 @@
 #include "topconfig.h"
 #include <sfi/glib-extra.h>
 #include <stdio.h>
+#include <cstring>
 
 /* FIXME: should be filled out and written into topconfig.h by configure */
 #define SFIDL_VERSION        BST_VERSION
--- beast-0.7.1.orig/sfi/sfidl-parser.cc	2006-11-14 19:51:36.000000000 -0300
+++ beast-0.7.1/sfi/sfidl-parser.cc	2009-05-31 19:17:06.000000000 -0300
@@ -27,6 +27,9 @@
 #include <iostream>
 #include <set>
 #include <stack>
+#include <cstring>
+#include <cstdlib>
+#include <algorithm>
 
 const std::string
 Sfidl::string_from_int (long long int lli)
--- beast-0.7.1.orig/tests/bse/cxxbinding.cc	2006-10-07 15:41:42.000000000 -0300
+++ beast-0.7.1/tests/bse/cxxbinding.cc	2009-05-31 19:56:11.000000000 -0300
@@ -18,6 +18,7 @@
  */
 #include "bsecxxapi.hh"
 #include <bse/bse.h>
+#include <cstdio>
 #include <unistd.h>
 
 static SfiGlueContext *bse_context = NULL;
--- beast-0.7.1.orig/tests/bse/filtertest.cc	2006-12-03 21:01:08.000000000 -0300
+++ beast-0.7.1/tests/bse/filtertest.cc	2009-05-31 19:55:15.000000000 -0300
@@ -28,6 +28,8 @@
 #include <birnet/birnettests.h>
 #include "topconfig.h"
 #include <errno.h>
+#include <cstdio>
+#include <cstdlib>
 
 using std::string;
 using std::vector;
--- beast-0.7.1.orig/tests/latency/bselatencytest.cc	2006-11-26 13:32:28.000000000 -0300
+++ beast-0.7.1/tests/latency/bselatencytest.cc	2009-05-31 19:54:42.000000000 -0300
@@ -18,6 +18,7 @@
  */
 #include "bselatencytest.genidl.hh"
 #include <sys/time.h>
+#include <cstdio>
 #include <string>
 #include <errno.h>
 
--- beast-0.7.1.orig/tests/perftest.cc	2006-12-11 22:04:29.000000000 -0300
+++ beast-0.7.1/tests/perftest.cc	2009-05-31 19:56:44.000000000 -0300
@@ -21,6 +21,7 @@
 #include <unistd.h>
 #include <sys/time.h>
 #include <time.h>
+#include <cstdio>
 
 static SfiGlueContext *bse_context = NULL;
 
--- beast-0.7.1.orig/tools/bsefcompare.cc	2006-12-03 21:01:06.000000000 -0300
+++ beast-0.7.1/tools/bsefcompare.cc	2009-05-31 19:17:06.000000000 -0300
@@ -28,6 +28,7 @@
 #include <sys/types.h>
 #include <sys/stat.h>
 #include <fcntl.h>
+#include <cstring>
 
 #include "topconfig.h"
 
--- beast-0.7.1.orig/tools/bsefextract.cc	2006-11-04 23:21:30.000000000 -0300
+++ beast-0.7.1/tools/bsefextract.cc	2009-05-31 19:17:06.000000000 -0300
@@ -27,6 +27,8 @@
 #include <errno.h>
 #include <assert.h>
 #include "topconfig.h"
+#include <cstring>
+#include <cstdlib>
 
 #include <map>
 #include <string>
--- beast-0.7.1.orig/tools/bsewavetool.cc	2006-12-11 16:00:07.000000000 -0300
+++ beast-0.7.1/tools/bsewavetool.cc	2009-05-31 19:17:06.000000000 -0300
@@ -34,6 +34,7 @@
 #include <fcntl.h>
 #include <vector>
 #include <map>
+#include <algorithm>
 
 
 namespace BseWaveTool {
--- beast-0.7.1.orig/tools/bwtwave.cc	2006-06-05 10:23:15.000000000 -0300
+++ beast-0.7.1/tools/bwtwave.cc	2009-05-31 19:57:57.000000000 -0300
@@ -28,7 +28,7 @@
 #include <algorithm>
 #include <vector>
 #include <map>
-
+#include <cstdio>
 
 namespace BseWaveTool {
 

