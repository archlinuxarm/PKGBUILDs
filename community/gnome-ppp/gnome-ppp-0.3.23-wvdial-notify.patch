--- src/gnome-ppp-connected.c	2005-02-07 23:23:10.000000000 +0200
+++ src/gnome-ppp-connected.c	2007-07-14 09:00:51.000000000 +0300
@@ -51,6 +51,8 @@
 
 gboolean on_conn_delete_event (GtkWidget *widget, GdkEvent *event, gpointer data)
 {
+	gnome_ppp.connected.show = FALSE;
+	gtk_widget_hide (gnome_ppp.connected.window);
 	return TRUE;
 }
 
--- src/gnome-ppp-wvdial.c	2005-02-01 21:28:25.000000000 +0200
+++ src/gnome-ppp-wvdial.c	2007-07-14 09:01:29.000000000 +0300
@@ -56,13 +56,13 @@
 	
 	g_print ("GNOME PPP: STDERR: %s", line);
 	
-	if (g_strrstr (line, "--> Cannot open") != NULL)
+	if (g_strrstr (line, "Cannot open") != NULL)
 		gtk_label_set_text (GTK_LABEL (gnome_ppp.connecting.msgs), _("Can not open modem."));
 	
-	if (g_strrstr (line, "--> Modem not responding") != NULL)
+	if (g_strrstr (line, "Modem not responding") != NULL)
 		gtk_label_set_text (GTK_LABEL (gnome_ppp.connecting.msgs), _("Modem not responding."));
 	
-	if (g_strrstr (line, "--> Please enter password") != NULL) {
+	if (g_strrstr (line, "Please enter password") != NULL) {
 		const gchar *password;
 		
 		gtk_label_set_text (GTK_LABEL (gnome_ppp.connecting.msgs), _("Sending password..."));
@@ -75,7 +75,7 @@
 		g_io_channel_shutdown (in, TRUE, NULL);
 	}
 	
-	if (g_strrstr (line, "--> Configuration does not specify a valid password.") != NULL)
+	if (g_strrstr (line, "Configuration does not specify a valid password.") != NULL)
 		gtk_label_set_text (GTK_LABEL (gnome_ppp.connecting.msgs), _("No valid password."));
 	
 	if (g_strrstr (line, "ATM") != NULL) {
@@ -90,13 +90,13 @@
 		g_free (message);
 	}
 	
-	if (g_strrstr (line, "--> Carrier detected.  Waiting for prompt.") != NULL)
+	if (g_strrstr (line, "Carrier detected.  Waiting for prompt.") != NULL)
 		gtk_label_set_text (GTK_LABEL (gnome_ppp.connecting.msgs), _("Waiting for prompt..."));
 	
 	if (g_strrstr (line, "Username:") != NULL)
 		gtk_label_set_text (GTK_LABEL (gnome_ppp.connecting.msgs), _("Authenticating..."));
 	
-	if (g_strrstr (line, "--> Using interface") != NULL) {
+	if (g_strrstr (line, "Using interface") != NULL) {
 		gchar iface[255];
 		gchar tmp[255];
 		
@@ -104,14 +104,14 @@
 		gtk_label_set_text (GTK_LABEL (gnome_ppp.details.interface), &iface[0]);
 	}
 	/* in case we are using auto reconnect */
-	if (g_strrstr (line, "--> Auto Reconnect") != NULL) {
+	if (g_strrstr (line, "Auto Reconnect") != NULL) {
 		gtk_label_set_text (GTK_LABEL (gnome_ppp.connecting.msgs), _("Reconnecting..."));
 		gtk_widget_hide (gnome_ppp.gnome_ppp.window);
 		gtk_widget_hide (gnome_ppp.details.window);
 		gtk_widget_show (gnome_ppp.connecting.window);		
 	}
 	/* we're about to connect (pppd) */
-	if (g_strrstr (line, "--> Starting pppd") != NULL) {
+	if (g_strrstr (line, "Starting pppd") != NULL) {
 		gboolean minimize;
 				
 		minimize = gtk_toggle_button_get_active (GTK_TOGGLE_BUTTON (gnome_ppp.setup.minimize));
@@ -135,8 +135,8 @@
 		gnome_ppp.connected.update = g_timeout_add (1000, (GSourceFunc)timer, NULL);
 	}
 	
-	if (g_strrstr (line, "--> The PPP daemon has died") != NULL
-		|| g_strrstr (line, "--> Disconnecting") != NULL) {
+	if (g_strrstr (line, "The PPP daemon has died.") != NULL
+		|| g_strrstr (line, "Disconnecting") != NULL) {
 	
 		if (gnome_ppp.connected.update) {
 			g_source_remove (gnome_ppp.connected.update);
