#! /bin/sh /usr/share/dpatch/dpatch-run
## dot-fixces.dpatch by Unknown
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: Fix format strings to always use . as decimal separator, see 
## DP: https://sourceforge.jp/tracker/index.php?func=detail&aid=12498&group_id=1720&atid=6435
## DP: Forwarded to https://sourceforge.jp/tracker/index.php?func=detail&aid=12544&group_id=1720&atid=6435

@DPATCH@
diff -urNad gsynaptics-0.9.14~/src/gsynaptics.c gsynaptics-0.9.14/src/gsynaptics.c
--- gsynaptics-0.9.14~/src/gsynaptics.c	2008-02-28 23:21:17.000000000 +0100
+++ gsynaptics-0.9.14/src/gsynaptics.c	2008-05-17 08:36:54.000000000 +0200
@@ -713,8 +713,9 @@
 	if (priv->synclient)
 	{
 		gchar *command;
-		command = g_strdup_printf ("synclient AccelFactor=%f",
-			       		   (gdouble)value / 1000);
+		char strval[G_ASCII_DTOSTR_BUF_SIZE];
+		g_ascii_dtostr(strval, sizeof(strval), (gdouble)value / 1000);
+		command = g_strdup_printf ("synclient AccelFactor=%s", strval);
 		g_spawn_command_line_async (command, NULL);
 		g_free (command);
 	}
@@ -734,8 +735,9 @@
 	if (priv->synclient)
 	{
 		gchar *command;
-		command = g_strdup_printf ("synclient MaxSpeed=%f",
-			       		   (gdouble)value / 1000);
+		char strval[G_ASCII_DTOSTR_BUF_SIZE];
+		g_ascii_dtostr(strval, sizeof(strval), (gdouble)value / 1000);
+		command = g_strdup_printf ("synclient MaxSpeed=%s", strval);
 		g_spawn_command_line_async (command, NULL);
 		g_free (command);
 	}
@@ -755,8 +757,9 @@
 	if (priv->synclient)
 	{
 		gchar *command;
-		command = g_strdup_printf ("synclient MinSpeed=%f",
-			       		   (gdouble)value / 1000);
+		char strval[G_ASCII_DTOSTR_BUF_SIZE];
+		g_ascii_dtostr(strval, sizeof(strval), (gdouble)value / 1000);
+		command = g_strdup_printf ("synclient MinSpeed=%s", strval);
 		g_spawn_command_line_async (command, NULL);
 		g_free (command);
 	}
@@ -822,8 +825,10 @@
 	if (priv->synclient)
 	{
 		gchar *command;
-		command = g_strdup_printf ("synclient CoastingSpeedThreshold=%f",
-			       		   thresh);
+		char strval[G_ASCII_DTOSTR_BUF_SIZE];
+		g_ascii_dtostr(strval, sizeof(strval), thresh);
+		command = g_strdup_printf ("synclient CoastingSpeed=%s",
+			       		   strval);
 		g_spawn_command_line_async (command, NULL);
 		g_free (command);
 	}
@@ -843,8 +848,9 @@
 	if (priv->synclient)
 	{
 		gchar *command;
-		command = g_strdup_printf ("synclient CircScrollDelta=%f",
-			       		   (gdouble)delta / 1000);
+		char strval[G_ASCII_DTOSTR_BUF_SIZE];
+		g_ascii_dtostr(strval, sizeof(strval), (gdouble)delta / 1000);
+		command = g_strdup_printf ("synclient CircScrollDelta=%s", strval);
 		g_spawn_command_line_async (command, NULL);
 		g_free (command);
 	}
